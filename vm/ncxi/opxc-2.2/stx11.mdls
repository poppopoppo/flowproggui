§ exn # a 
	∎| 
§ is_eq { a b } 
	∐ a'=b' .
		∎ { a b } 
	∐. . 
		∎|
§ is_ge { a b } 
	∐ b'=<a' . 
		∎ { a b } 
	∐. . 
		∎|
§§ pf
	§ s8 =^ 
		0' // 
	§ st_s8 =^ 
		0st' // 
	§ d =^ 
		0d' //
	∎∎
§ blt_im◂◂S # { b i } 
	_st◂◂S {} ⊢ s 
	_pf_x◂◂pf.st_s8 { b i { s } } ⊢ { b i _ } 
	∎ { b i }

--\
§ exc_q # { v i a } 
	_alc_o { v i } ⊢ { v b } 
	_alc_i { v a } ⊢ { v i } 
	∎ { v i b }
--/
--§ exc_q = _alc_e◂◂(_ctr◂◂(\{ a b } . { b a }))
§ lod_q # { v i } 
	_alc_o { v i } ⊢ { v a } 
	$ a ⊢ a,a0 
	_alc_i { v a } ⊢ { v i } 
	∎ { v i a0 }
§ to_err # _ 
	∎|
§ to_err_T◂◂T # _ 
	∎| 
§§ CST 
	§ KB = 1024r 
	§ MB = 1048576r 
	§ not_0 = 0xffffffffffffffffr
	§ MAX = 0x0000ffffffffffffr
	∎∎
§§ cla  
	§ l_i # { {} k } 
		$ k ⊢ k,k0 
		∎ { k0 k }
	§ l # { V p } 
		_clc_o { V p } ⊢ { V k } 
		$ k ⊢ k,k0 
		_clc_i { V k0 } ⊢ { V p } 
		∎ { V p k }  
	§ u # { v w } 
		∎ { {} v } 
	§ x # { v w } 
		∎ { w v }  
	∎∎
§§ Clr 
	§ u # { V { p k } } 
		_clc_o { V p } ⊢ { V _ } 
		_clc_i { V k } ⊢ { V p } 
		∎ { V p }
	§ x # { V p k } 
		_clc_o { V p } ⊢ { V e } 
		_clc_i { V k } ⊢ { V p } 
		∎ { V p e }
	∎∎ 
§ eml = _emt.f 
--§ eml = _id
§ eml_v◂◂F # { e v } 
	F { e v } ⊢ { e v s } 
	_emt.f s ⊢ _ 
	∎ { e v }
§ eml_v◂◂F # x 
	∎ x 	
§ @.arr_of_lst_i { c i l } 
	$ l ⊢ 
	∐ _cns◂{ a l } . 
		_inc c ⊢ c 
		arr_of_lst_i { c i l } ⊢ { c v }
		_dec c ⊢ c 
		exc_q { v c a } ⊢ { v c _ } 
		∎ { c v } 
	∐. _nil◂{} . 
		_mk_arr { c i } ⊢ { c _ v } 
		∎ { c v } 
§ arr_of_lst # { l i } 
	arr_of_lst_i { %[ 0r ] i l } ⊢ { c v } 
	∎ v  

§ smt o 
	∐ o ⊢ _some◂a .
		∎ a 
	∐. . 
		∎| 
§ smt_err◂◂E o 
	∐ o ⊢ _some◂a .
		∎ a 
	∐. . 
		_emt_im.f◂◂"smt_err 0" {} ⊢ {} 
		_emt_im.f◂◂E {} ⊢ {} 
		∎| 
§ nnt # o 
	∐ o ⊢ _none◂{} .
		∎ {} 
	∐. . 
		∎| 
§ nnt_emt # { o x } 
	∐ o ⊢ _none◂{} .
		∎ x
	∐. . 
		_emt_im.f◂◂"nnt_emt 0" {} ⊢ {} 
		_emt.f x ⊢ _ 
		∎| 
§ nnt_err { o e }  
	∐ o ⊢ _none◂{} .
		∎ {} 
	∐. . 
		_emt_im.f◂◂"nnt_err 0" {} ⊢ {} 
		_emt.f e ⊢ _ 
		∎| 
§ nnt_err_T◂◂E o 
	∐ o ⊢ _none◂{} . 
		∎ {} 
	∐. . 
		_emt_im.f◂◂"nnt_err_T" {} ⊢ {} 
		_emt_im.f◂◂E {} ⊢ {} 
		∎| 
§ set_q # { v i a } 
	exc_q { v i a } ⊢ { v i _ } 
	∎ { v i }
§ set_o # { v i a } 
	$ _some◂a ⊢ o 
	set_q { v i o } ⊢ { v i } 
	∎ { v i }
§ get_q = lod_q 
§ exc_q = exc_q
§ mk_arr = _mk_arr
§ arr_of_lst_len # l 
  arr_of_lst l ⊢ a 
  _arr_len a ⊢ { a n } 
  ∎ { a n }

§ lod_tv { a i } 
	lod_q { a i } ⊢ { a i v } 
	$ v ⊢ 
	∐ _some◂v . 
		∎ { a i v } 
	∐. _none◂{} .  
		_emt_im.f◂◂"lod_tv" {} ⊢ {} 
		_arr_len a ⊢ { a l } 
		_emt.f l ⊢ _ 
		_emt.f i ⊢ _ 
		∎| 

§ set_tv # { a i v } 
  $ _some◂v ⊢ v 
  exc_q { a i v } ⊢ { a i v } 
  nnt v ⊢ {} 
  ∎ { a i }
§ get_tv # { a i } 
	exc_q { a i ‹› } ⊢ { a i v } 
	∐ v ⊢ _some◂v . 
		∎ { a i v }
	∐. .
		∎|
§ cst_none # {} 
	∎ ‹› 
§ ini_tv_n # n 
	_mk_arr_cst◂◂cst_none n ⊢ { n a } 
	∎ { n a }

§ @.byt ^= 
	∐. _byt ⊢ { b } 
		∎ _some◂b 
§§ chr 
	§ nl = 10r 
	§ tab = 9r 
	§ slsh = 92r 
	§ dq = 34r 
	§ sq = 39r 
	§ a = 97r
	§ n = 110r 
	§ t = 116r 
	§ z = 122r
	§ A = 65r
	§ Z = 90r
	§ d_0 = 48r 
	§ d_9 = 57r
	§ null = 0r 
	∎∎ 
§ PS = 4096r 
§ HP = 2048r 
§ KB = 1024r 
§ non = _none 
¶ sum3 ◂ a',b',c' 
	∐ c0 : a' 
	∐ c1 : b' 
	∐ c2 : c'

¶ sum2 a0',a1' 
	∐ in0 : a0' 
	∐ in1 : a1' 
§ op_x◂◂F # k 
	$ k ⊢ k,k0 
	F k0 ⊢ a 
	∎ { k a } 
§ op_x_v◂◂F # { v k } 
	$ k ⊢ k,k0 
	F { v k0 } ⊢ { v a } 
	∎ { v k a }
§ @.eof ^=
	∐ _byt !| ⊢ { _ } 
		∎ _none◂{}
	∐. ⊢ { } 
		∎ _some◂{} 
§ @.nl_eof ^=
	∐# "\n" ⊢ { {} } 
		∎ _some◂{} 
	∐.# eof ⊢ { {} } 
		∎ _some◂{}
§ @.for◂◂F { v n i }
	∐ n'<>i' . 
		$ i ⊢ i,i0 
		F { v i0 } ⊢ v 
		_inc i ⊢ i 
		for◂◂F { v n i } ⊢| 
	∐. . 
		∎ { v n } 
§ for_0◂◂F # { v n } 
	for◂◂F { v n %[ 0r ] } ⊢|

§§ bl 
	¶ t 
		∐ f : {}
		∐ t : {} 
	§ of_r r 
		∐ r'=0r .
			∎ f◂{} 
		∐. .
			∎ t◂{} 
	§ and { b0 b1 } 
		∐ b0 ⊢ t◂{}; b1 ⊢ t◂{} . 
			∎ t◂{}
		∐. . 
			∎ f◂{}
	§ or { b0 b1 } 
		∐ b0 ⊢ f◂{}; b1 ⊢ f◂{} . 
			∎ f◂{}
		∐. . 
			∎ t◂{}
	§ sub { b0 b1 } 
		∐ b1 ⊢ f◂{} . 
			∎ b0 
		∐. . 
			∎ f◂{}
	§ not b 
		∐ b ⊢ f◂{} . 
			∎ t◂{} 
		∐. . 
			∎ f◂{}
	§ is_t b 
		∐ b ⊢ t◂{} . 
			∎ {} 
		∐. . 
			∎|	
	∎∎
§ t = bl.t 
§ f = bl.f
§§ BST_s8 
	¶ 
		@.pt v' = _ref.t◂(nd◂v')
		@.nd v'
			∐ p : { _opn◂(pt◂v') { _s8 v' } _opn◂(pt◂v') } 
	¶ t v' = pt◂v'
	§ ini # {} 
		∎ ‹›
	§ is_empty T 
		$ T ⊢ 
		∐ _some◂t .
			∎ { ‹ t › bl.t◂{} }
		∐. _none◂{} .
			∎ { ‹› bl.f◂{} }
	§ @.asc { t k0 } 
		$ t ⊢ 
		∐ _some◂t . 
			_ref.o t ⊢ { Cl p◂{ l { k v } r } } 
			_cmp_s8 { k k0 } ⊢ { k k0 c } 
			=+ c' 
			∐ 
				$ r ⊢ r,r0 
				_ref.i { Cl p◂{ l { k v } r } } ⊢ _
				asc { r0 k0 } ⊢| 
			∐ 
				$ v ⊢ v,v0 
				_ref.i { Cl p◂{ l { k v } r } } ⊢ _
				∎ { k0 ‹ v0 › }
			∐. 
				$ l ⊢ l,l0 
				_ref.i { Cl p◂{ l { k v } r } } ⊢ _
				asc { l0 k0 } ⊢| 
		∐. _none◂{} . 
			∎ { k0 ‹› }
  § asc # { T k0 } 
    $ T ⊢ T,t 
    asc { t k0 } ⊢ { k0 o } 
    ∎ { T { k0 o } } 
	§ @.set { t { k0 v0 } } 
		_ref.o t ⊢ { Cl p◂{ l { k v } r } } 
		_cmp_s8 { k k0 } ⊢ { k k0 c } 
		=+ c' 
		∐ 
			$ r ⊢ 
			∐ _some◂r . 
				$ r ⊢ r,r0 
				_ref.i { Cl p◂{ l { k v } ‹ r › } } ⊢ _
				set { r0 { k0 v0 } } ⊢| 
			∐. _none◂{} . 
				$ k0 ⊢ k0,k1 
				_ref.mk p◂{ ‹› { k1 v0 } ‹› } ⊢ r1
				_ref.i { Cl p◂{ l { k v } ‹ r1 › } } ⊢ _
				∎ { k0 ‹› } 
		∐  
			_ref.i { Cl p◂{ l { k v0 } r } } ⊢ _
			∎ { k0 ‹ v › }
		∐. 
			$ l ⊢ 
			∐ _some◂l . 
				$ l ⊢ l,l0 
				_ref.i { Cl p◂{ ‹ l › { k v } r } } ⊢ _
				set { l0 { k0 v0 } } ⊢| 
			∐. _none◂{} . 
				$ k0 ⊢ k0,k1 
				_ref.mk p◂{ ‹› { k1 v0 } ‹› } ⊢ l1
				_ref.i { Cl p◂{ ‹ l1 › { k v } r } } ⊢ _
				∎ { k0 ‹› } 
	§ set { t { k0 v0 } }	
		$ t ⊢ 
		∐ _some◂t . 
			$ t ⊢ t,t0 
			set { t0 { k0 v0 } } ⊢ { k0 o } 
			∎ { ‹ t › { k0 o } }
		∐. _none◂{} . 
			$ k0 ⊢ k0,k1 
			_ref.mk p◂{ ‹› { k1 v0 } ‹› } ⊢ t 
			∎ { ‹ t › { k0 ‹› } }
	§ @.get_m { T l r } 
		_ref.o l ⊢ { Cl p◂{ l1 { k v } r1 } }
		$ r1 ⊢ 
		∐ _some◂r1 . 
			$ r1 ⊢ r1,r2 
			_ref.i { Cl p◂{ l1 { k v } ‹ r1 › } } ⊢ _ 
			get_m { T r2 r } ⊢| 
		∐. _none◂{} .
			_ref.i { Cl p◂{ l1 { k v } ‹ r › } } ⊢ _ 
			∎ T 
	§ get_r # { T w o } 
		_ref.o w ⊢ { Cl p◂{ l { k v } _ } }
		_ref.i { Cl p◂{ l { k v } o } } ⊢ _
		∎ T  
	§ get_l # { T w o } 
		_ref.o w ⊢ { Cl p◂{ _ { k v } r } }
		_ref.i { Cl p◂{ o { k v } r } } ⊢ _ 
		∎ T  
	§ get_e # { _ T o } 
		∎ o
	§	@.get_T◂◂F { T x t k0 } 
			_ref.o t ⊢ { Cl p◂{ l { k v } r } } 
			_cmp_s8 { k k0 } ⊢ { k k0 c } 
			=+ c' 
			∐ 
				$ r ⊢ 
				∐ _some◂r .          
          $ r ⊢ r,r0 
					_ref.i { Cl p◂{ l { k v } ‹ r › } } ⊢ t
					get_T◂◂get_r { T t r0 k0 } ⊢|
        ∐. _none◂{} . 
					_ref.i { Cl p◂{ l { k v } ‹› } } ⊢ t
					∎ { T { k0 ‹› } }
			∐  
        $ v ⊢ v,v0 
				_ref.i { Cl p◂{ ‹› { k v0 } ‹› } } ⊢ _
        ∐ l ⊢ _none◂{}; r ⊢ _none◂{} . 
					F { T x ‹› } ⊢ T
					∎ { T { k0 ‹ v › } }
				∐ l ⊢ _some◂l; r ⊢ _none◂{} . 
					F { T x ‹ l › } ⊢ T 
					∎ { T { k0 ‹ v › } }
				∐ l ⊢ _none◂{}; r ⊢ _some◂r . 
					F { T x ‹ r › } ⊢ T  
					∎ { T { k0 ‹ v › } }
				∐. l ⊢ _some◂l; r ⊢ _some◂r . 
          $ l ⊢ l,l0 
					get_m { T l0 r } ⊢ T 
					F { T x ‹ l › } ⊢ T 
					∎ { T { k0 ‹ v › } }			
			∐. 
				$ l ⊢ 
				∐ _some◂l . 
					$ l ⊢ l,l0 
					_ref.i { Cl p◂{ ‹ l › { k v } r } } ⊢ t
					get_T◂◂get_l { T t l0 k0 } ⊢|
				∐. _none◂{} . 
					_ref.i { Cl p◂{ ‹› { k v } r } } ⊢ t
					∎ { T { k0 ‹› } }  
		§ get { T k0 } 
			$ T ⊢ 
			∐ _some◂T . 
				$ T ⊢ T,t,t0 
        get_T◂◂get_e { ‹ T › t0 t k0 } ⊢| 
			∐. _none◂{} . 
				∎ { ‹› { k0 ‹› } } 
	
	§ @.rpc t
		$ t ⊢ 
		∐ _some◂t . 
			_ref.o t ⊢ { Cl p◂{ l { k v } r } } 
			$ l ⊢ l,l0 
			$ r ⊢ r,r0 
			$ { k v } ⊢ { k v },k_v 
			_ref.i { Cl p◂{ l { k v } r } } ⊢ t 
			rpc l0 ⊢ { _ l1 } 
			rpc r0 ⊢ { _ r1 } 
			_ref.mk p◂{ l1 k_v r1 } ⊢ t1 
			∎ { ‹ t › ‹ t1 › } 
		∐. _none◂{} . 
			∎ { ‹› ‹› } 
  § @.itr◂◂F { t e } 
		$ t ⊢ 
		∐ _some◂t . 
			_ref.o t ⊢ { Cl p◂{ l { k v } r } } 
			$ l ⊢ l,l0 
			$ r ⊢ r,r0 
			$ { k v } ⊢ { k v },k_v 
			_ref.i { Cl p◂{ l { k v } r } } ⊢ t 
			F { e k_v } ⊢ e 
			itr◂◂F { l0 e } ⊢ { _ e } 
			itr◂◂F { r0 e } ⊢ { _ e } 
			∎ { ‹ t › e } 
		∐. _none◂{} . 
			∎ { ‹› e } 
	§ @.fld_i◂◂F { t e } 
		$ t ⊢ 
		∐ _some◂t . 
			_ref.o t ⊢ { _ p◂{ l { k v } r } } 
			F { e { k v } } ⊢ e 
			fld_i◂◂F { l e } ⊢ e 
			fld_i◂◂F { r e } ⊢ e 
			∎ e 
		∐. _none◂{} . 
			∎ e
	§ fld = fld_i 
	§ main0 {} 
		ini {} ⊢ B 
		set { B { %[ "" ] %[ 65r ] } } ⊢ { B _ } 
		∎ B
	§ main _ 
		main0 {} ⊢ B0 
		
			∎ {} 
	∎∎
§§ BST_r64 
	¶ k = _r64 
	¶ 
		@.pt v' = _ref.t◂(nd◂v') 
		@.nd v'
			∐ p : { _opn◂(pt◂v') { k v' } _opn◂(pt◂v') } 
	¶ t v' = pt◂v' 
	§ ini # {} 
		∎ ‹› 
	§ is_empty T 
		∐ T ⊢ _none◂{} . 
			∎ { ‹› bl.t◂{} } 
		∐. . 
			∎ { T bl.f◂{} }
	§ @.asc { t k0 } 
		$ t ⊢ 
		∐ _some◂t . 
			_ref.o t ⊢ { Cl p◂{ l { k v } r } } 
			∐ k'=k0' .
				$ v ⊢ v,v0 
				_ref.i { Cl p◂{ l { k v } r } } ⊢ _
				∎ { k0 ‹ v0 › }
			∐ k'=<k0' .
				$ r ⊢ r,r0 
				_ref.i { Cl p◂{ l { k v } r } } ⊢ _
				asc { r0 k0 } ⊢| 
			∐. .
				$ l ⊢ l,l0 
				_ref.i { Cl p◂{ l { k v } r } } ⊢ _
				asc { l0 k0 } ⊢| 
		∐. _none◂{} . 
			∎ { k0 ‹› }
  § asc # { T k0 } 
    $ T ⊢ T,t 
    asc { t k0 } ⊢ { k0 o } 
    ∎ { T { k0 o } } 
	§ @.set { t { k0 v0 } } 
		_ref.o t ⊢ { Cl p◂{ l { k v } r } } 
		∐ k'=k0' . 
			_ref.i { Cl p◂{ l { k v0 } r } } ⊢ _
			∎ { k0 ‹ v › }
		∐ k'=<k0' .
			$ r ⊢ 
			∐ _some◂r . 
				$ r ⊢ r,r0 
				_ref.i { Cl p◂{ l { k v } ‹ r › } } ⊢ _
				set { r0 { k0 v0 } } ⊢| 
			∐. _none◂{} . 
				$ k0 ⊢ k0,k1 
				_ref.mk p◂{ ‹› { k1 v0 } ‹› } ⊢ r1
				_ref.i { Cl p◂{ l { k v } ‹ r1 › } } ⊢ _
				∎ { k0 ‹› } 
		∐. .
			$ l ⊢ 
			∐ _some◂l . 
				$ l ⊢ l,l0 
				_ref.i { Cl p◂{ ‹ l › { k v } r } } ⊢ _
				set { l0 { k0 v0 } } ⊢| 
			∐. _none◂{} . 
				$ k0 ⊢ k0,k1 
				_ref.mk p◂{ ‹› { k1 v0 } ‹› } ⊢ l1
				_ref.i { Cl p◂{ ‹ l1 › { k v } r } } ⊢ _
				∎ { k0 ‹› } 
	§ set { t { k0 v0 } }	
		$ t ⊢ 
		∐ _some◂t . 
			$ t ⊢ t,t0 
			set { t0 { k0 v0 } } ⊢ { k0 o } 
			∎ { ‹ t › { k0 o } }
		∐. _none◂{} . 
			$ k0 ⊢ k0,k1 
			_ref.mk p◂{ ‹› { k1 v0 } ‹› } ⊢ t 
			∎ { ‹ t › { k0 ‹› } }
	§ @.get_m { T l r } 
		_ref.o l ⊢ { Cl p◂{ l1 { k v } r1 } }
		$ r1 ⊢ 
		∐ _some◂r1 . 
			$ r1 ⊢ r1,r2 
			_ref.i { Cl p◂{ l1 { k v } ‹ r1 › } } ⊢ _ 
			get_m { T r2 r } ⊢| 
		∐. _none◂{} .
			_ref.i { Cl p◂{ l1 { k v } ‹ r › } } ⊢ _ 
			∎ T 
	§ get_r # { T w o } 
		_ref.o w ⊢ { Cl p◂{ l { k v } _ } }
		_ref.i { Cl p◂{ l { k v } o } } ⊢ _ 
		∎ T  
	§ get_l # { T w o } 
		_ref.o w ⊢ { Cl p◂{ _ { k v } r } }
		_ref.i { Cl p◂{ o { k v } r } } ⊢ _ 
		∎ T  
	§ get_e # { _ T o } 
			∎ o
	§	@.get_T◂◂F { T x t k0 } 
			_ref.o t ⊢ { Cl p◂{ l { k v } r } } 
			∐ k'=k0' . 
        $ v ⊢ v,v0 
				_ref.i { Cl p◂{ ‹› { k v0 } ‹› } } ⊢ _
        ∐ l ⊢ _none◂{}; r ⊢ _none◂{} . 
					F { T x ‹› } ⊢ T
					∎ { T { k0 ‹ v › } }
				∐ l ⊢ _some◂l; r ⊢ _none◂{} . 
					F { T x ‹ l › } ⊢ T 
					∎ { T { k0 ‹ v › } }
				∐ l ⊢ _none◂{}; r ⊢ _some◂r . 
					F { T x ‹ r › } ⊢ T  
					∎ { T { k0 ‹ v › } }
				∐. l ⊢ _some◂l; r ⊢ _some◂r . 
          $ l ⊢ l,l0 
					get_m { T l0 r } ⊢ T 
					F { T x ‹ l › } ⊢ T 
					∎ { T { k0 ‹ v › } }			
			∐ k'=<k0' .
				$ r ⊢ 
				∐ _some◂r .          
          $ r ⊢ r,r0 
					_ref.i { Cl p◂{ l { k v } ‹ r › } } ⊢ t
					get_T◂◂get_r { T t r0 k0 } ⊢|
        ∐. _none◂{} . 
					_ref.i { Cl p◂{ l { k v } ‹› } } ⊢ t
					∎ { T { k0 ‹› } }
			∐. . 
				$ l ⊢ 
				∐ _some◂l . 
					$ l ⊢ l,l0 
					_ref.i { Cl p◂{ ‹ l › { k v } r } } ⊢ t
					get_T◂◂get_l { T t l0 k0 } ⊢|
				∐. _none◂{} . 
					_ref.i { Cl p◂{ ‹› { k v } r } } ⊢ t
					∎ { T { k0 ‹› } }  
		§ get { T k0 } 
			$ T ⊢ 
			∐ _some◂T . 
				$ T ⊢ T,t,t0 
        get_T◂◂get_e { ‹ T › t0 t k0 } ⊢| 
			∐. _none◂{} . 
				∎ { ‹› { k0 ‹› } } 
	 
	§ @.rpc t
		$ t ⊢ 
		∐ _some◂t . 
			_ref.o t ⊢ { Cl p◂{ l { k v } r } } 
			$ l ⊢ l,l0 
			$ r ⊢ r,r0 
			$ { k v } ⊢ { k v },k_v 
			_ref.i { Cl p◂{ l { k v } r } } ⊢ t 
			rpc l0 ⊢ { _ l1 } 
			rpc r0 ⊢ { _ r1 } 
			_ref.mk p◂{ l1 k_v r1 } ⊢ t1 
			∎ { ‹ t › ‹ t1 › } 
		∐. _none◂{} . 
			∎ { ‹› ‹› } 
  § @.itr◂◂F { t e } 
		$ t ⊢ 
		∐ _some◂t . 
			_ref.o t ⊢ { C p◂{ l { k v } r } } 
			$ l ⊢ l,l0 
			$ r ⊢ r,r0 
			$ { k v } ⊢ { k v },k_v 
			_ref.i { C p◂{ l { k v } r } } ⊢ t 
			F { e k_v } ⊢ e 
			itr◂◂F { l0 e } ⊢ { _ e } 
			itr◂◂F { r0 e } ⊢ { _ e } 
			∎ { ‹ t › e } 
		∐. _none◂{} . 
			∎ { ‹› e } 
	§ @.fld_i◂◂F { t e } 
		$ t ⊢ 
		∐ _some◂t . 
			_ref.o t ⊢ { _ p◂{ l { k v } r } } 
			F { e { k v } } ⊢ e 
			fld_i◂◂F { l e } ⊢ e 
			fld_i◂◂F { r e } ⊢ e 
			∎ e 
		∐. _none◂{} . 
			∎ e
	§ fld = fld_i
	∎∎
  

-\
unsigned long
    hash(unsigned char *str)
    {
        unsigned long hash = 5381;
        int c;

        while (c = *str++)
            hash = ((hash << 5) + hash) + c; /* hash * 33 + c */

        return hash;
    }
-/

§§ rp8 
	¶ @.t 
		∐ nd : { t _r64 t } 
		∐ lf : _s8 
		∐ st_lf : _st◂_s8
		∐ e : {} 
		∐ chr : _r64 
	
	§ of_s8◂s = lf◂s
	§ of_st_s8◂s = st_lf◂s
	§ len r 
		$ r ⊢ 
		∐ nd◂{ r0 l r1 } .
			$ l ⊢ l,l0 
			∎ { nd◂{ r0 l0 r1 } l }
		∐ chr◂c .
			∎ { chr◂c %[ 1r ] }  
    ∐ e◂{} . 
			∎ { e◂{} %[ 0r ] } 
		∐ st_lf◂s . 
			_st_s8_len s ⊢ { s l } 
			∎ { st_lf◂s l }
		∐. lf◂s . 
			_s8_len s ⊢ { s l } 
			∎ { lf◂s l }
	§ add_s8 # { e s } 
		_s8_len s ⊢ { s l } 
		len e ⊢ { e le } 
		_add { l le } ⊢ { l le } 
		∎ nd◂{ %e %l lf◂%s }  
	§ pfx_s8 { s e } 
		_s8_len s ⊢ { s l } 
		len e ⊢ { e le } 
		_add { l le } ⊢ { l le } 
		∎ nd◂{ lf◂%s %l %e }
	§ add_st_s8 # { e s } 
		_st_s8_len s ⊢ { s l } 
		len e ⊢ { e le } 
		_add { l le } ⊢ { l _ } 
		∎ nd◂{ %e %l st_lf◂%s }  
	§ add_st_s8_im◂◂S # e 
		_st◂◂S {} ⊢ st 
		_st_s8_len st ⊢ { st l } 
		len e ⊢ { e le } 
		_add { l le } ⊢ { l _ } 
		∎ nd◂{ %e %l st_lf◂%st }  
	§ pfx_st_s8 { s e } 
		_st_s8_len s ⊢ { s l } 
		len e ⊢ { e le } 
		_add { l le } ⊢ { l _ } 
		∎ nd◂{ st_lf◂%s %l %e }
	§ add_chr # { e c } 
		len e ⊢ { e le } 
		_inc le ⊢ le 
		∎ nd◂{ %e %le chr◂%c } 
	§ pfx_chr # { c e } 
		len e ⊢ { e le } 
		_inc le ⊢ le 
		∎ nd◂{ chr◂%c le e } 
	§ cct # { r0 r1 }
		len r0 ⊢ { r0 l0 } 
		len r1 ⊢ { r1 l1 } 
		_add { l0 l1 } ⊢ { l0 l1 } 
		∎ nd◂{ r0 l0 r1 }
	 
	§ @.mk_s8_i { r s i }
		$ r ⊢ 
		∐ nd◂{ r0 l r1 } .
			mk_s8_i { r0 s i } ⊢ { r0 s i } 
			mk_s8_i { r1 s i } ⊢ { r1 s i }
			∎ { nd◂{ r0 l r1 } s i }
		∐ e◂{} . 
			∎ { e◂{} s i } 
		∐ chr◂c . 
			_sts { s i c } ⊢ { s i c }
			_inc i ⊢ i
			∎ { chr◂%c s i }
		∐ st_lf◂s0 . 
			_pf_x◂◂pf.st_s8 { s i { s0 } } ⊢ { s i { s0 } } 
			∎ { st_lf◂%s0 s i } 
		∐. lf◂s0 . 
			_pf_x◂◂pf.s8 { s i { s0 } } ⊢ { s i { s0 } } 
			∎ { lf◂%s0 s i } 
	§ mk_s8 # r 
		len r ⊢ { r l }
		_mlc_s8 l ⊢ { l s }
		mk_s8_i { r s %[ 0r ] } ⊢ { r s i }
		∎ { r s }
	§ @.to_s8_i { r s i }
		$ r ⊢ 
		∐ nd◂{ r0 lm r1 } .
			$ lm ⊢ _ 
			to_s8_i { r0 s i } ⊢ { s i } 
			to_s8_i { r1 s i } ⊢|
		∐ e◂{} . 
			∎ { s i } 
		∐ chr◂c . 
			_sts { s i c } ⊢ { s i _ }
			_inc i ⊢ i
			∎ { s i }
		∐ st_lf◂s0 . 
			_pf_x◂◂pf.st_s8 { s i { s0 } } ⊢ { s i { _ } } 
			∎ { s i } 
		∐. lf◂s0 . 
			_pf_x◂◂pf.s8 { s i { s0 } } ⊢ { s i { _ } } 
			∎ { s i } 
	§ to_s8 # r 
		len r ⊢ { r l }
		_mlc_s8 l ⊢ { l s }
		to_s8_i { r s %[ 0r ] } ⊢ { s _ }
		∎ s
	§ in_s8 # x 
		to_s8 x ⊢ s 
		∎ of_s8◂s
	∎∎
§ incq = _add_im◂◂8r 

§ decq = _sub_im◂◂8r 
 
§ set_o # { v i a } 
	$ _some◂a ⊢ o 
	set_q { v i o } ⊢ { v i } 
	∎ { v i }
¶ iso a' 
	∐ iso : a' 

§ KB = 1024r 
§ inc_x # x 
	$ x ⊢ x,x0 
	_inc x0 ⊢ x0 
	∎ { x x0 } 
§ min { x y } 
	∐ x'=<y' . 
		$ x ⊢ x,x0
		∎ { x y x0 } 
	∐. . 
		$ y ⊢ y,y0 
		∎ { x y y0 }

§ cns1◂a = _cns◂{ a _nil◂{} } 
§ cns2◂{ a0 a1 } = _cns◂{ a0 _cns◂{ a1 _nil◂{} } }
§ cns3◂{ a0 a1 a2 } = _cns◂{ a0 _cns◂{ a1 _cns◂{ a2 _nil◂{} } } }
§ cns4◂{ a0 a1 a2 a3 } = _cns◂{ a0 _cns◂{ a1 _cns◂{ a2 _cns◂{ a3 _nil◂{} } } } }
§ cns5◂{ a0 a1 a2 a3 a4 } = _cns◂{ a0 _cns◂{ a1 _cns◂{ a2 _cns◂{ a3 _cns◂{ a4 _nil◂{} } } } } }

§§ arr 
	§ @.mlt_i◂◂M { v0 v1 l i } 
		∐ l'=i' . 
			∎ { v0 v1 } 
		∐. . 
			lod_q { v0 i } ⊢ { v0 i b0 } 
			lod_q { v1 i } ⊢ { v1 i b1 }
			M { b0 b1 } ⊢ b2 
			exc_q { v0 i b2 } ⊢ { v0 i _ } 
			_inc i ⊢ i 
			mlt_i◂◂M { v0 v1 l i } ⊢|  
	§ mlt◂◂M { v0 v1 } 
		_arr_len v0 ⊢ { v0 l0 } 
		_arr_len v1 ⊢ { v1 l1 } 
		∐ l0'=l1' . 
			mlt_i◂◂M { v0 v1 l0 %[ 0r ] } ⊢| 
		∐. . 
			∎| 
	§ @.fnd_lft_i◂◂T { a l i } 
		∐ l'=i' . 
			$ _none◂{} ⊢ o
			∎ { a o } 
		∐. . 
			lod_q { a i } ⊢ { a i v } 
			T { i v } ⊢ { i v b } 
			∐ b ⊢ bl.t◂{} . 
				$ _some◂{ i v } ⊢ o 
				∎ { a o }
			∐. . 
				_inc i ⊢ i 
				fnd_lft_i◂◂T { a l i } ⊢| 
	§ fnd_lft◂◂T # a 
		_arr_len a ⊢ { a l } 
		fnd_lft_i◂◂T { a l %[ 0r ] } ⊢|
	§ @.itr_lft_i◂◂F { a s l i } 
		∐ l'=i' . 
			∎ { a s } 
		∐. . 
			lod_q { a i } ⊢ { a i v } 
			$ i ⊢ i,i0 
			F { s i0 v } ⊢ s 
			_inc i ⊢ i 
			itr_lft_i◂◂F { a s l i } ⊢| 
	§ itr_lft◂◂F # { a s }
		_arr_len a ⊢ { a l } 
		itr_lft_i◂◂F { a s l %[ 0r ] } ⊢| 
	∎∎

¶ @.p_lst ◂ a'
 	∐ p_cns : { a' p_lst◂a' }
	∐ p_end : a'

§ @.rev_i { l0 l1 }
	$ l1 ⊢ 
	∐ _nil◂{} .
		∎ l0
	∐. _cns◂{ hd tl } .
		rev_i { ⟦ hd < l0 ⟧ tl } ⊢|
§ rev # l
	rev_i { ⟦⟧ l } ⊢ l0
	∎ l0
§ @.apnd { l0 l1 }
	$ l0 ⊢ 
	∐ _cns◂{ hd l0 } . 
		apnd { l0 l1 } ⊢ l 
		$ _cns◂{ hd l } ⊢ l 
		∎ l 
	∐. _nil◂{} . 
		∎ l1 
§ @.rev_apnd { l0 l1 }
	$ l0 ⊢ 
	∐ _cns◂{ hd l0 } . 
		$ _cns◂{ hd l1 } ⊢ l1 
		rev_apnd { l0 l1 } ⊢|
	∐. _nil◂{} . 
		∎ l1 

§ @.s8_of_s8_lst_i { l sl }
	$ sl ⊢ 
	∐ _cns◂{ s sl } . 
		_s8_len s ⊢ { s b }
		_add { l b } ⊢ { l _ } 
		s8_of_s8_lst_i { l sl } ⊢ { sr n } 
		_pf_x◂◂pf.s8 { sr n { s } } ⊢ { sr n { _ } } 
		∎ { sr n } 
	∐. _nil◂{} . 
		_mlc_s8 l ⊢ { l sr } 
		∎ { sr %[ 0r ] }
§ s8_of_s8_lst # l 
	s8_of_s8_lst_i { %[ 0r ] l } ⊢ { s n } 
	∎ s 
§ @.s8_of_s8_lst_rev_i { l sl }
	$ sl ⊢ 
	∐ _cns◂{ s sl } . 
		_s8_len s ⊢ { s b }
		_add { l b } ⊢ { l b } 
		s8_of_s8_lst_rev_i { l sl } ⊢ { sr n } 
		_sub { n b } ⊢ { n b } 
		_pf_x◂◂pf.s8 { sr n { s } } ⊢ { sr n { _ } } 
		_sub { n b } ⊢ { n _ }
		∎ { sr n } 
	∐. _nil◂{} . 
		_mlc_s8 l ⊢ { l sr } 
		∎ { sr l }
§ s8_of_s8_lst_rev # l 
	s8_of_s8_lst_rev_i { %[ 0r ] l } ⊢ { s _ } 
	∎ s 

§ @.assoc { l k }
	∐ l ⊢ _cns◂{ { k0 o0 } l } .
		∐ k'=k0' .
			∐ o0 ⊢ _some◂v0 .
				$ v0 ⊢ v0,v1
				∎ { _cns◂{ { k0 _some◂v0 } l } k _some◂v1 }
			∐. .
				∎ { _cns◂{ { k0 o0 } l } k _none◂{} }
		∐. .
			assoc { l k } ⊢ { l k r0 }
			∎ { _cns◂{ { k0 o0 } l } k r0 }
	∐. .
		∎ { l k _none◂{} }	
§ @.assoc_E◂◂E { l k }
	∐ l ⊢ _cns◂{ { k0 o0 } l } .
		E { k k0 } ⊢ { { k k0 } b } 
		∐ b'=1r .
			∐ o0 ⊢ _some◂v0 .
				$ v0 ⊢ v0,v1
				∎ { _cns◂{ { k0 _some◂v0 } l } k _some◂v1 }
			∐. .
				∎ { _cns◂{ { k0 o0 } l } k _none◂{} }
		∐. .
			assoc_E◂◂E { l k } ⊢ { l k r0 }
			∎ { _cns◂{ { k0 o0 } l } k r0 }
	∐. .
		∎ { l k _none◂{} }	

§§ opn 
	§ eq_T◂◂E { a b } 
		∐ a ⊢ _some◂a; b ⊢ _some◂b . 
			E { a b } ⊢ { a b t } 
			∎ { _some◂a _some◂b t } 
		∐ a ⊢ _none◂{}; b ⊢ _none◂{} . 
			∎ { _none◂{} _none◂{} bl.t◂{} } 
		∐. . 
			∎ { a b bl.f◂{} }
	§ pnt◂◂P { v o } 
		$ o ⊢ 
		∐ _some◂a . 
			P { v a } ⊢ { v s } 
			^ s ⊢ _,s 
				"_some◂" 0' // 
			∎ { v s } 
		∐. _none◂{} . 
			∎ { v %[ "_none◂{}" ] }
	§ eq_st_T◂◂E { e a b }
		∐ a ⊢ _some◂a; b ⊢ _some◂b . 
			E { e a b } ⊢ { e a b t } 
			∎ { e _some◂a _some◂b t } 
		∐ a ⊢ _none◂{}; b ⊢ _none◂{} . 
			∎ { e _none◂{} _none◂{} bl.t◂{} } 
		∐. . 
			∎ { e a b bl.f◂{} } 
	∎∎
§§ lst
	¶ t a' = _lst◂a' 
	§ rev = rev 
	§ apnd = apnd 
	
	§ 
		@.stx_line◂◂G ^= 
			∐# G stx_line◂◂G ⊢ { a l } 
				∎ _some◂_cns◂{ a l } 
			∐.# ⊢ { } 
				∎ _some◂_nil◂{}
	§
		@.stx_synt◂◂G ^= 
			∐* G stx_line◂◂G ⊢ { a l } 
				∎ _some◂_cns◂{ a l } 
			∐.* ⊢ { } 
				∎ _some◂_nil◂{}
	§
		@.stx_cmm_tl◂◂G ^=
			∐# "," !| G stx_cmm_tl◂◂G ⊢ { {} a l } 
				∎ _some◂_cns◂{ a l } 
			∐.# ⊢ { } 
				∎ _some◂_nil◂{} 
	§
		@.stx_cmm◂◂H ^= 
			∐# H stx_cmm_tl◂◂H ⊢ { a l } 
				∎ _some◂_cns◂{ a l } 
			∐.# ⊢ { } 
				∎ _some◂_nil◂{} 
		
		§ @.eq_v◂◂{ E D } { v l0 l1 } 
		∐ l0 ⊢ _cns◂{ p0 l0 }; l1 ⊢ _cns◂{ p1 l1 } .
			E { v p0 p1 } ⊢ { v p0 p1 b0 } 
			$ b0 ⊢ 
			∐ bl.t◂{} . 
				eq_v◂◂{ E D } { v l0 l1 } ⊢ { v l0 l1 b1 } 
				∎ { v _cns◂{ p0 l0 } _cns◂{ p1 l1 } b1 }
			∐. bl.f◂{} . 
				∎ { v _cns◂{ p0 l0 } _cns◂{ p1 l1 } bl.f◂{} }
		∐ l0 ⊢ _nil◂{}; l1 ⊢ _nil◂{} . 
			∎ { v _nil◂{} _nil◂{} bl.t◂{} }
		∐. . 
			D { v l0 l1 } ⊢|
	§ eq_v_exn # { v l0 l1 } 
		∎| 
	§ eq_v_f # { v l0 l1 } 
		∎ { v l0 l1 bl.f◂{} }
	§ eq_v_err◂◂E # { v l0 l1 } 
		eq_v◂◂{ E eq_v_exn } { v l0 l1 } ⊢|  
	§ eq_v_f◂◂E # { v l0 l1 } 
	 	eq_v◂◂{ E eq_v_f } { v l0 l1 } ⊢| 

	§ e_u◂◂E # { {} x y } 
		E { x y } ⊢ { x y b }
		∎ { {} x y b }
	§ eq◂◂E # { l0 l1 } 
		eq_v_f◂◂(e_u◂◂E) { {} l0 l1 } ⊢ { {} l0 l1 b } 
		∎ { l0 l1 b }
	 § eq_err◂◂E # { l0 l1 } 
		eq_v_err◂◂(e_u◂◂E) { {} l0 l1 } ⊢ { {} l0 l1 b } 
		∎ { l0 l1 b }

	§ @.fld_lr◂◂{ F0 F1 F2 } { v l } 
		$ l ⊢ 
		∐ _cns◂{ a l } .
			F0 { v a } ⊢ { v b } 
			fld_lr◂◂{ F0 F1 F2 } { v l } ⊢ w 
			F1 { w b } ⊢ w 
			∎ w 
		∐. _nil◂{} . 
			F2 v ⊢ w 
			∎ w 
	§ @.fld_l◂◂F { v l }
		$ l ⊢ 
		∐ _cns◂{ a l } .
			F { v a } ⊢ v 
			fld_l◂◂F { v l } ⊢| 
		∐. _nil◂{} . 
			∎ v
	§ @.fld_r◂◂F { v l } 
		$ l ⊢ 
		∐ _cns◂{ a l } . 
			fld_r◂◂F { v l } ⊢ v 
			F { a v } ⊢ v 
			∎ v 
		∐. _nil◂{} . 
			∎ v 
	§ @.pp_l◂◂{ F S } { e v l } 
		$ l ⊢ 
		∐ _cns◂{ a l } . 
			F { v a } ⊢ { v s }
			rp8.add_s8 { e s } ⊢ e 
			∐ l ⊢ _cns◂{ a l } . 
				_st◂◂S {} ⊢ st 
				rp8.add_st_s8 { e st } ⊢ e 
				F { v a } ⊢ { v s }
				rp8.add_s8 { e s } ⊢ e 
				pp_l◂◂{ F S } { e v l } ⊢|
			∐. . 
				∎ { e v }
		∐. _nil◂{} . 
			∎ { e v } 
	§ @.ppe_l◂◂{ F S } { v e l } 
		$ l ⊢ 
		∐ _cns◂{ a l } . 
			F { v e a } ⊢ { v e }
			∐ l ⊢ _cns◂{ a l } . 
				_st◂◂S {} ⊢ st 
				rp8.add_st_s8 { e st } ⊢ e 
				F { v e a } ⊢ { v e }
				ppe_l◂◂{ F S } { v e l } ⊢|
			∐. . 
				∎ { v e }
		∐. _nil◂{} . 
			∎ { v e } 
	§ pnt_l◂◂{ F S } # { v l } 
		$ rp8.e◂{} ⊢ e 
		pp_l◂◂{ F S } { e v l } ⊢ { e v } 
		rp8.to_s8 e ⊢ s 
		∎ { v s } 
	§ @.pnt◂◂{ F S } { e l }
		$ l ⊢ 
		∐ _cns◂{ a l } .
			F a ⊢ s 
			rp8.add_s8 { e s } ⊢ e 
			$ l ⊢ 
			∐ _nil◂{} . 
				∎ e
			∐. _cns◂{ a l } . 
				F a ⊢ s 
				_st◂◂S {} ⊢ st 
				rp8.add_st_s8 { e st } ⊢ e 
				rp8.add_s8 { e s } ⊢ e 
				pnt◂◂{ F S } { e l } ⊢| 
		∐. _nil◂{} . 
			∎ e 
	§ pnt◂◂{ F S } # l 
		pnt◂◂{ F S } { rp8.e◂{} l } ⊢ e 
		rp8.to_s8 e ⊢| 
	§ @.map_l◂◂F { v l } 
		$ l ⊢ 
		∐ _cns◂{ a l } . 
			F { v a } ⊢ { v b } 
			map_l◂◂F { v l } ⊢ { v l } 
			$ _cns◂{ b l } ⊢ l 
			∎ { v l } 
		∐. _nil◂{} .
			$ _nil◂{} ⊢ l 
			∎ { v l } 
	
	§ @.map_l_x◂◂F { v l } 
		$ l ⊢ 
		∐ _cns◂{ a l } .
			F { v a } ⊢ { v b c } 
			map_l_x◂◂F { v l } ⊢ { v l lx } 
			∎ { v _cns◂{ %b l } _cns◂{ %c lx } }
		∐. _nil◂{} . 
			∎ { v _nil◂{} _nil◂{} }
	§ @.map_r◂◂F { v l } 
		$ l ⊢ 
		∐ _cns◂{ a l } . 
			map_r◂◂F { v l } ⊢ { v l } 
			F { v a } ⊢ { v b } 
			$ _cns◂{ b l } ⊢ l 
			∎ { v l } 
		∐. _nil◂{} .
			$ _nil◂{} ⊢ l 
			∎ { v l }

	§ @.len l 
		$ l ⊢ 
		∐ _cns◂{ a l } . 
			len l ⊢ { l n } 
			$ _cns◂{ a l } ⊢ l 
			_inc n ⊢ n 
			∎ { l n } 
		∐. _nil◂{} . 
			∎ { ⟦⟧ %[ 0r ] }
	§ @.csm { l a } 
		$ l ⊢ 
		∐ _cns◂{ x l } . 	
			∐ x'=a' . 
				csm { l a } ⊢| 
			∐. . 
				csm { l a } ⊢ { l a } 
				$ _cns◂{ x l } ⊢ l 
				∎ { l a }
		∐. _nil◂{} . 
			$ _nil◂{} ⊢ l 
			∎ { l a }
	§ @.nth { l i } 
		$ l ⊢ 
		∐ _cns◂{ a l } . 
			∐ i'=0r . 
				∎ { a l } 
			∐. . 
				_dec i ⊢ i 
				nth { l i } ⊢ { b l } 
				$ _cns◂{ a l } ⊢ l 
				∎ { b l } 
		∐. _nil◂{} . 
			∎| 
	§ @.prj { l i } 
		$ l ⊢ 
		∐ _cns◂{ a l } . 
			∐ i'=0r . 
				∎ a 
			∐. . 
				_dec i ⊢ i 
				prj { l i } ⊢|
		∐. _nil◂{} . 
			∎| 
	§ @.add { l a } 
		$ l ⊢ 
		∐ _cns◂{ b l } . 
			∐ a'=b' . 
				$ _cns◂{ b l } ⊢ l 
				∎ l 
			∐. . 
				add { l a } ⊢ l 
				$ _cns◂{ b l } ⊢ l 
				∎ l 
		∐. _nil◂{} . 
			$ _nil◂{} ⊢ l 
			$ _cns◂{ a l } ⊢ l 
			∎ l 
	∎∎
§§ log 
	¶ t = { rp8.t _lst◂rp8.t }
	§ ini◂{} = { rp8.e◂{} _nil◂{} } 
	§ push◂{ t x } = { rp8.e◂{} _cns◂{ t x } } 
	§ pop { t x } 
		$ x ⊢ 
		∐ _cns◂{ e x } . 
			∎ { t { e x } }  
		∐. _nil◂{} . 
			∎ { t { rp8.e◂{} _nil◂{} } } 
			
	§ add_s8 # { { t l } s } 
		rp8.add_s8 { t s } ⊢ t
		∎ { t l } 
	§ emt_i # { {} e } 
		rp8.mk_s8 e ⊢ { e s } 
		_emt.f s ⊢ _ 
		∎ { {} e } 
	§ emt # { t l }
		lst.map_r◂◂emt_i { {} l } ⊢ { {} l } 
		rp8.mk_s8 t ⊢ { t s } 
		_emt.f s ⊢ _ 
		∎ { t l }
	∎∎
§§ p_lst 
	§ @.map_l◂◂F { v l } 
		$ l ⊢ 
		∐ p_cns◂{ a l } . 
			F { v a } ⊢ { v b } 
			map_l◂◂F { v l } ⊢ { v l } 
			∎ { v p_cns◂{ b l } } 
		∐. p_end◂a .
			F { v a } ⊢ { v b } 
			--F v,a ⊢* b 
			∎ { v p_end◂b } 
	§ @.fld_l◂◂F { v l }
		$ l ⊢ 
		∐ p_cns◂{ a l } . 
			F { v a } ⊢ v 
			--F v,a ⊢> 
			fld_l◂◂F { v l } ⊢| 
		∐. p_end◂a .
			F { v a } ⊢|
	∎∎
§§ hsh_tbl 
	§§  el
		§ @.asc { { s {} } l } 
			$ l ⊢ 
			∐ _cns◂{ { t v } l } . 
				∐ s'=t' . 
					$ v ⊢ v,v0 
					∎ { { s ‹ v0 › } ⟦ { t v } < l ⟧  }
				∐. . 
					asc { { s {} } l } ⊢ { { s o } l } 
					∎ { { s o } ⟦ { t v } < l ⟧  }
			∐. _nil◂{} . 
				∎ { { s ‹› } ⟦⟧ }
		§ @.get { { s {} } l } 
			$ l ⊢ 
			∐ _cns◂{ { t v } l } . 
				∐ s'=t' . 
					∎ { { s ‹ v › } l }
				∐. . 
					get { { s {} } l } ⊢ { { s o } l } 
					∎ { { s o } ⟦ { t v } < l ⟧ }
			∐. _nil◂{} . 
				∎ { { s ‹› } ⟦⟧ }
		§ @.set { { s w } l } 
			$ l ⊢ 
			∐ _cns◂{ { t v } l } . 
				∐ s'=t' . 
					∎ { { s ‹ v › } ⟦ { t w } < l ⟧ }
				∐. . 
					set { { s w } l } ⊢ { { s o } l } 
					∎ { { s o } ⟦ { t v } < l ⟧ }
			∐. _nil◂{} . 
				$ s ⊢ s,s0
				∎ { { s ‹› } ⟦ { s0 w } ⟧ } 
		∎∎
	§ ini # n 
		_shl { %[ 1r ] n } ⊢ { l n }  
		_mk_arr { l ⟦⟧ } ⊢ { l _ a } 
		_dec l ⊢ l 
		∎ { l a } 
	§ f◂◂{ F H } # { { m a } { s v } }
		H s ⊢ { s h } 
		_and { h m } ⊢ { h m } 
		exc_q { a h ⟦⟧ } ⊢ { a h l }
		F { { s v } l } ⊢ { { s w } l }
		exc_q { a h l } ⊢ { a h _ } 
		∎ { { m a } { s w } } 
	§ asc◂◂H # { t s } 
		f◂◂{ el.asc H } { t { s {} } } ⊢| 
	§ get◂◂H # { t s } 
		f◂◂{ el.get H } { t { s {} } } ⊢|
	§ set◂◂H # { t { s v } } 
		f◂◂{ el.set H } { t { s v } } ⊢| 
	§ @.itr_i◂◂F { { { m a } n v } i } 
    ∐ n'<>i' . 
      lod_q { a i } ⊢ { a i l } 
      lst.fld_l◂◂F { v l } ⊢ v 
      _inc i ⊢ i 
      itr_i◂◂F { { { m a } n v } i } ⊢|
    ∐. .
      ∎ { { m a } v }
  § itr◂◂F # { { m a } v }
    _arr_len a ⊢ { a n } 
  	itr_i◂◂F { { { m a } n v } %[ 0r ] } ⊢|
	§ @.rb_i◂◂F { { { m a } n v } i } 
    ∐ n'<>i' .
      exc_q { a i ⟦⟧ } ⊢ { a i l } 
      lst.fld_l◂◂F { v l } ⊢ v 
      _inc i ⊢ i 
      rb_i◂◂F { { { m a } n v } i } ⊢|
    ∐. . 
      ∎ { { m a } v }
  § rb◂◂F # { { m a } v }
    _arr_len a ⊢ { a n } 
  	rb_i◂◂F { { { m a } n v } %[ 0r ] } ⊢|
	§ @.fld_i◂◂F { { { m a } n v } i } 
    ∐ n'=i' .
      ∎ v
    ∐. . 
      exc_q { a i ⟦⟧ } ⊢ { a i l } 
      lst.fld_l◂◂F { v l } ⊢ v 
      _inc i ⊢ i 
      fld_i◂◂F { { { m a } n v } i } ⊢|
  § fld◂◂F # { v { m a } }
    _arr_len a ⊢ { a n } 
  	fld_i◂◂F { { { m a } n v } %[ 0r ] } ⊢|
	§ is_empty_i # { b _ } 
		∎ bl.f◂{} 
	§ is_empty # a 
		itr◂◂is_empty_i { a bl.t◂{} } ⊢| 
	§§ s8 
		§ SEED = 0xf7f765d79dabbacer
		§ M = 0xc6a4a7935bd1e995r
		§ R = 47r 
		§ hsh = _s8_hsh 
		§ asc = asc◂◂hsh 
		§ set = set◂◂hsh 
		§ get = get◂◂hsh
		∎∎
	§§ r64 
		§ hsh # x 
			$ x ⊢ x,h 
			∎ { x h }
		§ asc = asc◂◂hsh 
		§ set = set◂◂hsh 
		§ get = get◂◂hsh
		∎∎
	∎∎
§§ esc_s8 
	§ @.lp { s es l i0 i1 }
		∐ l'=i0' . 
			∎ { s es l i1 }
		∐. . 
			_lds { s i0 } ⊢ { s i0 c } 
			_inc i0 ⊢ i0 
			∐ c'=chr.nl . 
				_sts_C◂◂chr.slsh { es i1 } ⊢ { es i1 }
				_inc i1 ⊢ i1 
				_sts_C◂◂chr.n { es i1 } ⊢ { es i1 }
				_inc i1 ⊢ i1 
				lp { s es l i0 i1 } ⊢| 
			∐ c'=chr.tab . 
				_sts_C◂◂chr.slsh { es i1 } ⊢ { es i1 }
				_inc i1 ⊢ i1 
				_sts_C◂◂chr.t { es i1 } ⊢ { es i1 }
				_inc i1 ⊢ i1 
				lp { s es l i0 i1 } ⊢| 
			∐ c'=chr.slsh . 
				_sts_C◂◂chr.slsh { es i1 } ⊢ { es i1 }
				_inc i1 ⊢ i1 
				_sts_C◂◂chr.slsh { es i1 } ⊢ { es i1 }
				_inc i1 ⊢ i1 
				lp { s es l i0 i1 } ⊢| 
			∐ c'=chr.dq . 
				_sts_C◂◂chr.slsh { es i1 } ⊢ { es i1 }
				_inc i1 ⊢ i1 
				_sts_C◂◂chr.dq { es i1 } ⊢ { es i1 }
				_inc i1 ⊢ i1 
				lp { s es l i0 i1 } ⊢| 
			∐ c'=0r . 
				_sts_C◂◂chr.slsh { es i1 } ⊢ { es i1 }
				_inc i1 ⊢ i1 
				_sts_C◂◂chr.d_0 { es i1 } ⊢ { es i1 }
				_inc i1 ⊢ i1 
				lp { s es l i0 i1 } ⊢| 
			∐. . 
				_sts { es i1 c } ⊢ { es i1 _ } 
				_inc i1 ⊢ i1 
				lp { s es l i0 i1 } ⊢| 
	§ f # s 
		_s8_len s ⊢ { s l } 
		$ l ⊢ l,x 
		_shl_im◂◂2r x ⊢ x 
		_mlc_s8 x ⊢ { x es0 } 
		lp { s es0 l %[ 0r ] %[ 0r ] } ⊢ { s es0 l i1 }
		_mlc_s8 i1 ⊢ { i1 es1 } 
		_pf_x◂◂pf.s8 { es1 %[ 0r ] { es0 } } ⊢ { es1 _ _ }
		∎ { s es1 }
	∎∎
§ mk_esc_s8 = esc_s8.f 
§
	@.stg_ltr ^=
	∐. "\"" stg_ltr_seq ⊢ { {} cl }
		rp8.to_s8 cl ⊢ s
		$ _some◂s ⊢ a
		∎ a
	@.stg_ltr_seq ^=
	∐ "\n" !| ⊢ { xx } 
		$ _none◂{} ⊢ a 
		∎ a 
	∐ "\\" stg_ltr_sp stg_ltr_seq ⊢ { {} c0 cl }
		rp8.pfx_chr { c0 cl } ⊢ cl 
		$ _some◂cl ⊢ a
		∎ a
	∐ "\"" ⊢ { {} }
		∎ _some◂rp8.e◂{}
	∐. _byt stg_ltr_seq ⊢ { c0 cl }
		rp8.pfx_chr { c0 cl } ⊢ cl 
		$ _some◂cl ⊢ a
		∎ a
	@.stg_ltr_sp ^=
	∐ "\\" ⊢ { {} }
		∎ _some◂%[ 92r ]
	∐ "\"" ⊢ { {} }
		∎ _some◂%[ 34r ]
	∐ "n" ⊢ { {} }
		∎ _some◂%[ 10r ]
	∐ "t" ⊢ { {} }
		∎ _some◂%[ 9r ]
	∐. "0" ⊢ { {} }
		∎ _some◂%[ 0r ]

§
	@.dgt ^=
	∐. _byt ⊢ { c }
		∐ c'=<57r; 48r=<c' . 
			∎ _some◂c
		∐. .
			∎ _none◂{}
  §
	@.ch_l ^=
	∐. _byt ⊢ { c }
		∐ c'=<122r; 97r=<c' . 
			∎ _some◂c
		∐. .
			∎ _none◂{}

§
	@.ch_u ^=
	∐. _byt ⊢ { c }
		∐ c'=<90r; 65r=<c' . 
			$ _some◂c ⊢ a
			∎ a
		∐. .
			$ _none◂{} ⊢ a
			∎ a

§
	@.ch_a ^=
	∐ ch_u ⊢ { c }
		$ _some◂c ⊢ a
		∎ a 
	∐. ch_l ⊢ { c }
		$ _some◂c ⊢ a
		∎ a

§
	@.word ^=
	∐. ch_a word_tl ⊢ { c0 cl }
		rp8.pfx_chr { c0 cl } ⊢ cl 
		rp8.to_s8 cl ⊢ s 
		∎ ‹ s ›
	@.word_tl ^=
	∐ word_hd word_tl ⊢ { c tl }
		rp8.pfx_chr { c tl } ⊢ l 
		$ _some◂l ⊢ a
		∎ a
	∐. ⊢ { }
		$ rp8.e◂{} ⊢ l 
		$ _some◂l ⊢ a 
		∎ a
	@.word_hd ^=
	∐ ch_a ⊢ { c }
		$ _some◂c ⊢ a
		∎ a
	∐ dgt ⊢ { c }
		$ _some◂c ⊢ a
		∎ a
	∐. "_" ⊢ { {} }
		$ %[ 95r ] ⊢ c
		$ _some◂c ⊢ a
		∎ a

§
	@.prm_word ^=
	∐ "_" word ⊢ { {} s }
		^ s ⊢ s,sr 
			"_" 0' // 
		$ _some◂sr ⊢ a 
		∎ a
	∐. word ⊢ { s }
		$ _some◂s ⊢ a
		∎ a
§ 
	@.reg_word  ^=
		∐ "%" !| prm_word ⊢ { {} w }
			$ _some◂w ⊢ a 
			∎ a 
		∐. prm_word ⊢ { w } 
			$ _some◂w ⊢ a 
			∎ a 
§ 
	@.tpl_word  ^=
		∐ "%" !| word ⊢ { {} w } 
			∎ _some◂w 
		∐. word ⊢ { w } 
			∎ _some◂w 
§§ OpADL
	§§ reg_ptn
		¶ @.t ◂ a'
			∐ rcd : _lst◂(t◂a')
			∐ atm : a'
		§ atm_a # p 
			∐ p ⊢ atm◂a . 
				∎ a 
			∐. . 
				∎|  
		§ 
			@.stx◂◂G ^=
				∐# "{" lst.stx_line◂◂stx◂◂G "}" ⊢ { {} l {} }
					∎ _some◂rcd◂l 
				∐.# G ⊢ { a } 
					∎ _some◂atm◂a 

		§ @.eq_v◂◂E { v c0 c1 } 
			∐ c0 ⊢ atm◂a0; c1 ⊢ atm◂a1 . 
				E { v a0 a1 } ⊢ { v a0 a1 b } 
				∎ { v atm◂a0 atm◂a1 b }
			∐ c0 ⊢ rcd◂l0; c1 ⊢ rcd◂l1 . 
				lst.eq_v_err◂◂(eq_v◂◂E) { v l0 l1 } ⊢ { v l0 l1 b } 
				∎ { v rcd◂l0 rcd◂l1 b } 
			∐. . 
				∎ { v c0 c1 f◂{} } 
		§ eq_u◂◂E # { {} x y } 
			E { x y } ⊢ { x y b }
			∎ { {} x y b } 
		§ eq◂◂E # { p0 p1 }
			eq_v◂◂(eq_u◂◂E) { {} p0 p1 } ⊢ { {} p0 p1 b }
			∎ { p0 p1 b }
		§ 
			@.map_l◂◂F { v p } 
				$ p ⊢ 
				∐ rcd◂l . 
					map_l_lst◂◂F { v l } ⊢ { v l } 
					∎ { v rcd◂l } 
				∐. atm◂a . 
					F { v a } ⊢ { v b } 
					∎ { v atm◂b } 
			@.map_l_lst◂◂F { v l } 
				$ l ⊢ 
				∐ _cns◂{ p l } . 
					map_l◂◂F { v p } ⊢ { v p } 
					map_l_lst◂◂F { v l } ⊢ { v l } 
					∎ { v _cns◂{ p l } } 
				∐. _nil◂{} . 
					∎ { v ⟦⟧ }
		§ 
			@.map_l_x◂◂F { v p } 
				$ p ⊢ 
				∐ rcd◂l . 
					map_l_x_lst◂◂F { v l } ⊢ { v l lx }
					∎ { v rcd◂%l rcd◂%lx } 
				∐. atm◂a . 
					F { v a } ⊢ { v a ax } 
					∎ { v atm◂a ax } 
			@.map_l_x_lst◂◂F { v l } 
				$ l ⊢ 
				∐ _cns◂{ p l } . 
					map_l_x◂◂F { v p } ⊢ { v p px } 
					map_l_x_lst◂◂F { v l } ⊢ { v l lx } 
					∎ { v _cns◂{ p l } _cns◂{ px lx } }
				∐. _nil◂{} . 
					∎ { v _nil◂{} _nil◂{} } 
		§ 
			@.map_l_atm◂◂F { v p }  
				$ p ⊢ 
				∐ rcd◂l . 
					map_l_atm_lst◂◂F { v l } ⊢ { v l } 
					∎ { v rcd◂l } 
				∐. atm◂a . 
					F { v a } ⊢|
			@.map_l_atm_lst◂◂F { v l } 
				$ l ⊢ 
				∐ _cns◂{ p l } . 
					map_l_atm◂◂F { v p } ⊢ { v p } 
					map_l_atm_lst◂◂F { v l } ⊢ { v l } 
					∎ { v _cns◂{ p l } } 
				∐. _nil◂{} . 
					∎ { v ⟦⟧ }
		§ 
			@.map_l_x_atm◂◂F { v p } 
				$ p ⊢ 
				∐ rcd◂l . 
					map_l_x_atm_lst◂◂F { v l } ⊢ { v l lx }
					∎ { v rcd◂%l rcd◂%lx } 
				∐. atm◂a . 
					F { v a } ⊢ { v a ax } 
					∎ { v a ax } 
			@.map_l_x_atm_lst◂◂F { v l } 
				$ l ⊢ 
				∐ _cns◂{ p l } . 
					map_l_x_atm◂◂F { v p } ⊢ { v p px } 
					map_l_x_atm_lst◂◂F { v l } ⊢ { v l lx } 
					∎ { v _cns◂{ p l } _cns◂{ px lx } }
				∐. _nil◂{} . 
					∎ { v _nil◂{} _nil◂{} } 
		§ 
			@.fld_l◂◂F { v p } 
				$ p ⊢ 
				∐ rcd◂l . 
					fld_l_lst◂◂F { v l } ⊢| 
				∐. atm◂a . 
					F { v a } ⊢| 
			@.fld_l_lst◂◂F { v l } 
				$ l ⊢ 
				∐ _cns◂{ p l } . 
					fld_l◂◂F { v p } ⊢ v 
					fld_l_lst◂◂F { v l } ⊢| 
				∐. _nil◂{} . 
					∎ v 
			
		§ 
			@.pp_l◂◂P { e v p } 
				$ p ⊢ 
				∐ rcd◂l . 
					_st◂◂"{ " {} ⊢ st
					rp8.add_st_s8 { e st } ⊢ e 
					pp_l_lst◂◂P { e v l } ⊢ { e v } 
					_st◂◂"}" {} ⊢ st 
					rp8.add_st_s8 { e st } ⊢ e  
					∎ { e v } 
				∐. atm◂a . 
					P { v a } ⊢ { v s } 
					rp8.add_s8 { e s } ⊢ e 
					∎ { e v } 
			@.pp_l_lst◂◂P { e v l } 
				$ l ⊢ 
				∐ _cns◂{ p l } . 
					pp_l◂◂P { e v p } ⊢ { e v } 
					_st◂◂" " {} ⊢ st 
					rp8.add_st_s8 { e st } ⊢ e 
					pp_l_lst◂◂P { e v l } ⊢| 
				∐. _nil◂{} . 
					∎ { e v }
		§ pnt_l◂◂P { v p } 
			$ rp8.e◂{} ⊢ e 
			pp_l◂◂P { e v p } ⊢ { e v } 
			rp8.to_s8 e ⊢ s 
			∎ { v s } 
		§ pnt_l_lst◂◂P { v l } 
			$ rp8.e◂{} ⊢ e 
			pp_l_lst◂◂P { e v l } ⊢ { e v } 
			rp8.to_s8 e ⊢ s 
			∎ { v s } 
		§ 
			@.ppe_l◂◂P { v e p } 
				$ p ⊢ 
				∐ rcd◂l . 
					_st◂◂"{ " {} ⊢ st
					rp8.add_st_s8 { e st } ⊢ e 
					ppe_l_lst◂◂P { v e l } ⊢ { v e } 
					_st◂◂"}" {} ⊢ st 
					rp8.add_st_s8 { e st } ⊢ e  
					∎ { v e } 
				∐. atm◂a . 
					P { v e a } ⊢| 
			@.ppe_l_lst◂◂P { v e l } 
				$ l ⊢ 
				∐ _cns◂{ p l } . 
					ppe_l◂◂P { v e p } ⊢ { v e } 
					_st◂◂" " {} ⊢ st 
					rp8.add_st_s8 { e st } ⊢ e 
					ppe_l_lst◂◂P { v e l } ⊢| 
				∐. _nil◂{} . 
					∎ { v e }
		§ unt◂{} = rcd◂_nil◂{} 
		§ cns1◂a = rcd◂cns1◂a 
		§ cns2◂{ a0 a1 } = rcd◂cns2◂{ a0 a1 }
		§ cns3◂{ a0 a1 a2 } = rcd◂cns3◂{ a0 a1 a2 }
		§ cns4◂{ a0 a1 a2 a3 } = rcd◂cns4◂{ a0 a1 a2 a3 } 
		§ cns5◂{ a0 a1 a2 a3 a4 } = rcd◂cns5◂{ a0 a1 a2 a3 a4 }
		∎∎
	§§ RP = reg_ptn
	
		§§ type 
			¶ lv = _r64 
			¶ t_t t' 
				∐ t : t' 
			¶
			@.t v'
				∐ dta : { _r64 _lst◂(t◂v') }
				∐ imp : { t◂v' t◂v' }
				∐ ct_imp : { t◂v' t◂v' }
				∐ abs : { v' t◂v' }
				∐ var : v'
			@.pt = _ref.t◂(var◂p)
			@.p 
				∐ p : _ref.t◂(var◂p) 
			@.t_p = t◂p  
			@.exp v'
				∐ type_k : t◂v'  
				∐ app : { exp◂v' exp◂v' }
			@.var v'
				∐ var_l : _r64
				∐ var_q : { _sgn.t v' }
				∐ var_ln : t◂v'
				
		§§ TV 
			§ n = _ref.n 
			§ lod =_ref.lod 
			§ o = _ref.o 
			§ i = _ref.i 
			§ u = _ref.u 
			∎∎
		§ newvar_l # lv 
			$ lv ⊢ lv,lv0 
			_ref.mk var_l◂lv0 ⊢ p
			∎ { lv var◂p◂p }
		§ ini_l # lv 
			$ lv ⊢ lv,lv0 
			_ref.mk var_l◂lv0 ⊢ p
			∎ { lv p }
		§ newvar_q # {}
			_ref.n {} ⊢ p 
			_ref.lc_rpc p ⊢ { p np }
			_sgn.mk {} ⊢ i
			_ref.i { p var_q◂{ i p◂np } } ⊢ p 
			∎ var◂p◂p
		§ ini_q # {}
			_ref.n {} ⊢ p 
			_ref.lc_rpc p ⊢ { p np }
			_sgn.mk {} ⊢ i
			_ref.i { p var_q◂{ i p◂np } } ⊢ p 
			∎ p
		§ newvar_i = ini_q 
		§ newvar_ln # y 
			_ref.mk var_ln◂y ⊢|
		§ set_q { N p v } 
			$ N ⊢ N,n
			_ref.o p ⊢  { P _ } 
			_ref.i { P var_q◂{ n v } } ⊢ p 
			∎ { N p }
		
		§§ t_axm 
  		§§ adt 
				§ lst = 0r 
				§ opn = 1r 
				∎∎
			§§ id 
				§ r64 = 0r 
  			§ s8 = 1r 
				§ arr = 2r  
				§ Clr = 3r 
				§ pt = 4r 
				§ prd = 5r 
				§ grm = 6r 
				--§ arr0 = 15r 
				§ pf = 7r 
				§ Clr_lc = 8r 
  			§ arr_lc = 9r 
				§ r8 = 10r 
				§ arr_x = 11r 
				§ ctr = 12r 
				§ mtc = 13r 
				§ mop = 14r 
				§ tj = 15r 
				§ st = 16r 
				§ ila = 17r
				§ dmy = 18r
				§ hp = 19r 
				§ r2 = 20r 
				§ rcd = 21r 
				§ unt = 22r 
				§ adt = 23r 
				§ mt = 24r

				§ lst = 0x0001000000000000r 
  			§ opn = 0x0001000000000001r  
				-\
				§ r32 = 8r 
				§ r16 = 9r 
				§ r8 = 10r 
  			§ r4 = 11r 
				§ r2 = 12r 

				§ ext = 13r 
				-/
				∎∎
			§ N0 = 2r 
			
			§ t_prm◂p = dta◂{ p ⟦⟧ } 
			§ t_prm_a◂{ p a } = dta◂{ p ⟦ a ⟧ } 
			§ t_dta◂d = dta◂d
			§ t_adt◂a = dta◂{ %[ id.adt ] ⟦ a ⟧ } 
			§ prd◂{ x r } = t_dta◂{ %[ id.prd ] ⟦ x r ⟧  } 
			§ rcd_unt◂{} = t_prm◂%[ id.unt ]
			§ rcd◂l = t_prm_a◂{ %[ id.rcd ] l } 
			§ cns0◂{} = rcd◂t_prm◂%[ id.unt ]
			§ cns1◂a = rcd◂prd◂{ a rcd_unt◂{} }
			§ cns2◂{ a0 a1 } = rcd◂prd◂{ a0 prd◂{ a1 rcd_unt◂{} } }
			§ cns3◂{ a0 a1 a2 } = rcd◂prd◂{ a0 prd◂{ a1 prd◂{ a2 rcd_unt◂{} } } }
			§ ila◂y = t_prm_a◂{ %[ id.ila ] y } 
			§ dmy◂y = dta◂{ %[ id.dmy ] ⟦ y ⟧ } 
			§ hp◂y = dta◂{ %[ id.hp ] ⟦ y ⟧ } 
			§ t_dmy◂{} = dta◂{ %[ CST.MAX ] ⟦⟧ }
			§ t_imp◂i = imp◂i 
			§ t_ct_imp◂{ i0 i1 } = ct_imp◂{ i0 i1 } 
			§ t_ct_imp2◂{ i0 i1 i2 } = t_ct_imp◂{ i0 t_ct_imp◂{ i1 i2 } }
			§ t_ct_imp3◂{ i0 i1 i2 i3 } = t_ct_imp◂{ i0 t_ct_imp◂{ i1 t_ct_imp◂{ i2 i3 } } }
			§ t_ctr◂{ x y } = t_dta◂{ %[ id.ctr ] ⟦ y x ⟧ }
			§ t_mtc◂{ x y } = t_dta◂{ %[ id.mtc ] ⟦ y x ⟧ }
			§ t_mop◂{ x y } = t_dta◂{ %[ id.mop ] ⟦ y x ⟧ } 
			§ t_tj◂{ x y } = t_dta◂{ %[ id.tj ] ⟦ y x ⟧ }  
			§ t_var◂i = var◂p◂i 
			§ unt◂{} = cns0◂{} 
			§ r64◂{} = t_dta◂{ %[ id.r64 ] _nil◂{} } 
			§ r8◂{} = t_dta◂{ %[ id.r8 ] _nil◂{} } 
			§ arr_x◂{} = t_dta◂{ %[ id.arr_x ] _nil◂{} } 
			§ s8◂{} = t_dta◂{ %[ id.arr ] ⟦ r8◂{} unt◂{} ⟧ }
			§ r64_p2◂{} = cns2◂{ r64◂{} r64◂{} } 
			§ r64_op2◂{} = t_imp◂{ r64_p2◂{} r64_p2◂{} } 
			§ r64_op1◂{} = t_imp◂{ r64◂{} r64◂{} } 
			§ lst◂y = t_adt◂t_prm_a◂{ %[ id.lst ] y } 
			§ opn◂y = t_adt◂t_prm_a◂{ %[ id.opn ] y }
			§ grm◂y = t_dta◂{ %[ id.grm ] ⟦ y ⟧ } 
			§ arr◂y = t_dta◂{ %[ id.arr ] ⟦ y unt◂{} ⟧ } 
			§ arr_q◂{ y t } = t_dta◂{ %[ id.arr ] ⟦ y t ⟧ } 
			§ arr_x◂y = t_dta◂{ %[ id.arr ] ⟦ y arr_x◂{} ⟧ } 
			§ Clr◂y = t_dta◂{ %[ id.Clr ] _cns◂{ y _nil◂{} } }
			§ Clr_lc◂y = t_dta◂{ %[ id.Clr_lc ] _cns◂{ y _nil◂{} } }
			§ arr_lc◂y = t_dta◂{ %[ id.arr_lc ] ⟦ y unt◂{} ⟧ }
			§ arr_lc_q◂{ y yt } = t_dta◂{ %[ id.arr_lc ] ⟦ y yt ⟧ }
			§ pt◂y = t_dta◂{ %[ id.pt ] _cns◂{ %y _nil◂{} } } 
			§ pf◂y = t_dta◂{ %[ id.pf ] _cns◂{ %y _nil◂{} } }
			§ st◂y = t_dta◂{ %[ id.st ] _cns◂{ %y _nil◂{} } } 
			§ mt◂y = t_dta◂{ %[ id.mt ] _cns◂{ %y _nil◂{} } } 
			§ prs◂y = t_imp◂{ cns2◂{ s8◂{} r64◂{} } cns3◂{ s8◂{} r64◂{} y } }
			§ prs_opn◂y = t_imp◂{ cns2◂{ s8◂{} r64◂{} } cns3◂{ s8◂{} r64◂{} opn◂y } }
			∎∎
		§§ X = t_axm
		§ 
			@.map_l_x◂◂F { v p } 
				$ p ⊢ 
				∐ RP.rcd◂l . 
					map_l_x_lst◂◂F { v l } ⊢ { v l lx }
					∎ { v RP.rcd◂%l X.rcd◂%lx } 
				∐. RP.atm◂a . 
					F { v a } ⊢ { v a ax } 
					∎ { v RP.atm◂a ax } 
			@.map_l_x_lst◂◂F { v l } 
				$ l ⊢ 
				∐ _cns◂{ p l } . 
					map_l_x◂◂F { v p } ⊢ { v p px } 
					map_l_x_lst◂◂F { v l } ⊢ { v l lx } 
					∎ { v _cns◂{ p l } X.prd◂{ px lx } }
				∐. _nil◂{} . 
					∎ { v _nil◂{} X.rcd_unt◂{} } 
		§ 
			@.map_l_x_atm◂◂F { v p } 
				$ p ⊢ 
				∐ RP.rcd◂l . 
					map_l_x_atm_lst◂◂F { v l } ⊢ { v l lx }
					∎ { v RP.rcd◂%l X.rcd◂%lx } 
				∐. RP.atm◂a . 
					F { v a } ⊢ { v a ax } 
					∎ { v a ax } 
			@.map_l_x_atm_lst◂◂F { v l } 
				$ l ⊢ 
				∐ _cns◂{ p l } . 
					map_l_x_atm◂◂F { v p } ⊢ { v p px } 
					map_l_x_atm_lst◂◂F { v l } ⊢ { v l lx } 
					∎ { v _cns◂{ p l } X.prd◂{ px lx } }
				∐. _nil◂{} . 
					∎ { v _nil◂{} X.rcd_unt◂{} } 
		
		§ @.rcd_of l 
			$ l ⊢ 
			∐ _cns◂{ t l } .
				rcd_of l ⊢ l 
				∎ X.prd◂{ t l } 
			∐. _nil◂{} . 
				∎ X.rcd_unt◂{}
		§§ pnt
			§ dta_i { e a } 
				$ a ⊢ a,a0 
				_and_im◂◂0x0000ffffffffffffr a ⊢ a 
				_shr_im◂◂48r a0 ⊢ t  
				=+ t' 
				-- prm 
				∐ 
					=+ a' 
					∐ 
						_st◂◂"_r64" {} ⊢ st 
						rp8.add_st_s8 { e st } ⊢|
					∐ 
						_st◂◂"_s8" {} ⊢ st 
						rp8.add_st_s8 { e st } ⊢|
					∐
						_st◂◂"_arr" {} ⊢ st 
						rp8.add_st_s8 { e st } ⊢|
					∐ 
						_st◂◂"_Clr" {} ⊢ st 
						rp8.add_st_s8 { e st } ⊢|
					∐ 
						_st◂◂"_pt" {} ⊢ st 
						rp8.add_st_s8 { e st } ⊢|
					∐ 
						_st◂◂"_prd" {} ⊢ st 
						rp8.add_st_s8 { e st } ⊢|
					∐ 
						_st◂◂"_grm" {} ⊢ st 
						rp8.add_st_s8 { e st } ⊢|
					∐ 
						_st◂◂"_pf" {} ⊢ st 
						rp8.add_st_s8 { e st } ⊢|
					∐ 
						_st◂◂"_Clr_lc" {} ⊢ st 
						rp8.add_st_s8 { e st } ⊢|
					∐ 
						_st◂◂"_arr_lc" {} ⊢ st 
						rp8.add_st_s8 { e st } ⊢|
					∐ 
						_st◂◂"_r8" {} ⊢ st 
						rp8.add_st_s8 { e st } ⊢|
					∐ 
						_st◂◂"_arr_x" {} ⊢ st 
						rp8.add_st_s8 { e st } ⊢|
					∐ 
						_st◂◂"_ctr" {} ⊢ st 
						rp8.add_st_s8 { e st } ⊢|
					∐. 
						^ a ⊢ _,s 
							".p" 0d' // 
						rp8.add_s8 { e s } ⊢| 
				-- adt 
				∐ 
					=+ a' 
					∐ 
						_st◂◂"_lst" {} ⊢ st 
						rp8.add_st_s8 { e st } ⊢|
					∐ 
						_st◂◂"_opn" {} ⊢ st 
						rp8.add_st_s8 { e st } ⊢|
					∐. 
						^ a ⊢ _,s 
							".d" 0d' // 
						rp8.add_s8 { e s } ⊢| 
				∐. 
					∎|
			§ 			
				@.rcd { ql e t } 
					∐ t ⊢ dta◂{ a l }; 
						∐ a'=X.id.prd; l ⊢ _cns◂{ y0 _cns◂{ y1 _nil◂{} } } . 
							f { ql e y0 } ⊢ { ql e }
							rp8.add_st_s8_im◂◂" " e ⊢ e 
							rcd { ql e y1 } ⊢| 
						∐. a'=X.id.unt; l ⊢ _nil◂{} .
							rp8.add_st_s8_im◂◂" }" e ⊢ e 
							∎ { ql e }
					∐ t ⊢ var◂p◂i . 
						_ref.lod i ⊢ { i v }
						$ v ⊢ 
						∐ var_ln◂k . 
							rcd { ql e k } ⊢| 
						∐ var_l◂lv . 
							^ lv ⊢ _,sr 
								" < l(0x" 0x' ") }" // 
							rp8.add_s8 { e sr } ⊢ e 
							∎ { ql e } 
						∐. var_q◂_ .
							^ _ ⊢ sr 
								" < q() }" // 
							rp8.add_s8 { e sr } ⊢ e 
							∎ { ql e }
					∐. . 
						∎| 
				@.q { i { qn ql } } 
					assoc_E◂◂_ref.eq { ql i } ⊢ { ql i o } 
					$ o ⊢ 
					∐ _some◂n . 
						∎ { { qn ql } n } 
					∐.	_none◂{} . 
						inc_x qn ⊢ { n qn } 
						$ n ⊢ n,n0 
						∎ { { qn ⟦ { i ‹ n0 › } < ql ⟧ } n }
				@.f { ql e k } 
					$ k ⊢ 
					∐ dta◂{ a l } . 
						∐ a'=X.id.rcd; l ⊢ _cns◂{ r _nil◂{} } .
							rp8.add_st_s8_im◂◂"{ " e ⊢ e
							rcd { ql e r } ⊢| 
						∐. .
							rp8.add_st_s8_im◂◂"(" e ⊢ e 
							dta_i { e a } ⊢ e  
							rp8.add_st_s8_im◂◂"◂" e ⊢ e 
							lst.ppe_l◂◂{ f "◂" } { ql e l } ⊢ { ql e } 
							rp8.add_st_s8_im◂◂")" e ⊢ e
							∎ { ql e }  
					∐ imp◂{ k0 k1 } . 
						_st◂◂"(" {} ⊢ st 
						rp8.add_st_s8 { e st } ⊢ e 
						f { ql e k0 } ⊢ { ql e }  
						_st◂◂"→" {} ⊢ st 
						rp8.add_st_s8 { e st } ⊢ e 
						f { ql e k1 } ⊢ { ql e } 
						_st◂◂")" {} ⊢ st 
						rp8.add_st_s8 { e st } ⊢ e 
						∎ { ql e }
					∐ ct_imp◂{ k0 k1 } . 
						_st◂◂"(" {} ⊢ st 
						rp8.add_st_s8 { e st } ⊢ e 
						f { ql e k0 } ⊢ { ql e }  
						_st◂◂"→→" {} ⊢ st 
						rp8.add_st_s8 { e st } ⊢ e 
						f { ql e k1 } ⊢ { ql e } 
						_st◂◂")" {} ⊢ st 
						rp8.add_st_s8 { e st } ⊢ e 
						∎ { ql e }
					∐ abs◂{ _ k0 } . 
						_st◂◂"\\_ . " {} ⊢ st 
						rp8.add_st_s8 { e st } ⊢ e 
						f { ql e k0 } ⊢|
					∐. var◂p◂i . 
						TV.lod i ⊢ { i v } 
						$ v ⊢ 
						∐ var_l◂lv . 
							^ lv ⊢ _,sr 
								"l(0x" 0x' ")" // 
							rp8.add_s8 { e sr } ⊢ e 
							∎ { ql e } 
						∐ var_q◂_ .
							q { i ql } ⊢ { ql n } 
							^ n ⊢ _,sr 
								"q" 0d' "'" // 
							rp8.add_s8 { e sr } ⊢ e 
							∎ { ql e }
						∐. var_ln◂kx . 
							_st◂◂"(=" {} ⊢ st 
							rp8.add_st_s8 { e st } ⊢ e 
							f { ql e kx } ⊢ { ql e } 
							_st◂◂")" {} ⊢ st 
							rp8.add_st_s8 { e st } ⊢ e 
							∎ { ql e }
				@.f_lst = lst.ppe_l◂◂{ f " " }
			∎∎ 
			§ pnt_type_k # k 
				pnt.f { { %[ 0r ] ⟦⟧ } rp8.e◂{} k } ⊢ { _ e } 
				rp8.to_s8 e ⊢|
			§ pp = pnt_type_k 
			§ pnt_type_k_lst # l
				pnt.f_lst { { %[ 0r ] ⟦⟧ } rp8.e◂{} l } ⊢ { _ e } 
				rp8.to_s8 e ⊢|
		§ @.occurs { { i0 lv0 } y1 } 
			$ y1 ⊢ 
			∐ dta◂{ a1 l1 } . 
				occurs_lst { { i0 lv0 } l1 } ⊢| 
			∐ imp◂{ y1_0 y1_1 } . 
				occurs { { i0 lv0 } y1_0 } ⊢ { i0 lv0 } 
				occurs { { i0 lv0 } y1_1 } ⊢|
			∐ ct_imp◂{ y1_0 y1_1 } . 
				occurs { { i0 lv0 } y1_0 } ⊢ { i0 lv0 } 
				occurs { { i0 lv0 } y1_1 } ⊢|  
			∐ var◂p◂i1 . 
				_ref.eq { i0 i1 } ⊢ { { i0 i1 } b } 
				∐ b'=1r . 
					∎| 
				∐. . 
					TV.o i1 ⊢ { T v1 } 
					$ v1 ⊢ 
					∐ var_ln◂y2 . 
						$ y2 ⊢ y2,y20 
						TV.i { T var_ln◂y2 } ⊢ _ 
						occurs { { i0 lv0 } y20 } ⊢| 
					∐ var_l◂lv1 . 
						∐ lv1'=<lv0' . 
							TV.i { T var_l◂lv1 } ⊢ _ 
							∎ { i0 lv0 }
						∐. . 
							$ lv0 ⊢ lv0,lv0_0 
							TV.i { T var_l◂lv0_0 } ⊢ _ 
							∎ { i0 lv0 } 
					∐. var_q◂q .
						TV.i { T var_q◂q } ⊢ _ 
						∎ { i0 lv0 } 
			∐. abs◂_ . 
				∎|
			@.occurs_lst = lst.fld_l◂◂occurs 
		§§ unify 
			§ @.f_l1 { i0 lv y1 b } 
				∐ y1 ⊢ var◂p◂i1 . 
					_ref.eq { i0 i1 } ⊢ { { i0 i1 } bi } 
					∐ bi'=1r . 
						∎ b
					∐. .
						TV.o i1 ⊢ { T v1 } 
						$ v1 ⊢ 
						∐ var_ln◂y2 . 
							$ y2 ⊢ y2,y20 
							TV.i { T var_ln◂y2 } ⊢ _ 
							f_l1 { i0 lv y20 b } ⊢|  
						∐ var_l◂lv1 . 
							∐ lv1'=<lv' . 
								$ lv ⊢ _ 
								TV.i { T var_l◂lv1 } ⊢ i1 
								TV.u { i0 var_ln◂var◂p◂i1 } ⊢ _
								∎ b
							∐. .  
								$ { lv1 lv } ⊢ _ 
								TV.i { T var_ln◂var◂p◂i0 } ⊢ _
								∎ b 
						∐. var_q◂q . 
							TV.i { T var_q◂q } ⊢ i1
							TV.u { i0 var_ln◂var◂p◂i1 } ⊢ _
							∎ b 
				∐. .  
					$ y1 ⊢ y1,y1_0 
					occurs { { i0 lv } y1 } ⊢ { i0 _ }
					TV.u { i0 var_ln◂y1_0 } ⊢ _
					∎  b 
			§ @.f_lq { i0 y1 b } 
				∐ y1 ⊢ var◂p◂i1 . 
					_ref.eq { i0 i1 } ⊢ { { i0 i1 } bi } 
					∐ bi'=1r . 
						∎  b  
					∐. .
						TV.lod i1 ⊢ { i1 v1 } 
						∐ v1 ⊢ var_ln◂y2 . 
							f_lq { i0 y2 b } ⊢|  
						∐ v1 ⊢ var_l◂lv1 . 
							$ lv1 ⊢ _ 
							TV.u { i1 var_ln◂var◂p◂i0 } ⊢ _ 
							∎  b  
						∐ v1 ⊢ var_q◂_ . 
							∎ %[ 0r ]
						∐. . 
							∎ %[ 0r ]   
				∐. .  
					∎ %[ 0r ] 
			
		§ 
			@.f { y0 y1 b }
				∐ y0 ⊢ var◂p◂i0 . 
					f_l0 { i0 y1 b } ⊢| 
				∐ y1 ⊢ var◂p◂i1 . 
					f_l0 { i1 y0 b } ⊢| 
				∐ y0 ⊢ dta◂{ a0 l0 }; y1 ⊢ dta◂{ a1 l1 }; a0'=a1' . 
						f_lst { l0 l1 b } ⊢|
				∐ y0 ⊢ imp◂{ y0_0 y0_1 }; y1 ⊢ imp◂{ y1_0 y1_1 } . 
					f { y0_0 y1_0 b } ⊢  b 
					f { y0_1 y1_1 b } ⊢|
				∐ y0 ⊢ ct_imp◂{ y0_0 y0_1 }; y1 ⊢ ct_imp◂{ y1_0 y1_1 } . 
					f { y0_0 y1_0 b } ⊢  b  
					f { y0_1 y1_1 b } ⊢|
				∐. . 
					∎ %[ 0r ]
			
			@.f_lst { l0 l1 b }
				∐ l0 ⊢ _cns◂{ y0 l0 }; l1 ⊢ _cns◂{ y1 l1 } . 
					f { y0 y1 b } ⊢  b 
					f_lst { l0 l1 b } ⊢|
				∐ l0 ⊢ _nil◂{}; l1 ⊢ _nil◂{} . 
					∎  b  
				∐. . 
					∎ %[ 0r ] 
			@.f_l0 # { i0 y1 b }   
				TV.lod i0 ⊢ { i0 v0 } 
				∐ v0 ⊢ var_ln◂y2 . 
					f { y2 y1 b } ⊢|
				∐ v0 ⊢ var_l◂lv .  
					f_l1 { i0 lv y1 b } ⊢|
				∐ v0 ⊢ var_q◂_ . 
					f_lq { i0 y1 b } ⊢| 
				∐. . 
					∎ %[ 0r ]  
			
				§ f_b # { y0 y1 } 
					f { y0 y1 %[ 1r ] } ⊢|
				§ f_err◂◂E { y0 y1 } 
					f { y0 y1 %[ 1r ] } ⊢  b 
					∐ b'<>0r . 
						∎ {} 
					∐. . 
						_emt_im.f◂◂"unify.f_err:_,_" {} ⊢ {} 
						_emt_im◂◂E {} ⊢ {} 
						∎| 
				§ f_err_pp { y0 y1 } 
					$ y0 ⊢ y0,y00 
					$ y1 ⊢ y1,y10 
					f { y0 y1 %[ 1r ] } ⊢  b 
					∐ b'<>0r . 
						∎ { y00 y10 }
					∐. . 
						_emt_im.f◂◂"unify.f_err_pp:_,_" {} ⊢ {} 
						pnt_type_k y00 ⊢ s 
						_emt s ⊢ _ 
						pnt_type_k y10 ⊢ s 
						_emt s ⊢ _ 
						∎| 
				§ f { y0 y1 } 
					f { y0 y1 %[ 1r ] } ⊢  b 
					∐ b'=0r . 
						_emt_im.f◂◂"unify:_,_" {} ⊢ {} 
						∎| 
					∐. . 
						∎ {} 
				§ f_lst { l0 l1 } 
					f_lst { l0 l1 %[ 1r ] } ⊢  b 
					∐ b'=0r . 
						_emt_im.f◂◂"unify:lst:" {} ⊢ {} 
						∎| 
					∐. . 
						∎ {} 
			∎∎ 
		§ 
			@.map_k = map_k_atm 
			@.map_k_lst◂◂{ DTA ABS VAR } { v l } 
				$ l ⊢ 
				∐ _cns◂{ p l } . 
					map_k◂◂{ DTA ABS VAR } { v p } ⊢ { v p } 
					map_k_lst◂◂{ DTA ABS VAR } { v l } ⊢ { v l } 
					∎ { v _cns◂{ %p %l } } 
				∐. _nil◂{} . 
					∎ { v _nil◂{} }
			@.map_k_atm◂◂{ DTA ABS VAR } { v a } 
				$ a ⊢ 
				∐ dta◂{ ax lx } . 
					DTA { v { ax lx } } ⊢| 
				∐ imp◂{ k0 k1 } . 
					map_k◂◂{ DTA ABS VAR } { v k0 } ⊢ { v k0 } 
					map_k◂◂{ DTA ABS VAR } { v k1 } ⊢ { v k1 } 
					∎ { v imp◂{ k0 k1 } }
				∐ ct_imp◂{ k0 k1 } .
					map_k◂◂{ DTA ABS VAR } { v k0 } ⊢ { v k0 } 
					map_k◂◂{ DTA ABS VAR } { v k1 } ⊢ { v k1 } 
					∎ { v ct_imp◂{ k0 k1 } }
				∐ abs◂{ a0 y0 } . 
					ABS { v { a0 y0 } } ⊢| 
				∐. var◂p◂i0 . 
					VAR { v i0 } ⊢| 
		§§ inst 
			§ new # N
				_inc N ⊢ N 
				∎ N 
			§ 
				@.al_dta # { V { a l } } 
					lst { V l } ⊢ { V l }
					∎ { V dta◂{ %a %l } } 
				@.al_abs { { N lv } { p◂a0 y0 } }
					ini_l %[ 0r ] ⊢ { _ p0 } 
					TV.o a0 ⊢ { T v0 } 
					∐ v0 ⊢ var_q◂{ qn qv } . 
						$ { qn qv } ⊢ _ 
						$ N ⊢ N,t0
						$ p0 ⊢ p0,p00 
						TV.i { T var_q◂{ t0 p◂p00 } } ⊢ _
						al { { N lv } y0 } ⊢ { { N lv } y0 } 
						∎ { { N lv } abs◂{ p◂%p0 %y0 } }
					∐ v0 ⊢ var_ln◂_ . 
						∎| 
					∐. . 
						∎|
				@.al_var { { N lv } i0 } 
					TV.lod i0 ⊢ { i0 v0 } 
					$ v0 ⊢
					∐ var_ln◂y0 . 
						al { { N lv } y0 } ⊢|
					∐ var_q◂{ qn qv } .
						_sgn.eq { qn N } ⊢ { { qn N } b } 
						∐ b'=1r . 
							∎ { { N lv } var◂qv } 
						∐. . 
							$ N ⊢ N,t0
							$ { qn qv } ⊢ _ 
							ini_l lv ⊢ { lv p0 } 
							$ p0 ⊢ p0,p0_0 
							TV.u { i0 var_q◂{ t0 p◂p0_0 } } ⊢ _
							∎ { { N lv } var◂p◂p0 }  
					∐. var_l◂lvl . 
						∎ { { N lv } var◂p◂%i0 } 
				@.atm = map_k_atm◂◂{ al_dta al_abs al_var }
				@.al = map_k◂◂{ al_dta al_abs al_var } 
				@.lst = map_k_lst◂◂{ al_dta al_abs al_var }
			∎∎
		§ inst # { lv y } 
			_sgn.mk {} ⊢ N0 
			inst.al { { N0 lv } y } ⊢ { { _ lv } y } 
			∎ { lv y }   
		
		§§ gen 
			§ 
				@.gen_dta # { v { a l } } 
					gen_lst { v l } ⊢ { v l }
					∎ { v dta◂{ %a %l } }
				@.gen_abs # { v { a y0 } } 
					gen { v y0 } ⊢ { v y0 } 
					∎ { v abs◂{ %a %y0 } }
				@.gen_var { lv i }
					TV.lod i ⊢ { i v } 
					$ v ⊢ 
					∐ var_ln◂y1 . 
						gen { lv y1 } ⊢|
					∐ var_l◂lv1 .
						∐ lv1'=<lv' . 
							∎ { lv var◂p◂%i }
						∐. .
							$ i ⊢ i,i0 
							_sgn.mk {} ⊢ N 
							TV.u { i var_q◂{ N p◂i0 } } ⊢ i
							∎ { lv var◂p◂%i }
					∐. var_q◂_ . 
						∎ { lv var◂p◂%i } 
				@.gen = map_k◂◂{ gen_dta gen_abs gen_var }
				@.gen_lst = map_k_lst◂◂{ gen_dta gen_abs gen_var }
			∎∎
		§ gen # { lv y } 
			gen.gen { lv y } ⊢ { lv y } 
			∎ { lv y } 
		§	gen_lst # { lv l } 
				gen.gen_lst { lv l } ⊢ { lv l } 
				∎ { lv l }
		§ gen_dlt # { lv y } 
			gen.gen { lv y } ⊢ { lv _ }
			∎  lv
		§ gen_dlt_lst = lst.fld_l◂◂gen_dlt 
		§ iu # {  y0 y1 } 
			$ y1 ⊢ y1,y10 
			$ y0 ⊢ y0,y00 
			inst { %[ 1r ] y10 } ⊢ { lv y10 } 
			inst { lv y00 } ⊢ { lv y00 } 
			$ y00 ⊢ y00,yt 
			unify.f_b { y00 y10 } ⊢  b  
			_dec lv ⊢ lv 
			gen_dlt { lv yt } ⊢  _ 
			∎ { y0 y1 b }
		§ iut # { y0 y1 } 
			$ y1 ⊢ y1,y10 
			inst { %[ 1r ] y10 } ⊢ { lv y10 } 
			inst { lv y0 } ⊢ { lv y0 } 
			$ y0 ⊢ y0,y00 
			unify.f_b { y00 y10 } ⊢  b  
			_dec lv ⊢ lv
			gen { lv y0 } ⊢ { _ y0 }
			∎ { y0 y1 b }
		§ ci # { y0 y1 } 
			inst { %[ 1r ] y1 } ⊢ { lv y1 } 
			$ y1 ⊢ y1,y1t 
			unify.f_b { y0 y1 } ⊢  b  
			_dec lv ⊢ lv
			gen { lv y1t } ⊢ { _ _ }
			∎ b
		§	ciu # { y0 y1 } 
			$ y1 ⊢ y1,y1_0 
			$ y0 ⊢ y0,y00 
			inst { %[ 1r ] y1_0 } ⊢ { lv y2 } 
			$ y2 ⊢ y2,y20 
			unify.f_b { y00 y2 } ⊢  b  
			_dec lv ⊢ lv 
			gen { lv y20 } ⊢ { _ _ }
			∎ { y0 y1 b }
		
		§ iug { lv y0 y1 } 
			_inc lv ⊢ lv 
			inst { lv y0 } ⊢ { lv y0 } 
			inst { lv y1 } ⊢ { lv y1 } 
			$ y0 ⊢ y0,y00 
			$ y1 ⊢ y1,y10
			unify.f { y00 y10 } ⊢ {}
			_dec lv ⊢ lv 
			gen { lv y0 } ⊢ { lv y0 }
			∎ { lv y0 y1 }  
		§ of_imp y
			newvar_l %[ 1r ]  ⊢ {  lv ys } 
			newvar_l lv  ⊢ {  lv yd } 
			inst { lv y } ⊢ { lv y } 
			$ ys ⊢ ys,ys0 
			$ yd ⊢ yd,yd0 
			unify.f { imp◂{ ys0 yd0 } y } ⊢ {} 
			_dec lv ⊢ lv 
			gen { lv ys } ⊢ {  lv ys }
			gen { lv yd } ⊢ {  lv yd }
			∎ { ys yd }
		§ iug_imp_d { ys y1 } 
			inst { %[ 1r ] ys } ⊢ { lv ys }
			newvar_l lv  ⊢ {  lv yd } 
			inst { lv y1 } ⊢ { lv y1 }
			$ ys ⊢ ys,ys0
			$ yd ⊢ yd,yd0 
			unify.f { imp◂{ %ys0 %yd0 } y1 } ⊢ {}
			_dec lv ⊢ lv 
			gen { lv yd } ⊢ {  lv yd }
			gen { lv ys } ⊢ {  _ ys }
			∎ { ys yd }  
		§ iug_imp_ys { ys y1 } 
			inst { %[ 1r ] ys } ⊢ { lv ys }
			newvar_l lv  ⊢ {  lv yd } 
			inst { lv y1 } ⊢ { lv y1 }
			$ ys ⊢ ys,ys0
			$ yd ⊢ yd,yd0
			unify.f { imp◂{ ys0 yd0 } y1 } ⊢ {}
			_dec lv ⊢ lv 
			gen { lv yd } ⊢ {  lv _ }
			gen { lv ys } ⊢ {  _ ys }
			∎ ys 
		
		§ iug_ctr_s { lv yd y1 } 
			_inc lv ⊢ lv 
			inst { lv yd } ⊢ { lv yd }
			newvar_l lv  ⊢ {  lv ys } 
			inst { lv y1 } ⊢ { lv y1 }
			$ ys ⊢ ys,ys0
			$ yd ⊢ yd,yd0 
			$ y1 ⊢ y1,y10
			unify.f { X.t_ctr◂{ %ys0 %yd0 } y10 } ⊢ {}
			_dec lv ⊢ lv 
			gen { lv y1 } ⊢ {  lv y1 }
			∎ { lv ys yd y1 }  
		§ iug_ct_imp_d { lv ys y1 } 
			_inc lv ⊢ lv 
			inst { lv ys } ⊢ { lv ys }
			newvar_l lv  ⊢ {  lv yd } 
			inst { lv y1 } ⊢ { lv y1 }
			$ ys ⊢ ys,ys0
			$ yd ⊢ yd,yd0 
			$ y1 ⊢ y1,y10
			unify.f { ct_imp◂{ %ys0 %yd0 } y10 } ⊢ {}
			_dec lv ⊢ lv 
			gen { lv y1 } ⊢ {  lv y1 }
			∎ { lv ys yd y1 }  
		§ iug_ctr_d { lv ys y1 } 
			_inc lv ⊢ lv 
			inst { lv ys } ⊢ { lv ys }
			newvar_l lv  ⊢ {  lv yd } 
			inst { lv y1 } ⊢ { lv y1 }
			$ ys ⊢ ys,ys0
			$ yd ⊢ yd,yd0 
			$ y1 ⊢ y1,y10
			unify.f { X.t_ctr◂{ %ys0 %yd0 } y10 } ⊢ {}
			_dec lv ⊢ lv 
			gen { lv y1 } ⊢ {  lv y1 }
			∎ { lv ys yd y1 }  
		§ @.iug_axm_i_j { { N lv } vl yl } 
			∐ vl ⊢ _cns◂{ v vl }; yl ⊢ _cns◂{ y yl } .
				inst.al { { N lv } var◂p◂v } ⊢ { { N lv } v } 
				inst.al { { N lv } y } ⊢ { { N lv } y } 
				unify.f { v y } ⊢ {} 
				iug_axm_i_j { { N lv } vl yl } ⊢| 
			∐ vl ⊢ _nil◂{}; yl ⊢ _nil◂{} . 
				∎ { N lv } 
			∐. . 
				∎|
		§ iug_axm # { vl kl yl } 
			_sgn.mk {} ⊢ N 
			inst.lst { { N %[ 2r ] } kl } ⊢ { { N lv } kl }
			iug_axm_i_j { { N lv } vl yl } ⊢ { _ lv } 
			_dec lv ⊢ lv 
			gen_lst { lv kl } ⊢ { _ kl } 
			∎ kl
		§ iug_axm_i # { vl k yl } 
			_sgn.mk {} ⊢ N
			inst.al { { N %[ 2r ] } k } ⊢ { { N lv } k }
			iug_axm_i_j { { N lv } vl yl } ⊢ { _ lv } 
			_dec lv ⊢ lv 
			gen { lv k } ⊢ {  _ k } 
			∎ k
		§ iug_axm_i_j =|
		§ @.inst_prd { lv i y } 
			∐ i'=0r .
				newvar_l lv  ⊢ { lv yl } 
				∎ { lv X.prd◂{ y yl } }
			∐. . 
				_dec i ⊢ i 
				inst_prd { lv i y } ⊢ { lv yr } 
				newvar_l lv  ⊢ { lv w } 
				∎ { lv X.prd◂{ w yr } }
		
		§ inst_imp { lv y } 
			inst { lv y } ⊢ { lv y }
			newvar_l lv  ⊢ {  lv y0 }
			newvar_l lv  ⊢ {  lv y1 } 
			$ y0 ⊢ y0,y0_0 
			$ y1 ⊢ y1,y1_0 
			unify.f { y X.t_imp◂{ y0_0 y1_0 } } ⊢ {} 
			∎ { lv y0 y1 }
		∎∎ 
		§§ T = type
		§§ TX = T.t_axm			
		
		§§ ast
			¶ @.name
				∐ mdl_n : { _s8 name }
				∐ fst_n : _s8
			¶ abs_n 
				∐ abs_n : _r64 
				∐ rel_n : name  
			¶ abs_name = abs_n 
			§ of_rel_n n 
				∐ n ⊢ rel_n◂n .
					∎ n 
				∐. .
					∎|
			§ of_fst_n n 
				∐ n ⊢ rel_n◂fst_n◂n .
					∎ n 
				∐. .
					∎| 
			§ @.pnt_name n
				∐ n ⊢ mdl_n◂{ w n } .
					pnt_name n ⊢ s
					^ w,s ⊢ w,s,sr
						0' "." 1' //
					∎ sr
				∐. n ⊢ fst_n◂w .
					∎ w
			§ pnt_abs_name n 
				$ n ⊢ 
				∐ abs_n◂i . 
					∎ %[ "_[ _ ]" ]
				∐. rel_n◂n .
					pnt_name n ⊢| 
		
		¶ 
			@.v  
				∐ v_i : _r64 
				∐ v_l : {} 
				∐ v_ln : _ref◂v
		¶ r = _ref◂v 
		¶
			@.rt r',c' = RP.t◂(rt_atm◂r'◂c') 
			@.rt_atm r',c'
				∐ hp : r'
				∐ hp_im : c'
				∐ btm : {} 
				∐ stt_adt : { _r64 _r64 rt◂r'◂c' } 
				∐ dyn_adt : { { _r64 _lst◂T.t_p } r' r' } 
		¶	
			@.re_atm r',c'
				∐ re_agl : { c' re_ptn◂r'◂c' }
				∐ re_reg : r' 
				∐ re_v : c' 
			@.re_ptn r',c' = RP.t◂(re_atm◂r'◂c')
		¶ src r',c' = re_atm◂r'◂c'
		¶ SP r',c' = re_ptn◂r'◂c'
		¶ s8_p = _ref.t◂{ _s8 _opn◂_r64 }
		¶ tpl_ptn = RP.t◂_r64
		¶ fmt
			∐ fmt_s : {}
			∐ fmt_st_s : {} 
			∐ fmt_d : {}
			∐ fmt_x : {}
			∐ fmt_p : {} 
		¶	
			@.CP e',s',t',r' = RP.t◂(cst◂e'◂s'◂t'◂r')
			@.k_p t' 
				∐ k_p : CP◂(_ref◂(k_p◂t'))◂s8_p◂t'◂_r64
				∐ k_v : t'
			@.k_t = _ref◂(k_p◂T.t_p) 
			@.TP = RP.t◂k_t
			@.k_op_p c' = _ref◂{ _s8 c' _lst◂{ _r64 type.t_p type.t_p _ref◂(cn◂c'◂ct_mp) } }
			@.k_op_gnr_p c' = _ref◂{ _s8 c' _lst◂{ T.t_p T.t_p c' k_op_p◂c' } } 
			@.ap c' = { T.t_p _arr_x◂{ T.t_p c' } }
			@.axm_t 
				∐ ap_none : {} 
				∐ ap_some : T.t_p 
				∐ pp_none : {}
			@.cst e',s',t',r'
				∐ k_op_gnr : { TP bl.t k_op_gnr_p◂(CP◂e'◂s8_p◂T.t_p◂_r64) { type.t_p T.t_p } }
				∐ k_op : { bl.t k_op_p◂(CP◂e'◂s8_p◂T.t_p◂_r64) type.pt } 
				∐ k_fnc : { RP.t◂e' CP◂e'◂s'◂t'◂r' }
				∐ k_app : { CP◂e'◂s'◂t'◂r' CP◂e'◂s'◂t'◂r' } 
				∐ k_op_axm : { _r64 _lst◂(CP◂e'◂s'◂t'◂r') axm_t } 
				∐ k_ctr : { _r64 _r64 T.pt }
				∐ k_pf : _lst◂(exp_s8◂(CP◂e'◂s'◂t'◂r'))
				∐ k_r64 : _r64 
				∐ k_s8 : s' 
				∐ k_arr : _arr◂(CP◂e'◂s'◂t'◂r')
				∐ k_name : e' 
				∐ k_t : { CP◂e'◂s'◂t'◂r' t' }
				∐ k_ply : { _r64 RP.t◂r' SP◂r'◂(CP◂e'◂s'◂t'◂r') }
				∐ k_ap : { _ref◂(ap◂(CP◂e'◂s8_p◂T.t_p◂_r64)) T.t_p } 
				∐ k_unv : _r64
				∐ k_btm : {}
			@.exp_s8 c'
				∐ exp_s8_cst : c'
				∐ exp_s8_idx : { fmt _r64 }
				∐ exp_s8_for : { _r64 c' } 
			@.mn e',c' 
				∐ nm_e : cn◂e'◂c' 
				∐ nm_m : _ref.t◂{ (mop◂e'◂c') mn◂e'◂c' } 
				∐ nm_n : {} 
			@.cn e',c'
				∐ cn_id : { T.t_p cn◂e'◂c' }
				∐ cn_p : { _ref.t◂(cn◂e'◂c') _ref.t◂(cn◂e'◂c') }
				∐ cn_e : e'  
				∐ cn_m : { T.t_p { mn◂e'◂c' _r64 } T.t_p } 
				∐ cn_a : { _r64 _lst◂e' axm_t } 
				∐ cn_b : {}
				∐ cn_o : { _ref.t◂(cn◂e'◂c') bl.t T.t_p _ref.t◂(_opn◂{ _r64 rt◂r◂e' _opn◂(rt◂r◂e') }) }
				--∐ cn_h : 
			@. mop e',c' 
				∐ mop : { c' mn◂e'◂c' } 
				∐ mt : { _r64 c' mn◂e'◂c' }
				∐ mtj : { c' _arr◂(mn◂e'◂c') }
			@.ir_m r'
				∐ stt_a : { _r64 _r64 ir_mp◂r' }
				∐ stt_v : CP◂k_t◂s8_p◂T.t_p◂_r64
				∐ stt_r : r' 
			@.ir_mp r' = RP.t◂(ir_m◂r')
			@.ct_mp = { _r64 RP.t◂_r64 ir_mp◂_r64 }
			§ smt_ap o 
				∐ o ⊢ ap_some◂t . 
					∎ t 
				∐. .
					∎|
			§ smt_ap_err◂◂X o 
				∐ o ⊢ ap_some◂t . 
					∎ t 
				∐. .
					_emt_im◂◂X {} ⊢ {}
					∎|
		
		¶	
			@.lc_code r',m',c',p',d'
				∐ jmp : { c' p' }
				∐ seq : { { c' p' d' } lc_code◂r'◂m'◂c'◂p'◂d' }
				∐ mtc : m'
				∐ op_exh : { c' p' d' lc_code◂r'◂m'◂c'◂p'◂d' lc_code◂r'◂m'◂c'◂p'◂d' }
				∐ tj : { r' _lst◂(lc_code◂r'◂m'◂c'◂p'◂d') lc_code◂r'◂m'◂c'◂p'◂d' }
		¶	mtc_test 
			∐ test_eq : {} 
			∐ test_neq : {} 
			∐ test_cmp : {}
		¶ test_var r',c'
			∐ test_cst : c'
			∐ test_var : r'
		¶ mtc_op r',c',p'
			∐ mtc_id : { RP.t◂r' p' }
			∐ mtc_test : { mtc_test test_var◂r'◂c' test_var◂r'◂c' }	
		¶	@.na r',c',p',d'
			∐ na_s : { mtc_op◂r'◂c'◂p' na◂r'◂c'◂p'◂d' }
			∐ na_p : { mtc_op◂r'◂c'◂p' na◂r'◂c'◂p'◂d' na◂r'◂c'◂p'◂d' }
			∐ na_e : { _lst◂r' lc_code◂r'◂(na◂r'◂c'◂p'◂d')◂c'◂p'◂d' }
		¶ lc_na r',c',p',d' = lc_code◂r'◂(na◂r'◂c'◂p'◂d')◂c'◂p'◂d' 
		
		§ B _ 
			∎| 
		§§ mt 
			§ e = 0r 
			§ ne = 1r 
			§ le = 2r 
			§ g = 3r 
			§§ e 
				§ r64 = 4r 
				§ pt = 5r 
				§ s8 = 6r 
				∎∎ 
			§§ ne 
				§ r64 = 7r 
				§ pt = 8r 
				§ s8 = 9r 
				∎∎ 
			§§ le 
				§ r64 = 10r 
				§ s8 = 11r 
				∎∎
			§§ g 
				§ r64 = 12r 
				§ s8 = 13r 
				∎∎ 
			∎∎	
		
		§ axm_pp◂i = RP.atm◂k_op_axm◂{ i ⟦⟧ pp_none◂{} }
		§ axm_ap◂i = RP.atm◂k_op_axm◂{ i ⟦⟧ ap_none◂{} }
		§§ SCM
			§ ini = BST_s8.ini 
			§ asc = BST_s8.asc 
			§ set = BST_s8.set 
			§ set_s { SCM s }
				asc { SCM s } ⊢ { SCM { s p } } 
				$ p ⊢ 
				∐ _some◂p . 
					∎ { SCM p }
				∐. _none◂{} . 
				  _ref.n {} ⊢ P 
					_ref.lc_rpc P ⊢ { P p } 
					set { SCM { s p } } ⊢ { SCM { s _ } } 
					_ref.i { P { s ‹› } } ⊢ p 
					∎ { SCM p }  
			§ len_p # p 
				_ref.o p ⊢ { P { s lb } }
				_s8_len s ⊢ { s ls }  
				_ref.i { P { s lb } } ⊢ p
				∎ { p ls }
			∎∎
		
		§§ EVV 
			§ set # { p k } 
				_ref.i { p k_p◂k } ⊢| 
			§ npt = _ref.n 
			§ lc_rpc = _ref.lc_rpc
			§ alc # k 
				_ref.mk k_p◂k ⊢| 
			§ alc_var # v 
				_ref.mk k_v◂v ⊢| 
			§ lod = _ref.lod 
			§ x = _ref.x
			§ u = _ref.u
			§ lod_evv i 
				_ref.o i ⊢ { I p } 
				$ p ⊢
				∐ k_p◂k . 
					$ k ⊢ k,k0 
					_ref.i { I k_p◂k } ⊢ i 
					∎ { i k0 }
				∐. k_v◂v . 
					∎|
			§ exc_evv { i k0 } 
				_ref.o i ⊢ { I p } 
				$ p ⊢ 
				∐ k_p◂k .
					_ref.i { I k_p◂k0 } ⊢ i 
					∎ { i k }
				∐. k_v◂v .	
					∎|
			
			∎∎
		§ 
			@.mk_lst { l p }
				$ p ⊢ 
				∐ RP.rcd◂l0 . 
					mk_lst_lst { l l0 } ⊢| 
				∐. RP.atm◂a . 
					$ a ⊢ 
					∐ hp◂r .
						∎ ⟦ r < l ⟧ 
					∐ hp_im◂_ . 
						∎ l
					∐ btm◂{} . 
						∎ l 
					∐ dyn_adt◂{ { ax al } ri rd } .
						∎ ⟦ ri rd < l ⟧ 
					∐. stt_adt◂{ i n p } . 
						mk_lst { l p } ⊢|
			@.mk_lst_lst = lst.fld_l◂◂mk_lst
		
		§§ RV 
			§ ini = BST_r64.ini
			§ rpc = BST_r64.rpc 
			§ set = BST_r64.set 
			§ get = BST_r64.get 
			§ asc = BST_r64.asc 
			§ itr = BST_r64.itr 
			§ fld◂◂F { v l } 
				BST_r64.fld◂◂F { l v } ⊢| 
			∎∎
		§§ IRV 
			§ ini = BST_r64.ini
			§ rpc = BST_r64.rpc 
			§ set = BST_r64.set 
			§ get = BST_r64.get 
			§ asc = BST_r64.asc 
			§ itr = BST_r64.itr 
			--§ itr = to_err_T 
			--§ fld = to_err_T 
			§ fld◂◂F # { v l } 
				BST_r64.fld◂◂F { l v } ⊢| 
			
			∎∎
	§§ e_axm 
		§ mk_arr = 0r 
		§ emt = 1r 
		§ ila2 = 2r 
		§ rpc = 3r
		§ app = 4r 
		§ prs = 5r 
		§ id = 6r 
		§ dlt = 7r
		§ cst = 8r
		§ psc = 9r  
		§ synt = 10r 
		§ line = 11r 
		§ grm = 12r
		§ grm_ftr = 13r 
		§ ftr = 14r 
		§ inl = 15r 
		§ tj = 16r 
		§ clp = 17r 
		§ cln = 18r 
		§ cls = 19r 
		§ cld = 20r 
		§ pf = 21r
		§ pf_x = 22r
		§ clc_i = 23r 
		§ clc_o = 24r
		§ clc_d = 25r 
		§ seq = 26r 
		§ alc_i = 27r 
		§ alc_o = 28r 
		§ mk_arr_x = 29r 
		§ push = 30r 
		§ pop = 31r 
		§ id_par = 32r 
		§ ctr = 33r 
		§ oom = 34r 
		§ moo = 35r 
		§ mcp = 36r 
		§ mcn = 37r
		§ mop = 38r 
		§ mt_e = 39r 
		§ mt_ne = 40r
		§ mt_le = 41r 
		§ exn = 42r 
		§ tj = 43r 
		§ tjn = 44r 
		§ tjc = 45r
		§ sqc = 46r  
		§ st = 47r 
		§ ccs = 48r 
		§ mk_stk = 49r
		§ ila = 50r 
		§ ila_n = 51r 
		§ ila_i = 52r 
		§ ila_c = 53r
		§ ct = 54r
		§ ct_scf_d = 55r 
		§ ct_scf_x = 56r 
		§ hp_of = 57r
		§ hp_to = 58r 
		§ hp_ini = 59r
		§ id_T = 60r
		§ prd = 61r
		§ ipr = 62r
		§ dlt_r64 = 63r 
		§ cnc_lod = 64r 
		§ cnc_sto = 65r 
		§ cnc_siz = 66r
		§ dlt_arr_lc = 67r 
		§ dlt_Clr_lc = 68r 
		§ opl = 69r
		§ hp_dlt = 70r
		§ ct_if = 71r
		§ ct_eq = 72r
		§ rmv = 73r 
		§ ct_op2 = 74r
		§ mt = 75r 
		§ mt_e_r64 = 76r 
		§ mt_e_pt = 77r 
		§ mt_e_s8 = 78r
		§ mt_ne_r64 = 79r 
		§ mt_ne_pt = 80r 
		§ mt_ne_s8 = 81r
		§ mt_le_r64 = 82r 
		§ mt_le_s8 = 83r
		§ mt_g_r64 = 84r 
		§ mt_g_s8 = 85r
		§ cmp_s8_im = 86r 
		§ cnc_cst = 87r
		§ ct_cnc_siz = 88r 
		§ ct_hp = 89r 
		-\
		§ hp_of_arr = 87r
		§ hp_to_arr = 88r
		§ hp_of_Clr = 89r
		§ hp_to_Clr = 90r
		§ hp_of_pt = 91r 
		§ hp_to_pt = 92r 
		§ hp_of_st = 93r 
		§ hp_to_st = 94r
		-/
		§ N = 90r 

	§ slv i  
		=+ i' 
		-- 0 mk_arr 
		∐ 
			T.newvar_q {} ⊢ yv
			$ yv ⊢ yv,yv0,yv1
			∎ TX.t_imp◂{ TX.cns2◂{ TX.r64◂{} %yv0 } TX.cns3◂{ TX.r64◂{} %yv TX.arr◂yv1 } }
		-- 1 emt 
		∐
			T.newvar_q {} ⊢ yv
			$ yv ⊢ yv,yv0 
			∎ TX.t_imp◂{ yv yv0 } 
		-- 2 ila2 
		∐ 
			∎| 
		-- 3 rpc 
		∐ 
			T.newvar_q {} ⊢ yv
			$ yv ⊢ yv,yv0,yv1 
			∎ TX.t_imp◂{ yv TX.cns2◂{ yv0 yv1 } } 
		-- 4 app 
		∐ 
			T.newvar_q {} ⊢ yx
			$ yx ⊢ yx,yx0 	
			T.newvar_q {} ⊢ yy
			$ yy ⊢ yy,yy0
			∎ TX.t_imp◂{ TX.cns2◂{ TX.t_imp◂{ yx yy } yx0 } yy0 } 
		-- 5 prs
		∐ 
			T.newvar_q {} ⊢ yv 
			$ yv ⊢ yv,yv0 
			∎ T.ct_imp◂{ TX.grm◂yv TX.prs_opn◂yv0 } 
		-- 6 id 
		∐ 
			T.newvar_q {} ⊢ yv
			$ yv ⊢ yv,yv0 
			∎ TX.t_imp◂{ yv yv0 } 
		-- 7 dlt 
		∐ 
			T.newvar_q {} ⊢ yv
			∎ TX.t_imp◂{ yv TX.unt◂{} } 
		-- 8 cst 
		∐ 
			T.newvar_q {} ⊢ yv
			$ yv ⊢ yv,yv0 
			∎ T.ct_imp◂{ yv TX.t_imp◂{ TX.cns0◂{} yv0 } } 
		-- 9 psc 
		∐ 
			∎ T.ct_imp◂{ TX.s8◂{} TX.grm◂TX.cns0◂{} } 
		-- 10 synt 
		∐ 
			∎ TX.grm◂TX.cns0◂{} 
		∐ 
		-- 11 line 
			∎ TX.grm◂TX.cns0◂{} 
		-- 12 grm 
		∐ 
			T.newvar_q {} ⊢ yv
			$ yv ⊢ yv,yv0 
			∎ T.ct_imp◂{ TX.prs_opn◂yv0 TX.grm◂yv }  
		-- 13 grm_ftr 
		∐ 
			T.newvar_q {} ⊢ yv
			T.newvar_q {} ⊢ yw
			$ yv ⊢ yv,yv0 
			$ yw ⊢ yw,yw0 
			∎ TX.t_ct_imp◂{ TX.t_ct_imp◂{ yw TX.prs_opn◂yv0 } TX.t_ct_imp◂{ yw0 TX.grm◂yv } }  
		-- 14 ftr 
		∐ 
			T.newvar_q {} ⊢ yv
			T.newvar_q {} ⊢ yw
			T.newvar_q {} ⊢ yx
			T.newvar_q {} ⊢ yy
			$ yv ⊢ yv,yv0 
			$ yw ⊢ yw,yw0 
			$ yx ⊢ yx,yx0 
			∎ TX.t_ct_imp3◂{ TX.t_ct_imp◂{ yv yw } TX.t_ct_imp◂{ yx yv0 } yx0 yw0 }  
		-- 15 inl 
		∐ 
			T.newvar_q {} ⊢ yv
			T.newvar_q {} ⊢ yw
			$ yv ⊢ yv,yv0 
			$ yw ⊢ yw,yw0 
			∎ TX.t_ct_imp◂{ TX.t_imp◂{ yv yw } TX.t_imp◂{ yv0 yw0 } }  
		-- 16 tj 
		∐	
			T.newvar_q {} ⊢ yv
			T.newvar_q {} ⊢ yw
			$ yv ⊢ yv,yv0,yv1 
			$ yw ⊢ yw,yw0,yw1 
			∎ TX.t_ct_imp◂{ TX.cns2◂{ TX.arr◂TX.t_imp◂{ yv yw } TX.t_imp◂{ yv1 yw1 } } TX.t_imp◂{ TX.cns2◂{ TX.r64◂{} yv0 } yw0 } }  
		-- 17 clp 
		∐ 
			T.newvar_q {} ⊢ yk
			$ yk ⊢ yk,yk0,yk1,yk2
			∎ TX.t_imp◂{ TX.cns2◂{ TX.Clr◂yk yk0 } TX.cns2◂{ TX.Clr◂yk1 TX.pt◂yk2 } }
		-- 18 cln 
		∐ 
			T.newvar_q {} ⊢ yk
			$ yk ⊢ yk,yk1,yk2
			∎ TX.t_imp◂{ TX.Clr◂yk TX.cns2◂{ TX.Clr◂yk1 TX.pt◂yk2 } }
		-- 19 cls 
		∐ 
			T.newvar_q {} ⊢ yk
			$ yk ⊢ yk,yk0,yk1,yk2,yk3
			∎ TX.t_imp◂{ TX.cns3◂{ TX.Clr◂yk TX.pt◂yk3 yk0 } TX.cns2◂{ TX.Clr◂yk1 TX.pt◂yk2 } }
		-- 20 cld 
		∐ 
			T.newvar_q {} ⊢ yk
			$ yk ⊢ yk,yk1,yk2
			∎ TX.t_imp◂{ TX.cns2◂{ TX.Clr◂yk1 TX.pt◂yk2 } TX.Clr◂yk  }		  
		-- 21 pf 
		∐ 
			T.newvar_q {} ⊢ yk
			$ yk ⊢ yk,yk1,yk2
			∎ TX.t_ct_imp◂{ TX.pf◂yk TX.t_imp◂{ yk1 TX.cns2◂{ yk2 TX.s8◂{} } } }			
		-- 22 pf_x 
		∐ 
			T.newvar_q {} ⊢ yk
			$ yk ⊢ yk,yk1,yk2
			∎ TX.t_ct_imp◂{ TX.pf◂yk TX.t_imp◂{ TX.cns3◂{ TX.s8◂{} TX.r64◂{} yk1 } TX.cns3◂{ TX.s8◂{} TX.r64◂{} yk2 } } }			
		-- 23 clc_i 
		∐ 
			T.newvar_q {} ⊢ yk
			$ yk ⊢ yk,yk1,yk2,yk3
			∎ TX.t_imp◂{ TX.cns2◂{ TX.Clr_lc◂yk1 yk2 } TX.cns2◂{ TX.Clr◂yk TX.pt◂yk3 } }
		-- 24 clc_o 
		∐ 
			T.newvar_q {} ⊢ yk
			$ yk ⊢ yk,yk1,yk2,yk3
			∎ TX.t_imp◂{ TX.cns2◂{ TX.Clr◂yk TX.pt◂yk3 } TX.cns2◂{ TX.Clr_lc◂yk1 yk2 } }		  		  
		-- 25 clc_d 
		∐ 
			T.newvar_q {} ⊢ yk
			$ yk ⊢ yk,yk1
			∎ TX.t_imp◂{ TX.Clr_lc◂yk TX.Clr◂yk1 }		  		  
		-- 26 seq 
		∐ 
			T.newvar_q {} ⊢ y0
			T.newvar_q {} ⊢ y1
			T.newvar_q {} ⊢ y2
			$ y0 ⊢ y0,y0t 
			$ y1 ⊢ y1,y1t 
			$ y2 ⊢ y2,y2t 
			∎ TX.t_ct_imp◂{ TX.cns2◂{ TX.t_imp◂{ y0t y1 } TX.t_imp◂{ y1t y2t } } TX.t_imp◂{ y0 y2 } } 
		-- 27 alc_i 
		∐ 
			T.newvar_q {} ⊢ yk
			T.newvar_q {} ⊢ yt
			$ yt ⊢ yt,yt0 
			$ yk ⊢ yk,yk1,yk2,yk3
			∎ TX.t_imp◂{ TX.cns2◂{ TX.arr_lc_q◂{ yk1 yt } yk2 } TX.cns2◂{ TX.arr_q◂{ yk yt0 } TX.r64◂{} } }
		-- 28 alc_o 
		∐ 
			T.newvar_q {} ⊢ yk
			T.newvar_q {} ⊢ yt
			$ yt ⊢ yt,yt0 
			$ yk ⊢ yk,yk1,yk2,yk3
			∎ TX.t_imp◂{ TX.cns2◂{ TX.arr_q◂{ yk yt } TX.r64◂{} } TX.cns2◂{ TX.arr_lc_q◂{ yk1 yt0 } yk2 } }		  		  
		-- 29 mk_arr_x 
		∐ 
			T.newvar_q {} ⊢ yv
			$ yv ⊢ yv,yv0,yv1
			∎ TX.t_imp◂{ TX.cns2◂{ TX.r64◂{} %yv0 } TX.cns3◂{ TX.r64◂{} %yv TX.arr_x◂yv1 } }
		-- 30 push 
		∐ 
			T.newvar_q {} ⊢ yv
			$ yv ⊢ yv,yv0
			$ TX.arr_x◂yv0 ⊢ a0,a1
			∎ TX.t_imp◂{ TX.cns2◂{ yv a0 } a1 }
		-- 31 pop 
		∐ 
			T.newvar_q {} ⊢ yv
			$ yv ⊢ yv,yv0
			$ TX.arr_x◂yv0 ⊢ a0,a1
			∎ TX.t_imp◂{ a0 TX.cns2◂{ yv a1 } }
		-- 32 id_par 
		∐ 
			T.newvar_q {} ⊢ y0
			T.newvar_q {} ⊢ y1
			T.newvar_q {} ⊢ y2
			$ y0 ⊢ y0,y0t 
			$ y1 ⊢ y1,y1t 
			$ y2 ⊢ y2,y2t 
			∎ TX.t_ct_imp◂{ TX.t_imp◂{ y0 y1 } TX.t_imp◂{ TX.cns2◂{ y2 y0t } TX.cns2◂{ y2t y1t } } } 		
		-- 33 ctr 
		∐ 
			T.newvar_q {} ⊢ y0
			T.newvar_q {} ⊢ y1
			$ y0 ⊢ y0,y0t 
			$ y1 ⊢ y1,y1t 
			∎ TX.t_ct_imp◂{ TX.t_ctr◂{ y0 y1 } TX.t_imp◂{ y0t y1t } } 		
		-- 34 oom 
		∐ 
			T.newvar_q {} ⊢ y0
			T.newvar_q {} ⊢ y1
			$ y0 ⊢ y0,y0t 
			$ y1 ⊢ y1,y1t 
			∎ TX.t_ct_imp◂{ TX.t_mtc◂{ y0 y1 } TX.t_imp◂{ y0t y1t } }
		-- 35 moo 
		∐ 
			T.newvar_q {} ⊢ y0
			T.newvar_q {} ⊢ y1
			$ y0 ⊢ y0,y0t 
			$ y1 ⊢ y1,y1t 
			∎ TX.t_ct_imp◂{ TX.t_imp◂{ y0t y1t } TX.t_mtc◂{ y0 y1 } }
		-- 36 mcp 
		∐ 
			T.newvar_q {} ⊢ y0
			T.newvar_q {} ⊢ y1
			T.newvar_q {} ⊢ y2
			$ y0 ⊢ y0,y0t,y0s 
			$ y1 ⊢ y1,y1t 
			$ y2 ⊢ y2,y2t,y2s
			∎ TX.t_ct_imp◂{ TX.cns3◂{ TX.t_mop◂{ y0 y1 } TX.t_mtc◂{ y1t y2 } TX.t_mtc◂{ y0t y2t } } TX.t_mtc◂{ y0s y2s } }
		-- 37 mcn 
		∐ 
			T.newvar_q {} ⊢ y0
			T.newvar_q {} ⊢ y1
			∎ TX.t_ct_imp◂{ TX.cns0◂{} TX.t_mtc◂{ y0 y1 } }		 			
		-- 38 mop 
		∐ 
			T.newvar_q {} ⊢ y0
			T.newvar_q {} ⊢ y1
			$ y0 ⊢ y0,y0t,y0s 
			$ y1 ⊢ y1,y1t 
			∎ TX.t_ct_imp◂{ TX.t_ctr◂{ y1 y0 } TX.t_mop◂{ y0t y1t } } 
		-- 39 mt_e 
		∐ 
			T.newvar_q {} ⊢ y0
			T.newvar_q {} ⊢ y1
			T.newvar_q {} ⊢ y2
			$ y0 ⊢ y0,y0t,y0s 
			$ y1 ⊢ y1,y1t 
			∎ TX.t_ct_imp◂{ TX.t_ctr◂{ y0 TX.cns2◂{ TX.cns2◂{ y1 y1t } y2 } } TX.t_mop◂{ y0t y0s } } 
		-- 40 mt_ne 
		∐ 
			T.newvar_q {} ⊢ y0
			T.newvar_q {} ⊢ y1
			T.newvar_q {} ⊢ y2
			$ y0 ⊢ y0,y0t,y0s 
			$ y1 ⊢ y1,y1t 
			∎ TX.t_ct_imp◂{ TX.t_ctr◂{ y0 TX.cns2◂{ TX.cns2◂{ y1 y1t } y2 } } TX.t_mop◂{ y0t y0s } } 
		-- 41 mt_le 
		∐ 
			T.newvar_q {} ⊢ y0
			T.newvar_q {} ⊢ y1
			T.newvar_q {} ⊢ y2
			$ y0 ⊢ y0,y0t,y0s 
			$ y1 ⊢ y1,y1t 
			∎ TX.t_ct_imp◂{ TX.t_ctr◂{ y0 TX.cns2◂{ TX.cns2◂{ y1 y1t } y2 } } TX.t_mop◂{ y0t y0s } } 
		-- 42 exn 
		∐ 
			T.newvar_q {} ⊢ y0
			T.newvar_q {} ⊢ yx
			∎ TX.t_ct_imp◂{ yx TX.t_imp◂{ TX.cns0◂{} y0 } }			
		-- 43 tj 
		∐ 
			T.newvar_q {} ⊢ ya
			T.newvar_q {} ⊢ yb
			T.newvar_q {} ⊢ yc
			T.newvar_q {} ⊢ yv
			$ ya ⊢ ya,ya0,ya1 
			$ yc ⊢ yc,yc0 
			∎ TX.t_ct_imp◂{ TX.cns2◂{ TX.t_ctr◂{ ya TX.cns2◂{ yv yb } } TX.t_tj◂{ ya0 yc } } TX.t_mtc◂{ ya1 yc0 } }
		-- 44 tjn 
		∐ 
			T.newvar_q {} ⊢ y0
			T.newvar_q {} ⊢ y1
			$ y0 ⊢ y0,y0t 
			$ y1 ⊢ y1,y1t
			∎ TX.t_ct_imp◂{ TX.t_mtc◂{ y0 y1 } TX.t_tj◂{ y0t y1t } } 
		-- 45 tjc 
		∐ 
			T.newvar_q {} ⊢ ya
			T.newvar_q {} ⊢ yb
			$ ya ⊢ ya,ya0,ya1 
			$ yb ⊢ yb,yb0,yb1 
			∎ TX.t_ct_imp◂{ TX.cns2◂{ TX.t_mtc◂{ ya yb } TX.t_tj◂{ ya0 yb0 } } TX.t_tj◂{ ya1 yb1 } } 
		-- 46 sqc
		∐ 
			T.newvar_q {} ⊢ y0
			T.newvar_q {} ⊢ y1
			T.newvar_q {} ⊢ y2
			$ y0 ⊢ y0,y0t 
			$ y1 ⊢ y1,y1t 
			$ y2 ⊢ y2,y2t 
			∎ TX.t_ct_imp◂{ TX.cns2◂{ TX.t_ctr◂{ y0t y1 } TX.t_ctr◂{ y1t y2t } } TX.t_ctr◂{ y0 y2 } } 
		-- 47 st 
		∐ 
			T.newvar_q {} ⊢ y0
			$ y0 ⊢ y0,y00 
			∎ TX.t_ct_imp◂{ y0 TX.t_imp◂{ TX.cns0◂{} TX.st◂y00 } }
		-- 48 ccs 
		∐
			∎ TX.t_ct_imp◂{ TX.cns2◂{ TX.s8◂{} TX.s8◂{} } TX.s8◂{} }
		-- 49 mk_stk 
		∐ 
			T.newvar_q {} ⊢ yv
			T.newvar_q {} ⊢ yw			
			T.newvar_q {} ⊢ yz
			$ yv ⊢ yv,yv0,yv1,yv2,yv3
			$ yw ⊢ yw,yw0 
			$ yz ⊢ yz,yz0 
			∎ TX.t_ct_imp◂{ TX.t_imp◂{ TX.cns2◂{ TX.cns3◂{ TX.r64◂{} yv3 TX.arr◂yv2 } yw } yz } TX.t_imp◂{ TX.cns2◂{ TX.cns2◂{ TX.r64◂{} %yv0 } yw0 } yz0 } }
		-- 50 ila 
		∐ 
			T.newvar_q {} ⊢ ys
			T.newvar_q {} ⊢ yd
			$ ys ⊢ ys,ys0 
			$ yd ⊢ yd,yd0 
			∎ TX.t_ct_imp◂{ TX.cns3◂{ TX.ila◂ys TX.ila◂yd TX.s8◂{} } TX.t_imp◂{ ys0 yd0 } }		
		-- 51 ila_n 
		∐ 
			∎ TX.ila◂TX.rcd◂TX.rcd_unt◂{}
		-- 52 ila_i 
		∐ 
			T.newvar_q {} ⊢ y
			$ y ⊢ y,y0
			∎ TX.t_ct_imp◂{ TX.ila◂TX.rcd◂y TX.ila◂TX.rcd◂TX.prd◂{ TX.r64◂{} y0 } } 
		-- 53 ila_c 
		∐ 
			T.newvar_q {} ⊢ y
			$ y ⊢ y,y0
			∎ TX.t_ct_imp◂{ TX.ila◂TX.rcd◂y TX.ila◂TX.rcd◂TX.prd◂{ TX.r64◂{} y0 } } 
		-- 54 ct 
		∐ 
			T.newvar_q {} ⊢ ys
			T.newvar_q {} ⊢ yd
			$ ys ⊢ ys,ys0
			$ yd ⊢ yd,yd0
			∎ TX.t_ct_imp◂{ TX.t_imp◂{ ys yd } TX.t_ct_imp◂{ ys0 yd0 } } 
		-- 55 ct_scf_d 
		∐
			∎ TX.t_ct_imp◂{ TX.r64◂{} TX.s8◂{} }
		-- 56 ct_scf_x 
		∐
			∎ TX.t_ct_imp◂{ TX.r64◂{} TX.s8◂{} }
		-- 57 hp_of
		∐ 
			T.newvar_q {} ⊢ y
			$ y ⊢ y,y0
			∎ TX.t_imp◂{ y TX.cns2◂{ TX.r64◂{} TX.hp◂y0 } }
		-- 58 hp_to
		∐ 
			T.newvar_q {} ⊢ y
			$ y ⊢ y,y0
			∎ TX.t_imp◂{ TX.cns2◂{ TX.r64◂{} TX.hp◂y } y0 }
		-- 59 hp_ini 
		∐ 
			T.newvar_q {} ⊢ y
			∎ TX.t_imp◂{ TX.cns0◂{} TX.hp◂y }
		-- 60 id_T 
		∐ 
			T.newvar_q {} ⊢ y
			$ y ⊢ y,y0,y1
			∎ TX.t_ct_imp◂{ TX.dmy◂y TX.t_imp◂{ y0 y1 } }
		-- 61 prd 
		∐ 
			T.newvar_q {} ⊢ y
			T.newvar_q {} ⊢ yr
			$ y ⊢ y,y0 
			$ yr ⊢ yr,yr0
			∎ TX.t_imp◂{ TX.cns2◂{ y0 TX.rcd◂yr0 } TX.rcd◂TX.prd◂{ y yr } }
		-- 62 ipr 
		∐ 
			T.newvar_q {} ⊢ y
			T.newvar_q {} ⊢ yr
			$ y ⊢ y,y0 
			$ yr ⊢ yr,yr0
			∎ TX.t_imp◂{ TX.rcd◂TX.prd◂{ y yr } TX.cns2◂{ y0 TX.rcd◂yr0 } }
		-- dlt_r64 
		∐ 
			∎ TX.t_imp◂{ TX.r64◂{} TX.cns0◂{} }
		-- cnc_lod 
		∐ 
			T.newvar_q {} ⊢ y
			∎ TX.t_imp◂{ TX.r64◂{} TX.cns2◂{ TX.r64◂{} y } }
		-- cnc_sto
		∐ 
			T.newvar_q {} ⊢ y
			∎ TX.t_imp◂{ TX.cns2◂{ TX.r64◂{} y } TX.r64◂{} }
		-- cnc_siz
		∐
			T.newvar_q {} ⊢ y
			T.newvar_q {} ⊢ z
			T.newvar_q {} ⊢ w
			$ z ⊢ z,z0 
			$ w ⊢ w,w0
			$ TX.t_imp◂{ TX.cns2◂{ TX.hp◂y z0 } w0 } ⊢ f 
			∎ TX.t_ct_imp◂{ TX.t_ct_imp◂{ TX.r64◂{} TX.t_imp◂{ z w } } f }
		-- dlt_arr_lc
		∐
			T.newvar_q {} ⊢ y
			∎ TX.t_imp◂{ TX.arr_lc◂y TX.cns0◂{} }
		-- dlt_Clr_lc
		∐
			T.newvar_q {} ⊢ y
			∎ TX.t_imp◂{ TX.Clr_lc◂y TX.cns0◂{} }
		-- opl 
		∐
			T.newvar_q {} ⊢ y
			T.newvar_q {} ⊢ z
			$ TX.t_imp◂{ y z } ⊢ y,y0
			∎ TX.t_ct_imp◂{ y y0 } 
		-- hp_dlt 
		∐ 
			T.newvar_q {} ⊢ y
			∎ TX.t_imp◂{ TX.hp◂y TX.cns0◂{} }
		-- ct_if 
		∐ 
			T.newvar_q {} ⊢ y
			$ y ⊢ y,y0,y1 
			∎ TX.t_ct_imp◂{ TX.cns3◂{ TX.r64◂{} y y0 } y1 }
		-- ct_eq 
		∐ 
			T.newvar_q {} ⊢ y
			$ y ⊢ y,y0
			∎ TX.t_ct_imp◂{ TX.cns2◂{ y y0 } TX.r64◂{} }
		-- rmv 
		∐ 
			T.newvar_q {} ⊢ yv
			∎ TX.t_imp◂{ yv TX.unt◂{} } 
		-- ct_op2 
		∐ 
			∎ TX.t_ct_imp◂{ TX.r64◂{} TX.t_ct_imp◂{ TX.cns2◂{ TX.r64◂{} TX.r64◂{} } TX.r64◂{} } }
		-- mt 
		∐ 
			T.newvar_q {} ⊢ y0
			T.newvar_q {} ⊢ y1
			T.newvar_q {} ⊢ y2
			$ y0 ⊢ y0,y0t,y0s 
			$ y1 ⊢ y1,y1t,y1u 
			∎ TX.t_ct_imp◂{ TX.cns2◂{ TX.mt◂y1u TX.t_ctr◂{ y0 TX.cns2◂{ TX.cns2◂{ y1 y1t } y2 } } } TX.t_mop◂{ y0t y0s } } 
		-- mt_e_r64 = 76r 
		∐ 
			∎ TX.mt◂TX.r64◂{} 
		-- mt_e_pt = 77r 
		∐ 
			T.newvar_q {} ⊢ y0
			∎ TX.mt◂TX.pt◂y0 
		-- mt_e_s8 = 78r
		∐ 
			∎ TX.mt◂TX.s8◂{} 
		-- ne_r64 
		∐ 
			∎ TX.mt◂TX.r64◂{} 
		-- mt_e_pt = 77r 
		∐ 
			T.newvar_q {} ⊢ y0
			∎ TX.mt◂TX.pt◂y0 
		-- mt_e_s8 = 78r
		∐ 
			∎ TX.mt◂TX.s8◂{} 
		-- mt_ne_r64 = 79r 
		∐ 
			∎ TX.mt◂TX.r64◂{} 
		-- mt_e_s8 = 78r
		∐ 
			∎ TX.mt◂TX.s8◂{} 
		∐ 
			∎ TX.mt◂TX.r64◂{} 
		-- mt_e_s8 = 78r
		∐ 
			∎ TX.mt◂TX.s8◂{} 
		-- cmp_s8_im 
		∐ 
			∎ TX.t_ct_imp◂{ TX.s8◂{} TX.t_imp◂{ TX.cns2◂{ TX.s8◂{} TX.r64◂{} } TX.cns3◂{ TX.s8◂{} TX.r64◂{} TX.r64◂{} } } }
		-- cnc_cst
		∐
			T.newvar_q {} ⊢ t0
			T.newvar_q {} ⊢ t1
			$ t0 ⊢ t0,t00
			$ TX.t_ct_imp◂{ TX.t_ct_imp◂{ TX.r64◂{} t0 } TX.t_imp◂{ TX.hp◂t1 t00 } } ⊢ yx
			∎ yx 
		-- ct_cnc_siz
		∐
			T.newvar_q {} ⊢ t0
			$ TX.t_ct_imp◂{ TX.hp◂t0 TX.r64◂{} } ⊢ yx
			∎ yx 	
		-- ct_hp
		∐
			T.newvar_q {} ⊢ t0
			$ TX.hp◂t0 ⊢ yx
			∎ yx 	
		∐. 
			_emt.f i ⊢ _ 
			∎| 
		∎∎
	§§ EX = e_axm 
	
	§§ IR 
		§ nm_e = nm_e 
		§ nm_m = nm_m 
		§ nm_n = nm_n 
		§ mop = mop 
		§ mt = mt 
		§ mtj = mtj 
		
		§ stt_a = stt_a 
		§ stt_v = stt_v 
		§ stt_r = stt_r
		¶ ir_mp = ir_mp 
		§§ V = RV 
		¶ 
			
			@.mv 
				∐ v_l : {} 
				∐ v_q : _r64 
				∐ v_ln : ir_mp◂(_ref◂mv)
		§ 
			@.inst_t { v i } 
				V.asc { v i } ⊢ { v { i o } } 
				∐ o ⊢ _some◂p . 
					∎ { v stt_r◂p }
				∐. . 
					_ref.mk v_l◂{} ⊢ p 
					$ p ⊢ p,p0 
					V.set { v { i p0 } } ⊢ { v _ } 
					∎ { v stt_r◂p }
			@.inst_tp = RP.map_l◂◂inst_t
		§ 
			@.inst_m { v m } 
				$ m ⊢ 
				∐ stt_a◂{ ia na p } . 
					inst_mp { v p } ⊢ { v p } 
					∎ { v stt_a◂{ ia na p } }
				∐ stt_v◂_ . 
					∎| 
				∐. stt_r◂i .
					V.asc { v i } ⊢ { v { i o } } 
					∐ o ⊢ _some◂p . 
						∎ { v stt_r◂p }
					∐. . 
						_ref.mk v_l◂{} ⊢ p 
						$ p ⊢ p,p0 
						V.set { v { i p0 } } ⊢ { v _ } 
						∎ { v stt_r◂p }
			@.inst_mp = RP.map_l◂◂inst_m
		§ 
			@.unify { sp xp }
				∐ xp ⊢ RP.atm◂ stt_r◂i0 .  
					_ref.u { i0 v_ln◂sp } ⊢ _
					∎ {}
				∐ sp ⊢ RP.atm◂ stt_r◂r1 . 
					_ref.u { r1 v_ln◂xp } ⊢ _
					∎ {}
				∐ sp ⊢ RP.rcd◂l0; xp ⊢ RP.rcd◂l1 . 
					unify_lst { l0 l1 } ⊢|
				∐. . 
					∎| 
			@.unify_lst { l0 l1 } 
				∐ l0 ⊢ _cns◂{ sp l0 }; l1 ⊢ _cns◂{ xp l1 } . 
					unify { sp xp } ⊢ {}
					unify_lst { l0 l1 } ⊢| 
				∐ l0 ⊢ _nil◂{}; l1 ⊢ _nil◂{} . 
					∎ {}
				∐. . 
					∎|

		§ 
			@.gen_m_tp { n m }
				$ m ⊢ 
				∐ stt_r◂p . 
					_ref.o p ⊢ { P v } 
					$ v ⊢ 
					∐ v_l◂{} . 
						inc_x n ⊢ { j n } 
						$ j ⊢ j,j0 
						_ref.i { P v_q◂j0 } ⊢ _ 
						∎ { n RP.atm◂j }
					∐ v_q◂_ . 
						∎| 
					∐. v_ln◂p . 
						$ P ⊢ _ 
						gen_mp_tp { n p } ⊢| 
				∐ stt_v◂_ . 
					∎| 
				∐. stt_a◂_ . 
					∎| 
			@.gen_mp_tp = RP.map_l_atm◂◂gen_m_tp
		§ 
			@.gen_m_mp { {} m }
				$ m ⊢ 
				∐ stt_r◂p . 
					_ref.o p ⊢ { P v } 
					$ v ⊢ 
					∐ v_l◂{} . 
						∎| 
					∐ v_q◂j . 
						$ P ⊢ _
						∎ { {} RP.atm◂ stt_r◂j }
					∐. v_ln◂p . 
						$ P ⊢ _
						gen_mp_mp p ⊢ p 
						∎ { {} p } 
				∐ stt_v◂_ . 
					∎| 
				∐. stt_a◂{ ia na p } . 
					gen_mp_mp p ⊢ p 
					∎ { {} RP.atm◂stt_a◂{ ia na p } }
			@.gen_mp_mp # mp 
				RP.map_l_atm◂◂gen_m_mp { {} mp } ⊢ { {} mp }
				∎ mp
				
		§	
			@.asc_ply { av { xp sp } } 
				∐ xp ⊢ RP.rcd◂l0; sp ⊢ RP.rcd◂l1 . 
					asc_ply_lst { av { l0 l1 } } ⊢|
				∐ xp ⊢ RP.atm◂i0 .  
					set_tv { av i0 sp } ⊢ { av i0 } 
					∎ av 
				∐. . 
					∎| 
			@.asc_ply_lst { av { l0 l1 } }
				∐ l0 ⊢ _cns◂{ xp l0 }; l1 ⊢ _cns◂{ sp l1 } . 
					asc_ply { av { xp sp } } ⊢ av
					asc_ply_lst { av { l0 l1 } } ⊢| 
				∐ l0 ⊢ _nil◂{}; l1 ⊢ _nil◂{} . 
					∎ av
				∐. . 
					∎| 
			§ 
				@.subst_ply = RP.map_l_atm◂◂subst_ply_atm
				@.subst_ply_atm { av a }
					$ a ⊢ 
					∐ re_reg◂i . 
						get_tv { av i } ⊢ { av i p } 
						∎ { av p } 
					∐ re_agl◂{ e sp } . 
						subst_ply { av sp } ⊢ { av p } 
						RP.atm_a e ⊢ e 
						app_ctr { e p } ⊢ p 
						∎ { av p } 
					∐. re_v◂c . 
						∎|
				@.app_ctr_stk # { { _ _ av } { xp yp p } }
					asc_ply { av { xp p } } ⊢ av
					subst_ply { av yp } ⊢ { _ p }
					∎ p
				@.app_ctr { k p } 
					∐ k ⊢ k_ctr◂{ ia na _ } . 
						∎ RP.atm◂stt_a◂{ ia na p } 
					∐ k ⊢ k_name◂i . 
						EVV.lod_evv i ⊢ { _ c } 
						RP.atm_a c ⊢ c 
						app_ctr { c p } ⊢| 
					∐ k ⊢ k_ply◂{ nc xp yp } . 
						_mk_stk◂◂app_ctr_stk { { nc _none◂{} } { xp yp p }  } ⊢| 
					∐ k ⊢ k_op_axm◂{ a l _ }; a'=EX.sqc; l ⊢ _cns◂{ RP.rcd◂_cns◂{ RP.atm◂c0 _cns◂{ RP.atm◂c1 _nil◂{} } } _nil◂{} } . 
						app_ctr { c0 p } ⊢ p 
						app_ctr { c1 p } ⊢| 
					∐. . 
						∎|
				
				§ 
					@.m_of_mtc { {} m } 
						$ m ⊢ 
						∐ re_agl◂{ e mp } . 
							m_of_mp mp ⊢ mp 
							RP.atm_a e ⊢ e 
							app_ctr { e mp } ⊢ mp 
							∎ { {} mp }
						∐ re_reg◂i . 
							∎ { {} RP.atm◂stt_r◂i }
						∐. re_v◂c .  
							∎ { {} RP.atm◂stt_v◂c }
 					@.m_of_mp # mp 
						RP.map_l_atm◂◂m_of_mtc { {} mp } ⊢ { {} mp }
						∎ mp

		∎∎			
		§ op_call◂{ c s m } = { c s m } 
		§ op_inl◂{ c s m } = { c s m } 		
		§ 
			@.map_l_rt_reg_atm◂◂F { v a } 
				∐ a ⊢ hp◂r0 . 
					F { v r0 } ⊢ { v r0 } 
					∎ { v hp◂r0 }
				∐ a ⊢ stt_adt◂{ ia nn pa } . 
					RP.map_l◂◂(map_l_rt_reg_atm◂◂F) { v pa } ⊢ { v pa }
					∎ { v stt_adt◂{ ia nn pa } }
				∐ a ⊢ dyn_adt◂{ { ax al } ri rd } . 
					F { v ri } ⊢ { v ri } 
					F { v rd } ⊢ { v rd } 
					∎ { v dyn_adt◂{ { ax al } ri rd } }
				∐. . 
					∎ { v a }
		§ @.ctr_of_k c 
			∐ c ⊢ k_ctr◂c . 
				∎ c 
			∐ c ⊢ k_name◂i . 
				EVV.lod_evv i ⊢ { i c }
				∐ c ⊢ RP.atm◂c . 
					ctr_of_k c ⊢| 
				∐. . 
					∎|
			∐. . 
				∎|
		
		¶ agl_t a',b' 
			∐ agl_s : a' 
			∐ agl_d : b' 
			∐ agl_b : {} 
		§ agl_rt p
			∐ p ⊢ RP.atm◂hp_im◂RP.atm◂c0 . 
				∎|
			∐ p ⊢ RP.atm◂stt_adt◂{ ia na pa } . 
				∎ agl_s◂{ ia na pa }
			∐ p ⊢ RP.atm◂dyn_adt◂{ L ri rd } . 
				∎ agl_d◂{ L ri rd }
			∐ p ⊢ RP.atm◂btm◂{} . 
				∎ agl_b◂{}
			∐. . 
				∎|	
		§ 
			@.is_btm { b a } 
				$ a ⊢ 
				∐ hp◂_ .
					∎ b
				∐ hp_im◂_ . 
					∎ b
				∐ stt_adt◂{ _ _ pa } . 
					is_btm_ptn { b pa } ⊢| 
				∐ dyn_adt◂{ L ri rd } . 
					∎ b
				∐. btm◂{} . 
					∎ %[ 1r ]
			@.is_btm_ptn = RP.fld_l◂◂is_btm  
		§ 	
			@.eq_ct_ptn = RP.eq◂◂eq_ct
			@.eq_ct_lst = lst.eq_err◂◂eq_ct_ptn 
			@.eq_ct  { c0 c1  }
				∐ c0 ⊢ k_name◂i0 . 
					EVV.lod_evv i0 ⊢ { i0 c2  }
					eq_ct_ptn  { c2 RP.atm◂c1 } ⊢ { _ c1 b  }
					RP.atm_a c1 ⊢ c1
					∎  { k_name◂i0 c1 b }
				∐ c1 ⊢ k_name◂i1 . 
					EVV.lod_evv i1 ⊢ { i1 c2  }
					eq_ct_ptn  { RP.atm◂c0 c2  }⊢  { c0 c2 b  }
					RP.atm_a c0 ⊢ c0
					∎ { c0 k_name◂i1 b }		
				∐ c0 ⊢ k_op_gnr◂{ o_t0 ib0 lc0 v0 }; c1 ⊢ k_op_gnr◂{ o_t1 ib1 lc1 v1 } .
					_ref.eq { lc0 lc1 } ⊢ { { lc0 lc1 } b } 
					bl.of_r b ⊢ b 
					∎  { k_op_gnr◂{ o_t0 ib0 lc0 v0 } k_op_gnr◂{ o_t1 ib1 lc1 v1  } b }
				∐ c0 ⊢ k_op◂{ ib0 lc0 v0 }; c1 ⊢ k_op◂{ ib1 lc1 v1 } .
					_ref.eq { lc0 lc1 } ⊢ { { lc0 lc1 } b } 
					bl.of_r b ⊢ b 
					∎  { k_op◂{ ib0 lc0 v0 } k_op◂{ ib1 lc1 v1  } b }
				∐ c0 ⊢ k_r64◂x0; c1 ⊢ k_r64◂x1; x0'=x1' . 
					∎  { k_r64◂x0 k_r64◂x1 bl.t◂{ } }
				∐ c0 ⊢ k_s8◂s0; c1 ⊢ k_s8◂s1 . 
					_ref.eq { s0 s1 } ⊢ { { s0 s1 } b }
					∐ b'=1r .
						∎ { k_s8◂s0 k_s8◂s1 t◂{ } }
					∐. .
						∎ { k_s8◂s0 k_s8◂s1 bl.f◂{ } }
				∐ c0 ⊢ k_ctr◂{ i0 n0 v0 }; c1 ⊢ k_ctr◂{ i1 n1 v1 }; i0'=i1' . 
					∎ { k_ctr◂{ i0 n0 v0 } k_ctr◂{ i1 n1 v1 } t◂{ } }
				∐ c0 ⊢ k_op_axm◂{ n0 l0 o0 }; c1 ⊢ k_op_axm◂{ n1 l1 o1 }; n0'=n1' . 
					eq_ct_lst { l0 l1  } ⊢ { l0 l1 b  } 
					∎ { k_op_axm◂{ n0 l0 o0 } k_op_axm◂{ n1 l1 o1  } b }
				∐ c0 ⊢ k_app◂{ k0 k1 }; c1 ⊢ k_app◂{ k2 k3 } . 
					eq_ct_ptn { k0 k2  } ⊢ { k0 k2 b0  } 
					$ b0 ⊢ 
					∐ bl.t◂{} . 
						eq_ct_ptn { k1 k3  } ⊢ { k1 k3 b1  } 
						∎ { k_app◂{ k0 k1 } k_app◂{ k2 k3  } b1 }
					∐. bl.f◂{} .	
						∎ { k_app◂{ k0 k1 } k_app◂{ k2 k3 } bl.f◂{ } }					
				∐ c0 ⊢ k_ap◂{ p0 t0 }; c1 ⊢ k_ap◂{ p1 t1 } .
					_ref.eq { p0 p1 } ⊢ { { p0 p1 } b } 
					bl.of_r b ⊢ b 
					∎ { k_ap◂{ p0 t0 } k_ap◂{ p1 t1 } b }
				∐. . 
					∎ { c0 c1 bl.f◂{ } }
		§ @.r64_of_k c 
			RP.atm_a c ⊢ c 
			∐ c ⊢ k_r64◂x . 
				∎ x 
			∐ c ⊢ k_name◂i . 		
				EVV.lod_evv i ⊢ { i c  }
				r64_of_k c ⊢| 
			∐. . 
				∎|
		§ @.s8_of_k c 
			RP.atm_a c ⊢ c 
			∐ c ⊢ k_s8◂s . 
				∎ s 
			∐ c ⊢ k_name◂i . 
				EVV.lod_evv i ⊢ { i c  }
				s8_of_k c ⊢| 
			∐. . 
				∎|  
		§§ pnt 
			§ 
				@.cst { e c }
					$ c ⊢ 
					∐ k_r64◂x . 
						^ x ⊢ x,sr
						0d' "r" //
						rp8.add_s8 { e sr } ⊢ e 
						∎ e 
					∐ k_s8◂s . 
						rp8.add_st_s8_im◂◂"\"..\"" e ⊢ e 
						∎ e
					∐ k_ctr◂_ . 
						rp8.add_st_s8_im◂◂"_◂_" e ⊢ e 
						∎ e
					∐ k_pf◂_ .
						rp8.add_st_s8_im◂◂"(^= ..)" e ⊢ e 
						∎ e
					∐ k_arr◂_ .
						rp8.add_st_s8_im◂◂"{+ .. }" e ⊢ e 
						∎ e
					∐ k_t◂_ .
						rp8.add_st_s8_im◂◂"'[ .. : .. ]" e ⊢ e 
						∎ e
					∐ k_ply◂_ .
						rp8.add_st_s8_im◂◂"\\ _ . _" e ⊢ e 
						∎ e
					∐ k_ap◂_ . 
						rp8.add_st_s8_im◂◂"?ap" e ⊢ e 
						∎ e
					∐ k_unv◂_ .
						rp8.add_st_s8_im◂◂"?unv" e ⊢ e 
						∎ e
					∐ k_btm◂_ . 
						rp8.add_st_s8_im◂◂"-" e ⊢ e 
						∎ e
					∐ k_name◂i . 
						rp8.add_st_s8_im◂◂"#" e ⊢ e 
						∎ e
					∐ k_op_axm◂{ ax _ _ } . 
						^ ax ⊢ _,sr 
							".#0x" 0x' //
						rp8.add_s8 { e sr } ⊢ e 
						∎ e 
					∐ k_op_gnr◂{ _ _ _ _ } . 	
						rp8.add_st_s8_im◂◂"→[ * ]" e ⊢ e 
						∎ e	
					∐ k_op◂{ _ _ _ } . 
						_st◂◂"→[]" {} ⊢ st 
						rp8.add_st_s8 { e st } ⊢ e 
						∎ e	
					∐ k_fnc◂_ . 
						rp8.add_st_s8_im◂◂"?:k_fnc" e ⊢ e 
						∎ e
					∐. k_app◂{ c0 c1 } .
						rp8.add_st_s8_im◂◂"(" e ⊢ e
						ct_ptn { e c0 } ⊢ e 
						rp8.add_st_s8_im◂◂"◂◂" e ⊢ e 
						ct_ptn { e c1 } ⊢ e 
						rp8.add_st_s8_im◂◂")" e ⊢ e
						∎ e	
					@.ct_ptn = RP.fld_l◂◂cst

				§ ct_ptn # c 
					ct_ptn { rp8.e◂{} c } ⊢ e 
					rp8.to_s8 e ⊢ s 
					∎ s
			§	@.g_v { gn e r }
					_ref.lod r ⊢ { _ v }
					$ v ⊢ 
					∐ v_i◂i . 
						^ i ⊢ _,s 
							0d' "'" // 
						rp8.add_s8 { e s } ⊢ e 
						∎ { gn e }
					∐ v_ln◂r . 
						g_v { gn e r } ⊢| 
					∐. v_l◂{} .  
						rp8.add_st_s8_im◂◂"?v_l" e ⊢ e 
						∎ { gn e }
			§ @.rt_atm { GV e a } 
					$ a ⊢ 					
					∐ hp◂r . 
						g_v { GV e r } ⊢ { GV e } 
						∎ { GV e }
					∐ hp_im◂v . 
						rp8.add_st_s8_im◂◂"?im" e ⊢ e 
						∎ { GV e } 
					∐ btm◂{} . 
						rp8.add_st_s8_im◂◂"-" e ⊢ e 
						∎ { GV e } 
					∐ dyn_adt◂{ { ax al } ri rd } .
						g_v { GV e ri } ⊢ { GV e } 
						rp8.add_st_s8_im◂◂"◂" e ⊢ e 
						g_v { GV e rd } ⊢ { GV e } 
						∎ { GV e } 
					∐. stt_adt◂{ c n p } .
						^ c,n ⊢ _,_,sr 
							0d' "(<0x" 1x' ")◂" // 
						rp8.add_s8 { e sr } ⊢ e 
						rt { GV e p } ⊢| 
				@.rt = RP.ppe_l◂◂rt_atm 
				@.rt_lst = lst.ppe_l◂◂{ rt " " } 
			∎∎
		¶ 
			@.type_var n',v'
				∐ app : { type◂n'◂v' type◂n'◂v' } 
				∐ type_name : n' 
				∐ type_var : v' 
			@.type n',v' = T.t◂(type_var◂n'◂v')
		¶ t_n = T.t◂(type_var◂abs_name◂_s8)
		¶ cp = CP◂abs_name◂_s8◂{ _lst◂_s8 t_n }◂_s8
		¶ sp = SP◂_s8◂cp
		§§ grm 
			¶	rle_flg
				∐ lex : {}
				∐ synt : {}
				∐ line : {}
			¶ @.rle c'
				∐ ptn_cut : _lst◂c'
				∐ ptn_seq : { c' rle◂c' }
				∐ ptn_end : {}
			¶ 
				@.act r',c' 
					∐ act_cns : { _lst◂(src◂r'◂c') SP◂r'◂c' lc_na◂r'◂c'◂(SP◂r'◂c')◂(SP◂r'◂c') rle_flg rle◂c' _opn◂{ SP◂r'◂c' act◂r'◂c' } act◂r'◂c' }
					∐ act_end : { _lst◂(src◂r'◂c') SP◂r'◂c' lc_na◂r'◂c'◂(SP◂r'◂c')◂(SP◂r'◂c') rle_flg rle◂c' _opn◂{ SP◂r'◂c' act◂r'◂c' } }
		§ C _ 
			∎|		
			
			§ act_regs◂{} = _cns◂{ re_reg◂%[ "_n" ] _cns◂{ re_reg◂%[ "_r" ] _nil◂{} } }
			∎∎
		¶
			@.file = _lst◂glb_etr
			@.file_T = _r64
			@.def_n = { file_T _s8 }
			@.glb_etr
				∐ mdl_etr : { def_n mdl_etr }
				∐ lc_etr : { { file_T _s8 } lc_etr }
				∐ lc_qlq_etr : _lst◂{ { file_T _s8 } lc_etr }
				∐ lc_ap_t : { { file_T _s8 } _lst◂_s8 t_n } 
				∐ lc_ap : { abs_name cp }
				∐ dt_etr : { { file_T _s8 } dt_etr }
				∐ dt_qlq_etr : _lst◂{ { file_T _s8 } dt_etr }
			@.mdl_etr
				∐ mdl_def : _lst◂glb_etr
				∐ mdl_ln : name
			@.lc_etr
				∐ lc_def : { _opn◂(RP.t◂_s8) sp _r64 lc_na◂_s8◂cp◂sp◂sp }
				∐ lc_ln : cp
				∐ lc_grm : { _opn◂(RP.t◂_s8) grm.act◂_s8◂cp } 
				∐ lc_neg : {} 
			@.dt_etr
				∐ dt_def : { _lst◂_s8 _r64 _lst◂{ _s8 t_n } }
				∐ dt_ln : { _lst◂_s8 t_n }
		§ of_tpl_ptn_atm # { {} w } 
			∎ { {} k_name◂rel_n◂fst_n◂w }
		§ of_tpl_ptn # p 
			RP.map_l◂◂of_tpl_ptn_atm { {} p } ⊢ { {} p } 
			∎ p
		
		¶ k_of a',b' 
			∐ hp_of : b' 
			∐ im_of : a' 
		§ r64_of_rt p
			∐ p ⊢ RP.atm◂a . 
				∐ a ⊢ hp◂r0 . 
					∎ hp_of◂r0
				∐ a ⊢ hp_im◂iv . 
					r64_of_k iv ⊢ x 
					∎ im_of◂x 
				∐ a ⊢ btm◂{} . 
					∎|
				∐. . 
					∎| 
			∐. . 
				∎| 
		§ st_of_rt p 
			∐ p ⊢ RP.atm◂hp◂r . 
				∎ r
			∐. . 
				∎| 
		§ s8_of_rt p
			∐ p ⊢ RP.atm◂a . 
				∐ a ⊢ hp◂r0 . 
					∎ hp_of◂r0
				∐ a ⊢ hp◂r0 . 
					∎|
				∐ a ⊢ hp_im◂iv . 
					s8_of_k iv ⊢ x 
					∎ im_of◂x 
				∐ a ⊢ btm◂{} .
					∎|
				∐ a ⊢ stt_adt◂_ .
					∎|
				∐ a ⊢ dyn_adt◂_ .
					∎|
				∐. . 
					∎| 
			∐. . 
				∎|
		∎∎
	§§ EVV = ast.EVV
	§§ EX = ast.EX 
	§§ IR = ast.IR
	§§ stt_v 
		§ r64_reg◂r = RP.atm◂ast.hp◂%r
		§ r64_im◂x = RP.atm◂ast.hp_im◂RP.atm◂ast.k_r64◂%x 
		§ s8_reg◂r = RP.atm◂ast.hp◂%r  
		§ s8_im◂s = RP.atm◂ast.hp_im◂RP.atm◂ast.k_s8◂%s
		§ arr_reg◂r = RP.atm◂ast.hp◂%r  
		§ hp◂r = RP.atm◂ast.hp◂r 
		∎∎
	§ mk_app_i # { p a } 
		∎ T.var◂ast.app◂{ p a } 
	§ mk_app = lst.fld_l◂◂mk_app_i
	
	§ k_ctr # { i n y } 
		T.newvar_ln y ⊢ p 
		$ ast.k_ctr◂{ i n p } ⊢ k 
		∎ k
	§§ UNV 
		§§ ap 
			§ emt = 0r 
			§ emt_mo = 1r 
			§ dlt = 2r 
			§ dlt_mo = 3r 
			§ rpc = 4r 
			§ rpc_mo = 5r 
			§ emt_adt = 6r
			§ dlt_adt = 7r
			§ rpc_adt = 8r
			§ f # { apv i } 
				_lod_q { apv i } ⊢| 
			∎∎ 
		§§ id 
			§ nil = 0x0001000000000000r
			§ cns = 0x0001000000000001r
			§ some = 0x0001000000000002r
			§ none = 0x0001000000000003r
			-- ap 
			§ emt = 0x0002000000000000r
			§ emt_mo = 0x0002000000000001r
			§ dlt = 0x0002000000000002r
			§ dlt_mo = 0x0002000000000003r
			§ rpc = 0x0002000000000004r
			§ rpc_mo = 0x0002000000000005r
			§ emt_adt = 0x0002000000000006r
			§ dlt_adt = 0x0002000000000007r
			§ rpc_adt = 0x0002000000000008r
			-- ap_ax 
			§ mt_e = 0x0002000000000009r 
			§ mt_ne = 0x000200000000000ar 
			§ mt_le = 0x000200000000000br 
			§ mt_g = 0x000200000000000cr 
			§ line = 0x000200000000000dr 
			§ synt = 0x000200000000000er 
			§ psc = 0x000200000000000fr 
			∎∎
		§ if_ap i 
			∐ i'=EX.oom . 
				∎ %[ 1r ]
			∐ i'=EX.id_par . 
				∎ %[ 1r ]
			∐ i'=EX.push . 
				∎ %[ 1r ]
			∐ i'=EX.hp_to . 
				∎ %[ 1r ]
			∐ i'=EX.cnc_lod . 
				∎ %[ 1r ]
			∐ i'=EX.cnc_sto . 
				∎ %[ 1r ]
			∐ i'=EX.ct_cnc_siz .
				∎ %[ 1r ]
			∐ i'=EX.ct_hp .
				∎ %[ 1r ]
			∐. .
				∎ %[ 0r ]
		§ f { apv x } 
			$ x ⊢ x,x0 
			_and_im◂◂0x0000ffffffffffffr x ⊢ x 
			_shr_im◂◂48r x0 ⊢ t  
			=+ t' 
			-- axm 
			∐
				$ x ⊢ x,x0 
				if_ap x0 ⊢ b 
				∐ b'=1r .
					∎ { apv  ast.axm_ap◂x }
				∐. .
					∎ { apv  ast.axm_pp◂x }
			-- ctr 
			∐
				=+ x' 
				-- nil 
				∐ 
					T.newvar_q {} ⊢  y0 

					$ TX.t_ctr◂{ TX.unt◂{} TX.lst◂y0 } ⊢ yx 
					k_ctr { %[ 1r ] %[ 2r ] yx } ⊢ k 
					∎ { apv  RP.atm◂k	}
				-- cns 
				∐ 
					T.newvar_q {} ⊢  y0 
					$ y0 ⊢ y0,y1 
					$ TX.lst◂y0 ⊢ y0,y2 
					$ TX.t_ctr◂{ TX.cns2◂{ y1 y0 } %y2 } ⊢ yx 
					k_ctr { %[ 0r ] %[ 2r ] yx } ⊢ k 
					∎ { apv  RP.atm◂k	}
				-- some 
				∐ 
					T.newvar_q {} ⊢  y0  
					$ y0 ⊢ y0,y1 
					$ TX.t_ctr◂{ y0 TX.opn◂y1 } ⊢ yx
					k_ctr { %[ 0r ] %[ 2r ] yx } ⊢ k 
					∎ { apv  RP.atm◂k }
				-- none 
				∐ 
					T.newvar_q {} ⊢  y0 
					$ TX.opn◂y0 ⊢ y0 
					$ TX.t_ctr◂{ TX.unt◂{} %y0 } ⊢ yx
					k_ctr { %[ 1r ] %[ 2r ] yx } ⊢ k 
					∎ { apv  RP.atm◂k }
				∐. 
					∎|
			-- ap 
			∐
				_lod_q { apv x } ⊢ { apv x c } 
				∎ { apv c } 
			∐. 
				∎|
		∎∎	
	§§ UNV_T 
		§ f x 
			$ x ⊢ x,x0 
			_and_im◂◂0x0000ffffffffffffr x ⊢ x 
			_shr_im◂◂48r x0 ⊢ t   
			=+ t' 
			-- prm 
			∐
				∎ TX.t_prm◂x 
			-- adt 
			∐
				=+ x' 
				-- lst 
				∐ 
					T.ini_q {} ⊢ q 
					$ q ⊢ q,q0 
					$ T.abs◂{ T.p◂q0 TX.lst◂T.var◂T.p◂q } ⊢ k 
					∎ k
				-- opn 
				∐ 
					T.ini_q {} ⊢ q 
					$ q ⊢ q,q0 
					$ T.abs◂{ T.p◂q0 TX.opn◂T.var◂T.p◂q } ⊢ k 
					∎ k
				∐.
					∎| 
			∐. 
				∎|
		∎∎	
		§ unv◂x = RP.atm◂ast.k_name◂ast.abs_n◂x 
		§ k_some◂{} = unv◂%[ UNV.id.some ] 
		§ k_none◂{} = unv◂%[ UNV.id.none ] 
		§ k_cns◂{} = unv◂%[ UNV.id.cns ] 
		§ k_nil◂{} = unv◂%[ UNV.id.nil ] 
		
				§ nm_e = IR.nm_e 
				§ nm_m = IR.nm_m 
				§ nm_n = IR.nm_n 
				§ mop = IR.mop 
				§ mt = IR.mt 
				§ mtj = IR.mtj 
				§ stt_a = IR.stt_a 
				§ stt_r = IR.stt_r
				§ stt_v = IR.stt_v
		§§ find_gf 
			§ @.ge_lp { y0 gl }
				$ gl ⊢ 
				∐ _cns◂{ { i y1 gyd p } gl } . 
					$ { y0 y1 gyd } ⊢ { y0 y1 gyd },{ y0t y1t gydt }
					T.ciu { y0t TX.t_imp◂{ y1t gydt } } ⊢ { yi0 yi1 b0 }
					T.ci { yi1 yi0 } ⊢ b1
					_and { b0 b1 } ⊢ { b _ }
					∐ b'=1r . 
						$ b ⊢ _ 
						$ p ⊢ p,p0
						$ i ⊢ i,ii 
						$ { i y1 gyd p } ⊢ A0 
						∎ { { y0 ‹ { ii p0 } › } _cns◂{ A0 gl } }
					∐. . 
						$ b ⊢ _ 
						$ { i y1 gyd p } ⊢ A0
						ge_lp { y0 gl } ⊢ { { y0 o } gl } 
						∎ { { y0 o } _cns◂{ A0 gl } }
				∐. _nil◂{} . 
					∎ { { y0 ‹› } ⟦⟧ }
					
			§ @.e_lp { { t0 t1 p } gfl } 
				$ gfl ⊢ 
				∐ _cns◂{ { tk0 tk1 k ie } gfl } . 
					$ { t0 t1 tk0 tk1 } ⊢ { t0 t1 tk0 tk1 },{ t0t t1t tk0t tk1t }
					T.ciu { TX.t_ct_imp◂{ t0t t1t } TX.t_ct_imp◂{ tk0t tk1t } } ⊢ { yi0 yi1 b0 }
					T.ci { yi1 yi0 } ⊢ b1 
					_and { b0 b1 } ⊢ { b _ } 
					ast.eq_ct_ptn { p k  } ⊢ { p k b1 } 
					∐ b'=1r; b1 ⊢ bl.t◂{} . 
						$ ie ⊢ ie,ie0 
						$ { tk0 tk1 k ie } ⊢ A0 
						∎ { { { t0 t1 p } ‹ ie0 › } _cns◂{ A0 gfl } }
					∐. . 
						$ { tk0 tk1 k ie } ⊢ A0
						e_lp { { t0 t1 p } gfl } ⊢ { { { t0 t1 p } o0 } gfl } 
						∎ { { { t0 t1 p } o0 } _cns◂{ A0 gfl } }
				∐. _nil◂{} . 
					∎ { { { t0 t1 p } ‹› } ⟦⟧ }
			∎∎

		
	§ 
		@.exc_tpl { el t p } 
			$ t ⊢ 
			∐ RP.rcd◂l0 . 
				∐ p ⊢ RP.rcd◂l1 . 
					exc_tpl_lst { el l0 l1 } ⊢|
				∐. . 
					∎|  
			∐. RP.atm◂i0 . 
				EVV.x { ast.k_p◂p i0 } ⊢ { p0 i0 }
				$ ⟦ { i0 p0 } < el ⟧ ⊢ el 
				∎ el
			@.exc_tpl_lst { el l0 l1 } 
				∐ l0 ⊢ _cns◂{ t l0 }; l1 ⊢ _cns◂{ p l1 } . 
					exc_tpl { el t p } ⊢ el
					exc_tpl_lst { el l0 l1 } ⊢|
				∐ l0 ⊢ _nil◂{}; l1 ⊢ _nil◂{} . 
					∎ el
				∐. . 
					∎| 
		§ @.pop_tpl el
			$ el ⊢
			∐ _cns◂{ { i k } el } .
				EVV.u { i k } ⊢ _
				pop_tpl el ⊢| 
			∐. _nil◂{} . 
				∎ {}
		§ ax = ast.axm_pp 
		
		§ fst_n_k◂T = RP.atm◂ast.k_name◂ast.rel_n◂ast.fst_n◂T 
		§ k_unv◂i = RP.atm◂ast.k_unv◂i 
		§ unv_k◂x = RP.atm◂ast.k_name◂ast.abs_n◂x 
		§ app_k◂{ a b } = RP.atm◂ast.k_app◂{ a b } 
		§ pc0◂{} = RP.atm◂ast.k_ply◂{ %[ 2r ] RP.cns2◂{ RP.atm◂%[ 0r ] RP.atm◂%[ 1r ] } RP.cns2◂{ RP.atm◂ast.re_reg◂%[ 1r ] RP.atm◂ast.re_reg◂%[ 0r ] } }
		§ pc1◂{} = RP.atm◂ast.k_ply◂{ %[ 1r ] RP.cns2◂{ RP.atm◂%[ 0r ] RP.unt◂{} } RP.atm◂ast.re_reg◂%[ 0r ] } 
		§ ctr◂c = app_k◂{ ax◂%[ EX.ctr ] c }
		§ pr0◂{} = ctr◂pc0◂{} 
		§ pr1◂{} = ctr◂pc1◂{} 
		§ op_ax_pp◂i = ast.axm_pp◂i 
		§ op_ax = op_ax_pp
		§ op_ax_ap◂i = ast.axm_ap◂i 
		§ id_k◂{} = op_ax◂%[ EX.id ] 
		§ rpc_k◂{} = op_ax◂%[ EX.rpc ]
		§ rpc_unv_k◂{} = unv_k◂%[ UNV.id.rpc ]
		§ app_ax_pp◂{ x k } = app_k◂{ op_ax◂x k }
		§ app_ax_ap◂{ x k } = app_k◂{ op_ax_ap◂x k }
		§ seq_k◂{ f g } = app_ax_pp◂{ %[ EX.seq ] RP.cns2◂{ f g } }
		§ id_par◂f = app_ax_ap◂{ %[ EX.id_par ] f } 
		§ dlt_unv_k◂{} = unv_k◂%[ UNV.id.dlt ]
		§ dlt_ap_k◂{} = RP.atm◂ast.k_unv◂%[ UNV.id.dlt ]  
		§ dlt_unv_id◂{} = seq_k◂{ pr0◂{} seq_k◂{ id_par◂dlt_unv_k◂{} pr1◂{} } } 
		§ dlt_ap_id◂{} = seq_k◂{ pr0◂{} seq_k◂{ id_par◂RP.atm◂ast.k_unv◂%[ UNV.id.dlt ] pr1◂{} } } 
		§ sqc_k◂{ c0 c1 } = app_ax_pp◂{ %[ EX.sqc ] RP.cns2◂{ c0 c1 } }
		§ mcn_k◂{} = app_ax_pp◂{ %[ EX.mcn ] RP.unt◂{} }
		§ mcp_k◂{ c mt mf } = app_ax_pp◂{ %[ EX.mcp ] RP.cns3◂{ c mt mf } }
		§ moo_k◂o = app_ax_pp◂{ %[ EX.moo ] o }
		§ oom_k◂m = app_ax_ap◂{ %[ EX.oom ] m }
		§ mop_k◂c = app_ax_pp◂{ %[ EX.mop ] c }
		§ mt_e_unv_k◂{} = k_unv◂%[ UNV.id.mt_e ]
		§ mt_ne_unv_k◂{} = k_unv◂%[ UNV.id.mt_ne ]
		§ mt_le_unv_k◂{} = k_unv◂%[ UNV.id.mt_le ]
		§ line_unv_k◂{} = k_unv◂%[ UNV.id.line ]
		§ synt_unv_k◂{} = k_unv◂%[ UNV.id.synt ]
		§ psc_unv_k◂{} = k_unv◂%[ UNV.id.psc ]
		§ mt_e_k◂c = app_ax_pp◂{ %[ EX.mt ] RP.cns2◂{ mt_e_unv_k◂{} c } }
		§ mt_ne_k◂c = app_ax_pp◂{ %[ EX.mt ] RP.cns2◂{ mt_ne_unv_k◂{} c } }
		§ mt_le_k◂c = app_ax_pp◂{ %[ EX.mt ] RP.cns2◂{ mt_le_unv_k◂{} c } }
		§ tj_k◂{ c j } = app_ax_pp◂{ %[ EX.tj ] RP.cns2◂{ c j } }
		§ tjn_k◂r = app_ax_pp◂{ %[ EX.tjn ] r }
		§ tjc_k◂{ m j } = app_ax_pp◂{ %[ EX.tjc ] RP.cns2◂{ m j } }
		
		§§ ip
			§ seq = ast.seq 
			§ reg◂n = RP.atm◂ast.re_reg◂n 
			§ reg_d◂n = RP.atm◂n 
			§ name◂n = RP.atm◂ast.k_name◂n 
			§ f_name◂n = name◂ast.rel_n◂ast.fst_n◂n 
			§ t_name◂n = RP.atm◂ast.rel_n◂ast.fst_n◂n 
			§ ret◂p = ast.jmp◂{ ast.axm_pp◂%[ EX.id ] p }
			§ ct_app◂{ f x } = RP.atm◂ast.k_app◂{ f x }
			§ opc◂{ f x y } = ast.op_call◂{ f x y } 
			§ jmp◂{ f x } = ast.jmp◂{ f x }
			§ re_none◂{} = RP.atm◂ast.re_agl◂{ RP.atm◂ast.k_name◂ast.abs_n◂%[ UNV.id.none ] RP.unt◂{} } 
			§ re_some◂s = RP.atm◂ast.re_agl◂{ RP.atm◂ast.k_name◂ast.abs_n◂%[ UNV.id.some ] s }
			§ mtc_some◂{ o s } = ast.mtc_id◂{ o re_some◂s }
			§ mtc_none◂o = ast.mtc_id◂{ o re_none◂{} }
			§ mtc_lc◂lc = ast.na_e◂{ ⟦⟧ lc } 
			§ fnc◂{ x y } = RP.atm◂ast.k_fnc◂{ x y } 
			§ ftr◂{} = fnc◂{ t_name◂%[ "3" ] fnc◂{ t_name◂%[ "2" ] fnc◂{ t_name◂%[ "1" ] ct_app◂{ f_name◂%[ "3" ] ct_app◂{ f_name◂%[ "2" ] f_name◂%[ "1" ] } } } } }
			§ ftr_grm_f◂%f = fnc◂{ t_name◂%[ "1" ] ct_app◂{ ast.axm_pp◂%[ EX.grm ] ct_app◂{ %f f_name◂%[ "1" ] } } }
		§ @.id_line_i { { m0 lc } ml }
			$ ml ⊢ 
			∐ _cns◂{ m1 ml } . 
				id_line_i { { m0 lc } ml } ⊢ lc 
				∎ ast.seq◂{ ast.op_call◂{ rpc_unv_k◂{} RP.atm◂ast.re_reg◂%[ ".r0" ] RP.cns2◂{ RP.atm◂ast.re_reg◂%[ ".r0" ] m1 } } lc }
			∐. _nil◂{} . 
				∎ ast.seq◂{ ast.op_call◂{ id_k◂{} RP.atm◂ast.re_reg◂%[ ".r0" ] m0 } lc }
		§ id_line { sp ml lc } 
			$ ml ⊢ 
			∐ _cns◂{ m0 ml } . 
				∐ ml ⊢ _nil◂{} . 
					∎ ast.seq◂{ ast.op_call◂{ ax◂%[ EX.id ] sp m0 } lc }
				∐. . 
					id_line_i { { m0 lc } ml } ⊢ lc 
					∎ ast.seq◂{ ast.op_call◂{ ax◂%[ EX.id ] sp RP.atm◂ast.re_reg◂%[ ".r0" ] } lc }
			∐. _nil◂{} . 
				∎| 
		§§ grm 
			
			§ rb_r◂lc = ast.seq◂{ opc◂{ dlt_unv_k◂{} reg◂%[ ".n" ] RP.unt◂{} } ast.seq◂{ opc◂{ rpc_unv_k◂{} reg◂%[ ".r" ] RP.cns2◂{ reg◂%[ ".r" ] reg◂%[ ".n" ] } } lc } } 
			§ ini◂{} = RP.cns2◂{ reg◂%[ ".s" ] reg◂%[ ".r" ] }
			§ ini_n◂lc = ast.seq◂{ opc◂{ rpc_unv_k◂{} reg◂%[ ".r" ] RP.cns2◂{ reg◂%[ ".r" ] reg◂%[ ".n" ] } } lc }
			§ env◂{} = RP.cns3◂{ reg◂%[ ".s" ] reg◂%[ ".r" ] reg◂%[ ".n" ] }
			§ mtc_opn # { o m lc0 lc1 } 
				$ o ⊢ o,o0 
				∎ ast.mtc◂ast.na_p◂{ mtc_some◂{ o m } lc0 ast.na_s◂{ mtc_none◂o0 lc1 } }
			§ op_prs◂g = opc◂{ ct_app◂{ ax◂%[ EX.prs ] g } RP.cns2◂{ reg◂%[ ".s" ] reg◂%[ ".n" ] } RP.cns3◂{ reg◂%[ ".s" ] reg◂%[ ".n" ] reg◂%[ ".o" ] } }
			§ op_f◂f = opc◂{ f RP.cns2◂{ reg◂%[ ".s" ] reg◂%[ ".n" ] } RP.cns3◂{ reg◂%[ ".s" ] reg◂%[ ".n" ] reg◂%[ ".o" ] } } 
			§ ret_fail◂{} = ret◂RP.cns3◂{ reg◂%[ ".s" ] reg◂%[ ".r" ] re_none◂{} }
			§ ret_succ◂a = ret◂RP.cns3◂{ reg◂%[ ".s" ] reg◂%[ ".n" ] re_some◂a }
			§ rN # n 
				^ n ⊢ n,s 
					".r" 0d' // 
				∎ { n s } 
			§ fN # n 
				^ n ⊢ n,s 
					".f" 0d' // 
				∎ { n s }
			§ reg_n # n 
				rN n ⊢ { n s } 
				∎ { n reg◂s } 
			§ f_n { n go } 
				fN n ⊢ { n s } 
				_inc n ⊢ n 
				$ go ⊢ 
				∐ _some◂p . 
					ast.of_tpl_ptn p ⊢ p 
					∎ { n RP.atm◂ast.k_app◂{ f_name◂s p } }
				∐. _none◂{} . 
					∎ { n f_name◂s }
			§ rf { f lc } 
				$ f ⊢ 
				∐ ast.grm.line◂{} .
					∎ { ast.grm.line◂{} ast.seq◂{ op_prs◂line_unv_k◂{} seq◂{ opc◂{ dlt_unv_k◂{} reg◂%[ ".o" ] RP.unt◂{} } lc } } }
				∐ ast.grm.synt◂{} . 
					∎ { ast.grm.synt◂{} ast.seq◂{ op_prs◂synt_unv_k◂{} seq◂{ opc◂{ dlt_unv_k◂{} reg◂%[ ".o" ] RP.unt◂{} } lc } } }
				∐. ast.grm.lex◂{} .
					∎ { ast.grm.lex◂{} lc }
			§ 
				@.rle { { n f_n el go g m lc f o op_f } r }
					$ r ⊢ 
					∐ ast.grm.ptn_cut◂r . 
						rle_cut { { n f_n el go g m lc f o } r } ⊢|
					∐ ast.grm.ptn_seq◂{ p r } .
						rN n ⊢ { n r0 } 
						$ r0 ⊢ r0,r0_0 
						_inc n ⊢ n 
						$ op_f ⊢ op_f,op_f0 
						rle { { n f_n el go ⟦ reg◂r0_0 < g ⟧ m lc f o op_f0 } r } ⊢ { { n f_n el go f } lcr }
						mtc_opn { reg_d◂%[ ".o" ] reg◂r0 mtc_lc◂lcr mtc_lc◂rb_r◂jmp◂{ op_f ini◂{} } } ⊢ op0
						$ ast.seq◂{ op_prs◂p op0 } ⊢ lcr 
						rf { f lcr } ⊢ { f lcr } 
						∎ { { n f_n el go f } lcr }
					∐. ast.grm.ptn_end◂{} . 
						rev g ⊢ g  
						$ o ⊢ 
						∐ _some◂{ d a } . 
							etr { f_n el go RP.cns3◂{ m d RP.cns2◂{ reg◂%[ "_r" ] reg◂%[ "_n" ] } } lc } ⊢ { f_n el go f0 } 
							$ opc◂{ rpc_unv_k◂{} reg◂%[ ".r" ] RP.cns2◂{ reg◂%[ ".r" ] reg◂%[ "_r" ] } } ⊢ op0 
							$ opc◂{ rpc_unv_k◂{} reg◂%[ ".n" ] RP.cns2◂{ reg◂%[ ".n" ] reg◂%[ "_n" ] } } ⊢ op1 
							$ opc◂{ f0 RP.cns3◂{ RP.rcd◂g reg◂%[ ".t" ] RP.cns2◂{ reg◂%[ "_r" ] reg◂%[ "_n" ] } } reg◂%[ ".o" ] } ⊢ op2
							$ op_f ⊢ op_f,op_f0 
							mtc_opn { reg_d◂%[ ".o" ] reg◂%[".a" ] mtc_lc◂ret_succ◂reg◂%[ ".a" ] mtc_lc◂rb_r◂jmp◂{ op_f0 ini◂{} } } ⊢ op3
							$ ast.seq◂{ op0 ast.seq◂{ op1 ast.seq◂{ op2 op3 } } } ⊢ lcr

							grm { { n f_n el go } a } ⊢ { { n f_n el go } f1 } 
							mtc_opn { reg_d◂%[ ".o" ] reg◂%[ ".t" ] mtc_lc◂lcr mtc_lc◂rb_r◂jmp◂{ op_f ini◂{} } } ⊢ op0
							$ ast.seq◂{ op_f◂f1 op0 } ⊢ lcr 
							∎ { { n f_n el go f } lcr }
						∐. _none◂{} . 
							etr { f_n el go RP.cns2◂{ m RP.cns2◂{ reg◂%[ "_r" ] reg◂%[ "_n" ] } } lc } ⊢ { f_n el go f0 } 
							$ opc◂{ rpc_unv_k◂{} reg◂%[ ".r" ] RP.cns2◂{ reg◂%[ ".r" ] reg◂%[ "_r" ] } } ⊢ op0 
							$ opc◂{ rpc_unv_k◂{} reg◂%[ ".n" ] RP.cns2◂{ reg◂%[ ".n" ] reg◂%[ "_n" ] } } ⊢ op1 
							$ opc◂{ f0 RP.cns2◂{ RP.rcd◂g RP.cns2◂{ reg◂%[ "_r" ] reg◂%[ "_n" ] } } reg◂%[ ".o" ] } ⊢ op2
							mtc_opn { reg_d◂%[ ".o" ] reg◂%[".a" ] mtc_lc◂ret_succ◂reg◂%[ ".a" ] mtc_lc◂rb_r◂jmp◂{ op_f ini◂{} } } ⊢ op3
							∎ { { n f_n el go f } ast.seq◂{ op0 ast.seq◂{ op1 ast.seq◂{ op2 op3 } } } }							
				@.rle_cut { { n f_n el go g m lc f o } r }
					$ r ⊢ 
					∐ _cns◂{ p r } . 
						rN n ⊢ { n r0 } 
						$ r0 ⊢ r0,r0_0 
						_inc n ⊢ n 
						rle_cut { { n f_n el go ⟦ reg◂r0_0 < g ⟧ m lc f o } r } ⊢ { { n f_n el go f } lcr }
						mtc_opn { reg_d◂%[ ".o" ] reg◂r0 mtc_lc◂lcr mtc_lc◂ret_fail◂{} } ⊢ op0
						$ ast.seq◂{ op_prs◂p op0 } ⊢ lcr 
						rf { f lcr } ⊢ { f lcr } 
						∎ { { n f_n el go f } lcr }
					∐. _nil◂{} . 
						rev g ⊢ g  
						$ o ⊢ 
						∐ _none◂{} . 
							etr { f_n el go RP.cns2◂{ m RP.cns2◂{ reg◂%[ "_r" ] reg◂%[ "_n" ] } } lc } ⊢ { f_n el go f0 } 
							$ opc◂{ rpc_unv_k◂{} reg◂%[ ".r" ] RP.cns2◂{ reg◂%[ ".r" ] reg◂%[ "_r" ] } } ⊢ op0 
							$ opc◂{ rpc_unv_k◂{} reg◂%[ ".n" ] RP.cns2◂{ reg◂%[ ".n" ] reg◂%[ "_n" ] } } ⊢ op1 
							$ opc◂{ f0 RP.cns2◂{ RP.rcd◂g RP.cns2◂{ reg◂%[ "_r" ] reg◂%[ "_n" ] } } reg◂%[ ".o" ] } ⊢ op2
							mtc_opn { reg_d◂%[ ".o" ] reg◂%[".a" ] mtc_lc◂ret_succ◂reg◂%[ ".a" ] mtc_lc◂ret_fail◂{} } ⊢ op3
							∎ { { n f_n el go f } ast.seq◂{ op0 ast.seq◂{ op1 ast.seq◂{ op2 op3 } } } }							
						∐. _some◂{ d a } . 
							etr { f_n el go RP.cns3◂{ m d RP.cns2◂{ reg◂%[ "_r" ] reg◂%[ "_n" ] } } lc } ⊢ { f_n el go f0 } 
							$ opc◂{ rpc_unv_k◂{} reg◂%[ ".r" ] RP.cns2◂{ reg◂%[ ".r" ] reg◂%[ "_r" ] } } ⊢ op0 
							$ opc◂{ rpc_unv_k◂{} reg◂%[ ".n" ] RP.cns2◂{ reg◂%[ ".n" ] reg◂%[ "_n" ] } } ⊢ op1 
							$ opc◂{ f0 RP.cns3◂{ RP.rcd◂g reg◂%[ ".t" ] RP.cns2◂{ reg◂%[ "_r" ] reg◂%[ "_n" ] } } reg◂%[ ".o" ] } ⊢ op2
							mtc_opn { reg_d◂%[ ".o" ] reg◂%[".a" ] mtc_lc◂ret_succ◂reg◂%[ ".a" ] mtc_lc◂ret_fail◂{} } ⊢ op3
							$ ast.seq◂{ op0 ast.seq◂{ op1 ast.seq◂{ op2 op3 } } } ⊢ lcr

							grm { { n f_n el go } a } ⊢ { { n f_n el go } f1 } 
							mtc_opn { reg_d◂%[ ".o" ] reg◂%[ ".t" ] mtc_lc◂lcr mtc_lc◂ret_fail◂{} } ⊢ op0
							$ ast.seq◂{ op_f◂f1 op0 } ⊢ lcr 
							∎ { { n f_n el go f } lcr }
				@.etr # { f_n el go dp lc } 
					fN f_n ⊢ { f_n s } 
					$ go ⊢ go,go0 
					f_n { f_n go0 } ⊢ { f_n e }
					$ go ⊢ go,go0
					∎ { f_n ⟦ { { %[ 1r ] s } ast.lc_def◂{ go0 dp %[ 0r ] lc } } < el ⟧ go e }
				@.grm { { n f_n el go } a }
					$ a ⊢ 
					∐ ast.grm.act_cns◂{ _ m lc f r o a } . 
						grm { { n f_n el go } a } ⊢ { { n f_n el go } f0 } 
						rle { { n f_n el go ⟦⟧ m lc f o f0 } r } ⊢ { { n f_n el go f } lcr }
						etr { f_n el go ini◂{} ini_n◂lcr } ⊢ { f_n el go f1 }  
						∎ { { n f_n el go } f1 }
					∐. ast.grm.act_end◂{ _ m lc f r o } . 
						etr { f_n el go ini◂{} ret_fail◂{} } ⊢ { f_n el go f0 }
						rle { { n f_n el go ⟦⟧ m lc f o f0 } r } ⊢ { { n f_n el go f } lcr }
						etr { f_n el go ini◂{} ini_n◂lcr } ⊢ { f_n el go f1 }  
						∎ { { n f_n el go } f1 }
			§ f # { n f_n w go a } 
				grm { { n f_n ⟦⟧ go } a } ⊢ { { n f_n el _ } f0 } 
				∐ f0 ⊢ RP.atm◂ast.k_app◂{ f0 p } . 
					∎ { n f_n ⟦ { w ast.lc_ln◂ftr_grm_f◂%f0 } < el ⟧ }					
				∐. . 
					∎ { n f_n ⟦ { w ast.lc_ln◂RP.atm◂ast.k_app◂{ ast.axm_pp◂%[ EX.grm ] f0 } } < el ⟧  }
			§ @.f_clq { n f_n q }
				$ q ⊢ 
				∐ _cns◂{ { w e } q } . 
					∐ e ⊢ ast.lc_grm◂{ o g } . 
						f { n f_n w o g } ⊢ { n f_n el } 
						f_clq { n f_n q } ⊢ { n f_n q } 
						rev_apnd { el q } ⊢ q 
						∎ { n f_n q } 
					∐. . 
						f_clq { n f_n q } ⊢ { n f_n q } 
						∎ { n f_n ⟦ { w e } < q ⟧ }
				∐. _nil◂{} . 
					∎ { n f_n ⟦⟧ } 
			∎∎
	
		
	∎∎
	
	§ of_tpl { {} w } 
			∎ { {} ast.rel_n◂ast.fst_n◂w }
		§ of_tpl_ptn = RP.map_l◂◂of_tpl 
		§ tpl_atm { { wl lv } w } 		
			ast.of_fst_n w ⊢ w 
			assoc { wl w } ⊢ { wl w o } 
			nnt_emt { o w } ⊢ w 
			T.ini_l lv ⊢ { lv t0 }
			$ T.var◂T.p◂t0 ⊢ y,y0 			
			EVV.alc_var y0 ⊢ n0
			$ n0 ⊢ n0,n1
			∎ { { ⟦ { w _some◂n0 } < wl ⟧ lv } n1 y }
		§ tpl_ptn = T.map_l_x◂◂tpl_atm 
		§ tpl_ptn_lst = lst.map_l_x◂◂tpl_atm 
	§§ syntax
		§ ax = ast.axm_pp 
		§ 
		@.wc  ^=
			∐. "_" !| ; ⊢ { {} },p 
				∎ _some◂{}
				∐ " " ⊢ { {} } 
					∎ _some◂{}
				∐ "\t" ⊢ { {} } 
					∎ _some◂{}
				∐ wc_tl !| ⊢ { xx }
					∎ _none◂{}
				∐. ⊢ { } 
					∎ _some◂{}
		@.wc_tl  ^=
			∐ "," !| ⊢ { {} }
				∎ _none◂{} 
			∐. ⊢ { }
				∎ ‹ {} ›
	§ @.r ^= 
		∐ _scf_d "r" ⊢ { x {} }
			∎ ‹ x ›
		∐. "0x" _scf_x "r" ⊢ { {} x {} }
			∎ ‹ x ›  
	§ r_lt = r 
	§
		@.name ^=
			∐# prm_word "." name ⊢ { w {} n }
				∎ ‹ ast.mdl_n◂{ w n } ›
			∐.# prm_word ⊢ { w }
				∎ ‹ ast.fst_n◂w ›
	§ @.abs_name ^= 
		∐# "_[" !| r "]" ⊢ { {} x {} }
			∎ ‹ ast.abs_n◂x › 
		∐.# name ⊢ { n } 
			∎ ‹ ast.rel_n◂n › 
	§
		@.nl ^=
			∐.# "\n" nl_tl ⊢ { {} nn }
				∎ ‹ {} ›
		@.nl_tl  ^=
			∐# "\n" nl_tl ⊢ { {} nn }
				∎ ‹ {} ›
			∐.# ⊢ { } 
				∎ ‹ {} › 
	¶ prs_rslt◂a'
		∐ prs_vld : a'
		∐ prs_err : _lst◂{ _r64 _r64 _s8 }  
	§ ret_vld◂a = _some◂prs_vld◂a
	§ ret_err◂e = _some◂prs_err◂e
	§ prs_add { a e } 
		$ e ⊢ 
		∐ prs_vld◂b . 
			∎ prs_vld◂{ a b }
		∐. prs_err◂e . 
			∎ prs_err◂e
	§ prs_cct { e0 e1 } 
		$ e0 ⊢
		∐ prs_vld◂a0 . 
			$ e1 ⊢ 
			∐ prs_vld◂a1 . 
				∎ prs_vld◂{ a0 a1 }
			∐. prs_err◂l1 .  
				∎ prs_err◂l1
		∐. prs_err◂l0 .
			$ e1 ⊢ 
			∐ prs_vld◂a1  . 
				∎ prs_err◂l0 
			∐. prs_err◂l1 . 
				apnd { l0 l1 } ⊢ l
				∎ prs_err◂l
	§ prs_cct2 { e0 e1 e2 } 
		prs_cct { e0 e1 } ⊢ e 
		prs_cct { e e2 } ⊢ e 
		$ e ⊢ 
		∐ prs_vld◂{ { e0 e1 } e2 } .
			∎ prs_vld◂{ e0 e1 e2 }
		∐. prs_err◂e .
			∎ prs_err◂e
	§ mk_prs_err # { n r s } 
		∎ prs_err◂⟦ { n r s } ⟧ 
	§ add_prs_err { n r s e } 
		$ e ⊢ 
		∐ prs_err◂e . 
			∎ prs_err◂_cns◂{ { n r s } e }
		∐. prs_vld◂_ . 
			∎ prs_err◂_cns◂{ { n r s } _nil◂{} } 
	§ prs_act◂◂F { s p } 
		$ p ⊢ 
		∐ prs_vld◂a . 
			F { s a } ⊢ b  
			∎ ret_vld◂b 
		∐. prs_err◂e . 
			∎ ret_err◂e 
	§ @.pnt_prs_err el 
		$ el ⊢ 
		∐ _cns◂{ { n0 n1 em } el } . 
			pnt_prs_err el ⊢ sel 
			^ n0,n1,em,sel ⊢ n0,n1,em,sel,sr 
				"prs_err " 0d' "-" 1d' ":" 2' "\n" 
				3' // 
			∎ sr   
		∐. _nil◂{} . 
			$ %[ "" ] ⊢ sr 
			∎ sr 
	§	@.tpl_reg_ptn = RP.stx◂◂tpl_word
	§	@.tpl_ptn = RP.stx◂◂word
	§
		@.type_app ^= 
			∐.# type_atm type_app_tl ⊢ { t0 t1 }
				mk_app { t0 t1 } ⊢ t
				∎ ‹ t ›
		@.type_imp ^= 
			∐.# type_app ; ⊢ { t },t1 
				$ t1 ⊢ 
				∐ _some◂t1 .
						∎ ‹ TX.t_imp◂{ t t1 } ›
				∐. _none◂{} .
					∎ ‹ t ›
				
				∐# type_imp_tl ⊢ { t1 }
					∎ ‹ ‹ t1 › ›
				∐.# ⊢ {}
					∎ ‹ ‹› ›
		@.type_imp_tl ^=
			∐# "→→" !| _fail ⊢ { {} {} }
				--∎ ‹›
				∎|
			∐.# "→" !| type_imp ⊢ { {} t }
				∎ _some◂%t
		@.type_app_tl ^=
			∐# "◂" !| type_atm type_app_tl ⊢ { {} t0 t1 }
				∎ _some◂_cns◂{ %t0 %t1 }
			∐.# ⊢ { }
				∎ ‹ ⟦⟧ ›
		@.type ^=
			∐.# type_imp type_tl ⊢ { t0 t1 }
				$ t1 ⊢ 
				∐ _some◂t1 .
						∎ ‹ TX.t_ct_imp◂{ t0 t1 } ›
				∐. _none◂{} .
					∎ ‹ t0 ›
		@.type_tl ^=
			∐# "→→" !| type ⊢ { {} t }
				∎ _some◂_some◂%t
			∐.# ⊢ { }
				∎ _some◂_none◂{}
		@.type_atm ^=
			∐# "{" lst.stx_line◂◂type "}" ⊢ { {} l {} }
				T.rcd_of l ⊢ l 
				∎ ‹ TX.rcd◂l › 
			∐# "(" type ")" ⊢ { {} t {} }
				∎ _some◂%t
			∐# var ⊢ { v }
				∎ _some◂T.var◂ast.type_var◂%v 
			∐.# abs_name ⊢ { n }
				∎ _some◂T.var◂ast.type_name◂%n
		@.var ^=
			∐. word "'" ⊢ { w {} }
				∎ _some◂%w
	§	@.args_tl = lst.stx_cmm_tl◂◂var 
	§ @.args = lst.stx_cmm◂◂var
	§
		@.cst ^=
			∐ r ⊢ { r } 
				∎ ‹ ast.k_r64◂r ›
			∐ stg_ltr ⊢ { s }
				∎ _some◂ast.k_s8◂s
			∐. abs_name ⊢ { n }
				∎ _some◂ast.k_name◂n
	§ 
		@.ct_ptn ^= 
			∐.# ct_atm ; ⊢ { a0 },a1
				∐ a1 ⊢ _some◂a1 . 
					∎ _some◂RP.atm◂ast.k_app◂{ a0 a1 }
				∐. . 
					∎ _some◂a0 

				∐# "◂◂" !| ct_ptn ⊢ { {} a1 }
					∎ _some◂_some◂a1
				∐.# ⊢ { }
					∎ _some◂_none◂{}
			@.ct_atm ^= 
				∐# "(" ct_ptn ")" ⊢ { {} a {} }
					∎ _some◂a
				∐# "{+" lst.stx_line◂◂ct_ptn "}" ⊢ { {} l {} } 
					∎| 
				∐# "{" lst.stx_line◂◂ct_ptn "}" ⊢ { {} l {} } 
					∎ _some◂RP.rcd◂l
				∐# "\\\\" !| tpl_ptn "." ct_ptn ⊢ { {} T {} c }
					of_tpl_ptn { {} T } ⊢ { {} T }  
					∎ _some◂RP.atm◂ast.k_fnc◂{ T c }
				∐# "\\" !| tpl_reg_ptn "." src_ptn ⊢ { {} s {} d }
					∎ _some◂RP.atm◂ast.k_ply◂{ %[ 0r ] s d }
				∐# "'[" !| ct_ptn ":" args "." type "]" ⊢ { {} c {} as {} y {} }
					∎ _some◂RP.atm◂ast.k_t◂{ c { as y } }
				∐# "_[" "]" ⊢ { {} {} } 
					∎ _some◂RP.atm◂ast.k_btm◂{}
				∐.# cst ⊢ { c } 
					∎ _some◂RP.atm◂c
			@.src ^= 
				∐# "%[" ct_ptn "]" ⊢ { {} c {} }
					∎ _some◂ast.re_v◂c
				∐# abs_name "◂" RP.stx◂◂src ⊢ { n {} sp } 
					∎ _some◂ast.re_agl◂{ RP.atm◂ast.k_name◂n sp }
				∐# reg_word ⊢ { w }
					∎ _some◂ast.re_reg◂w
				∐# "‹" !| ; ⊢ { {} },sp 
					∎ _some◂sp 

					∐# "›" ⊢ { {} } 
						∎ _some◂ast.re_agl◂{ RP.atm◂ast.k_name◂ast.abs_n◂%[ UNV.id.none ] RP.unt◂{} }
					∐.# RP.stx◂◂src "›" ⊢ { sp {} } 
						∎ _some◂ast.re_agl◂{ RP.atm◂ast.k_name◂ast.abs_n◂%[ UNV.id.some ] sp }
				∐.# "⟦" !| src_cns "⟧" ⊢ { {} c {} }
					∎ _some◂c 
		
			@.src_cns ^= 
				∐# RP.stx◂◂src ; ⊢ { a },l 
					∎ _some◂ast.re_agl◂{ RP.atm◂ast.k_name◂ast.abs_n◂%[ UNV.id.cns ] RP.rcd◂_cns◂{ a _cns◂{ l _nil◂{} } } }
				
					∐# "<" reg_word ⊢ { {} w } 
						∎ _some◂RP.atm◂ast.re_reg◂w 
					∐.# src_cns ⊢ { l } 
						∎ _some◂RP.atm◂l
				∐.# ⊢ { } 
					∎ _some◂ast.re_agl◂{ RP.atm◂ast.k_name◂ast.abs_n◂%[ UNV.id.nil ] RP.rcd◂_nil◂{} } 

			@.src_ptn = RP.stx◂◂src 
	
	§ @.mtc ^= 
		∐# abs_name "◂" !| RP.stx◂◂mtc ⊢ { n {} mp } 
			∎ _some◂ast.re_agl◂{ RP.atm◂ast.k_name◂n mp }
		
		∐# "%" word ⊢ { {} w } 
			∎ _some◂ast.re_reg◂w 
		∐# word ⊢ { w } 
			∎ _some◂ast.re_reg◂w
		∐.# "_" ⊢ { {} }
			∎ _some◂ast.re_v◂RP.atm◂ast.k_r64◂%[ CST.not_0 ] 
	§ mtc_ptn = RP.stx◂◂mtc
	§ mtc_ptn_lst = lst.stx_line◂◂mtc_ptn 
	§ mtc_tl = lst.stx_cmm_tl◂◂mtc 
	§ mtc_ptn_tl = lst.stx_cmm_tl◂◂mtc_ptn

	
		§ src_ptn_lst = lst.stx_line◂◂src_ptn 
	§ src_tl = lst.stx_cmm_tl◂◂src
	§ src_ptn_tl = lst.stx_cmm_tl◂◂src_ptn  
	
			
	§
		@.line_res_i ^= 
			∐# "\n" ⊢ { {} }
				∎ ‹ {} › 
			∐# _byt line_res_i ⊢ { b {} }
				∎ ‹ {} ›  
			∐.# ⊢ { }
				∎ ‹ {} › 
	§ 
		@.line_res ^= 
			∐. line_res_i ⊢ { nn } 
				∎ ‹ { _n _r } ›
	§ 
		@.line_nl ^= 
			∐# "\n" ⊢ { {} } 
				$ _some◂{} ⊢ a 
				∎ a 
			∐.# _byt line_nl ⊢ { b nn } 
				$ _some◂{} ⊢ a 
				∎ a 
	§ 
		@.nls ^= 
			∐# "\n" !| nls ⊢ { {} xx }
				∎ ret_vld◂{}
			∐# "--" !| line_res nls ⊢ { {} xx yy } 
				∎ _some◂prs_vld◂{}
			∐# "-\\" !| ; ⊢ { {} },p
				∎ _some◂p
				∐# "\n" cmt_in nls ⊢ { {} p0 p1 }
					prs_cct { p0 p1 } ⊢ pr 
					$ pr ⊢ 
					∐ prs_vld◂{ p0 p1 } . 
						∎ ret_vld◂{} 
					∐. prs_err◂e . 
						pnt_prs_err e ⊢ s 
						_emt.f s ⊢ _ 
						∎| 		
				∐.# ⊢ { } 
					^ _n,_r ⊢ _,_,sr 
						"nls_err " 0d' "-" 1d' ":\n" //
					_emt.f sr ⊢ _ 
					∎|   
			∐.# ⊢ { } 
				∎ ret_vld◂{}
		@.cmt_in ^= 
			∐# "-\\" !| ; ⊢ { {} },p
				$ _some◂p ⊢ a 
				∎ a 
				∐# "\n" cmt_in cmt_in ⊢ { {} p0 p1 }
					prs_cct { p0 p1 } ⊢ pr 
					$ pr ⊢ 
					∐ prs_vld◂{ p0 p1 } . 
						∎ ret_vld◂{}
					∐. prs_err◂e . 
						pnt_prs_err e ⊢ s 
						_emt.f s ⊢ _ 
						∎| 		
					
					∐.# ⊢ { } 
						∎ _some◂prs_err◂_cns◂{ { %_n %_r %[ "blk_cmt 0" ] } _nil◂{} }
			∐ "-/" nl_eof ⊢ { {} _ } 
				∎ _some◂prs_vld◂{} 
			∐# line_nl cmt_in ⊢ { nn c }
				$ _some◂c ⊢ a 
				∎ a
			∐.# ⊢ { } 
				∎ _some◂prs_err◂_cns◂{ { %_n %_r %[ "blk_cmt 1" ] } _nil◂{} }

	§§ grm 
		§ @.fld_line◂◂{ G H F T } ^=
			∐# H G fld_line◂◂{ G H F T } ⊢ { _ a l } 
				F { a l } ⊢ l 
				∎ _some◂l
			∐.# ⊢ { } 
				∎ _some◂%[ T ] 
		§ @.fld◂◂{ G H F T } ^=
			∐ H G fld◂◂{ G H F T } ⊢ { _ a l } 
				F { a l } ⊢ l 
				∎ _some◂l
			∐. ⊢ { } 
				∎ _some◂%[ T ] 
		§ @.fld_tm◂◂{ G H F T } ^= 
			∐ T ⊢ { t } 
				∎ _some◂t 
			∐. H G fld_tm◂◂{ G H F T } ⊢ { _ a l } 
				F { a l } ⊢ l 
				∎ _some◂l 
		∎∎
	§ @.nls_lst◂◂G ^=
		∐# nls G !| nls_lst◂◂G ⊢ { _ a l } 
			∎ _some◂_cns◂{ a l } 
		∐.# nls ⊢ { _ } 
			∎ _some◂_nil◂{} 
	§ @.nls_lst_n◂◂G ^=
		∐# nls G !| nls_lst_n◂◂G ⊢ { _ a { n l } } 
			_inc n ⊢ n 
			∎ ‹ { n _cns◂{ a l } } › 
		∐.# nls ⊢ { _ } 
			∎ ‹ { %[ 0r ] ⟦⟧ } › 
	
	§ @.nls_lst_prs◂◂G ^= 
		∐# nls G !| nls_lst_prs◂◂G ⊢ { _ a l } 
			prs_cct { a l } ⊢ e 
			$ e ⊢ 
			∐ prs_vld◂{ a l } . 
				∎ _some◂prs_vld◂_cns◂{ a l }
			∐. prs_err◂e . 
				∎ _some◂prs_err◂e 
		∐.# nls ⊢ { _ } 
			∎ _some◂prs_vld◂_nil◂{} 
	§ @.nls_p_lst_prs◂◂{ G_E G_S } ^= 
			∐# nls G_E ⊢ { _ e } 
				$ e ⊢ 
				∐ prs_vld◂e . 
					∎ _some◂prs_vld◂p_end◂e 
				∐. prs_err◂e . 
					∎ _some◂prs_err◂e 
			∐.# nls G_S nls_p_lst_prs◂◂{ G_E G_S } ⊢ { _ e l } 
				prs_cct { e l } ⊢ p 
				$ p ⊢ 
				∐ prs_vld◂{ e l } . 
					∎ _some◂prs_vld◂p_cns◂{ e l } 
				∐. prs_err◂e . 
					∎ _some◂prs_err◂e 
		
	
	§	@.glb_etr_ch ^= 
			∐* "§§" ⊢ { {} }
				∎ ‹ {} ›
			∐* "§" ⊢ { {} }
				∎ ‹ {} ›
			∐* "¶" ⊢ { {} }
				∎ ‹ {} ›
			∐.* "∎∎" ⊢ { {} }
				∎ ‹ {} ›
	§	@.glb_etr_res_ch ^= 
			∐* glb_etr_ch !| ⊢ { g }
				∎ ‹›
			∐.* _byt ⊢ { b } 
				∎ ‹ {} ›
	§	@.glb_etr_clq_ch ^= 
			∐* "@" !| ⊢ { {} } 
				∎ ‹› 
			∐* glb_etr_ch !| ⊢ { c } 
				∎ ‹›  
			∐.* _byt ⊢ { b } 
				∎ ‹ {} ›
	§	@.glb_etr_res_clq ^= 
			∐* glb_etr_clq_ch glb_etr_res_clq ⊢ { c r }
				∎ ‹ {} › 
			∐.* ⊢ { } 
				∎ ‹ {} ›
	§	@.glb_etr_res_line ^= 
			∐# "\n" ⊢ { n } 
				∎ ‹ {} › 
			∐# glb_etr_ch !| ⊢ { g } 
				∎ ‹› 
			∐# "@" !| ⊢ { q } 
				∎ ‹› 
			∐# _byt glb_etr_res_line ⊢ { b r } 
				∎ ‹ {} › 
			∐# _byt ⊢ { b } 
				∎ ‹ {} › 
			∐.# ⊢ { } 
				∎ ‹ {} ›
	§ @.rtm_sbl ^= 
		∐ "§~" ⊢ { {} } 
			∎ ‹ {} ›
		∐. "§%" ⊢ { {} } 
			∎ ‹ {} ›  
	§	@.var_idx ^=
			∐. _scf_d "'" ⊢ { x {} }
				∎ _some◂%x
	§	@.s8_fmt ^=
			∐ _scf_d "d'" ⊢ { d {} }
				∎ _some◂{ ast.fmt_d◂{} %d }
			∐ _scf_d "x'" ⊢ { d {} }
				∎ ‹ { ast.fmt_x◂{} d } ›
			∐ _scf_d "st'" ⊢ { d {} }
				∎ ‹ { ast.fmt_st_s◂{} d } ›
			∐. _scf_d "'" ⊢ { d {} }
				∎ ‹ { ast.fmt_s◂{} d } ›
	§	@.line ^=
			∐ "\n" ⊢ { {} }
				rp8.pfx_chr { %[ 10r ] rp8.e◂{} } ⊢ l 
				$ _some◂l ⊢ a
				∎ a
			∐. _byt line ⊢ { b l }
				rp8.pfx_chr { b l } ⊢ l 
				$ _some◂l ⊢ a
				∎ a
	§	@.s8_ptn_line ^=
			∐. "`" line ⊢ { {} l }
				rp8.to_s8 l ⊢ s 
				∎ ‹ s ›
	 § @.s8_lt ^= 
	 	∐# s8_ptn_line ⊢ { s }
			∎ _some◂s
		∐.# stg_ltr ⊢ { s }
			∎ _some◂%s
			
	 § @.s8_lst ^= 
		∐# s8_lt !| nls s8_lst ⊢ { s _ l }
			∎ _some◂⟦ s < l ⟧
		∐.# ⊢ { } 
			∎ _some◂⟦⟧
	§ @.s8_ct ^= 
		∐# s8_ptn_line s8_lst ⊢ { s l } 
			$ l ⊢ 
			∐ _nil◂{} . 
				∎ _some◂RP.atm◂ast.k_s8◂%s
			∐. _cns◂{ s1 l } . 
				s8_of_s8_lst_rev ⟦ s s1 < l ⟧ ⊢ s 
				∎ _some◂RP.atm◂ast.k_s8◂%s
		∐# stg_ltr s8_lst ⊢ { s l }
			$ l ⊢ 
			∐ _nil◂{} . 
				∎ _some◂RP.atm◂ast.k_s8◂%s
			∐. _cns◂{ s1 l } . 
				s8_of_s8_lst_rev ⟦ s s1 < l ⟧ ⊢ s 
				∎ _some◂RP.atm◂ast.k_s8◂%s 
		∐.# ct_ptn ⊢ { c } 
			∎ _some◂c 
	§ @.s8_ct_lst ^= 
		∐# "//" "\n" ⊢ { {} {} } 
			∎ ‹ RP.atm◂ast.k_s8◂%[ "" ] ›
		∐.# s8_ct nls s8_ct_lst ⊢ { p _ l } 
			∎ ‹ RP.atm◂ast.k_app◂{ ax◂%[ EX.ccs ] RP.cns2◂{ p l } } › 
	§ 
		@.s8_ptn ^=
			∐# var_idx "*" !| stg_ltr ⊢ { i {} s }
				∎ _some◂ast.exp_s8_for◂{ %i RP.atm◂ast.k_s8◂%s }
			∐# s8_lt nls s8_lst ⊢ { s _ l } 
				$ l ⊢ 
				∐ _nil◂{} . 
					∎ _some◂ast.exp_s8_cst◂RP.atm◂ast.k_s8◂%s
				∐. _cns◂{ s1 l } . 
					s8_of_s8_lst_rev ⟦ s s1 < l ⟧ ⊢ s 
					∎ _some◂ast.exp_s8_cst◂RP.atm◂ast.k_s8◂%s
			∐# abs_name ⊢ { n }
				∎ _some◂ast.exp_s8_cst◂RP.atm◂ast.k_name◂%n
			∐.# s8_fmt ⊢ { f }
				∎ _some◂ast.exp_s8_idx◂%f
	§ 
    @.s8_ptn_lst_0 ^= 
			∐# "//" ⊢ { {} } 
				∎ ‹ ⟦⟧ ›
			∐.# s8_ptn nls s8_ptn_lst_0 ⊢ { p _ l } 
				∎ ‹ ⟦ p < l ⟧ ›   
	§ @.s8_ptn_lst ^= 
		∐.# nls s8_ptn_lst_0 ⊢ { _ r } 
			∎ ‹ r ›
	§§ act
		§ lc_mtc # { {} m } 
			∎ ast.mtc◂m
		§ @.id_0_mtc { s m } 
			$ m ⊢ 
			∐ p_cns◂{ { mp l } m } . 
				$ s ⊢ s,s0 
				id_0_mtc { s0 m } ⊢ m 
				∎ ast.na_p◂{ ast.mtc_id◂{ s mp } l m }
			∐. p_end◂{ mp l } . 
				∎ ast.na_s◂{ ast.mtc_id◂{ s mp } l }
		§ id_0 { {} { s il } }
			∐ il ⊢ c0◂{ rs lc } . 
				ip.id_line { s rs lc } ⊢ lc 
				∎ lc
			∐ il ⊢ c1◂m .
				id_0_mtc { RP.atm◂%[ ".s" ] m } ⊢ m 
				∎ ast.seq◂{ { ax◂%[ EX.id ] s RP.atm◂ast.re_reg◂%[ ".s" ] } ast.mtc◂m } 
			∐. . 
				∎| 
		§ id_mtc # { {} m } 
			∎ c1◂m
		§ id_line # { { r1 rs } lc } 
			∎ c0◂{ _cns◂{ r1 rs } lc }
		
		§ lc_exh # { { op s d } { lf lx } } 
			∎ ast.op_exh◂{ op s d lf lx }
		∎∎

	§ 
		@.exp_s8_d ^= 
			∐.# mtc exp_s8_d_0 ⊢ { m o } 
				$ o ⊢ 
				∐ _some◂{ ds dd } . 
					∎ ‹ { ⟦ RP.atm◂m < ds ⟧ dd } › 
				∐. _none◂{} . 
					∎ ‹ { ⟦⟧ RP.atm◂m } › 
		@.exp_s8_d_0 ^= 
			∐# "," exp_s8_d ⊢ { {} { ds dd } } 
					∎ ‹ ‹ { ds dd } › ›
			∐.#  ⊢ { }
				∎ ‹ ‹› › 
	§	@.lc_exp_s8_sd ^=
			∐* wc "⊢" !| mtc ⊢ { xx {} r }
				∎ ‹ { RP.unt◂{} RP.cns2◂{ RP.unt◂{} RP.atm◂%r } } ›  
			∐.* src src_ptn_tl "⊢" exp_s8_d ⊢ { r0 rs0 {} { ds dd } }
				∎ ‹ { RP.rcd◂⟦ RP.atm◂r0 < rs0 ⟧ RP.cns2◂{ RP.rcd◂ds dd } } ›
	§ @.inl_flg ^= 
		∐# "##" ⊢ { {} } 
			∎ ‹ %[ 2r ] › 
		∐# "#" ⊢ { {} } 
			∎ ‹ %[ 1r ] › 
		∐.# ⊢ { } 
			∎ ‹ %[ 0r ] ›
	
	§	@.mtc_val ^=
			∐ word "'" ⊢ { w {} }
				∎ ‹ ast.test_var◂w ›
			∐. ct_ptn ⊢ { c }
				∎ ‹ ast.test_cst◂c ›

	§ 
		@.mtc_test ^=
			∐# tpl_reg_ptn "⊢" !| mtc_ptn ⊢ { r0 {} r1 }
				∎ _some◂ast.mtc_id◂{ %r0 %r1 }
			∐# mtc_val "=<" mtc_val ⊢ { v0 {} v1 }
				∎ ‹ ast.mtc_test◂{ ast.test_cmp◂{} v0 v1 } ›  
			∐# mtc_val "<>" mtc_val ⊢ { v0 {} v1 } 
				∎ ‹ ast.mtc_test◂{ ast.test_neq◂{} v0 v1 } ›
			∐.# mtc_val "=" mtc_val ⊢ { v0 {} v1 }
				∎	_some◂ast.mtc_test◂{ ast.test_eq◂{} v0 v1 }
	§ @.ila_s_lst ^= 
		∐.# src_ptn ; ⊢ { s },{ a l }
			∎ ‹ { RP.atm◂ast.k_app◂{ ax◂%[ EX.ila_i ] a } ⟦ s < l ⟧ } ›
			
			∐# "," !| ila_s_lst ⊢ { {} L }
				∎ ‹ L ›
			∐.# "⊢" ⊢ { {} } 
				∎ ‹ { ax◂%[ EX.ila_n ] ⟦⟧ } ›
	§ @.ila_s ^=
		∐# "_" "⊢" ⊢ { {} {} }
			∎ ‹ { ax◂%[ EX.ila_n ] RP.unt◂{} } ›
		∐.# ila_s_lst ⊢ { { a l } } 
			∎ ‹ { a RP.rcd◂l } ›
	§ @.ila_d_lst ^= 
		∐# "*" !| mtc_ptn ; ⊢ { {} m },{ a l }
			∎ ‹ { RP.atm◂ast.k_app◂{ ax◂%[ EX.ila_c ] a } ⟦ m < l ⟧ } ›

			∐# "," !| ila_d_lst ⊢ { {} L } 
				∎ ‹ L ›
			∐.# "\n" ⊢ { {} } 
				∎ ‹ { ax◂%[ EX.ila_n ] ⟦⟧ } ›
		∐.# mtc_ptn ; ⊢ { m },{ a l }
			∎ ‹ { RP.atm◂ast.k_app◂{ ax◂%[ EX.ila_i ] a } ⟦ m < l ⟧ } ›

			∐# "," !| ila_d_lst ⊢ { {} L } 
				∎ ‹ L ›
			∐.# "\n" ⊢ { {} } 
				∎ ‹ { ax◂%[ EX.ila_n ] ⟦⟧ } ›
	§ @.ila_d ^=
		∐# "{}" "\n" ⊢ { {} {} }
			∎ ‹ { ax◂%[ EX.ila_n ] RP.unt◂{} } ›
		∐.# ila_d_lst ⊢ { { a l } } 
			∎ ‹ { a RP.rcd◂l } ›
	
	§
		@.lc_code ^=
			∐* nls "∎|" ⊢ { nn {} }
				∎ ret_vld◂ast.jmp◂{ RP.atm◂ast.k_app◂{ ax◂%[ EX.exn ] RP.atm◂ast.k_r64◂%_n } RP.unt◂{} }
			∐# nls "∎" !| ; ⊢ { nn {} },r
				∎ _some◂%r  
				∐# src_ptn "\n" ⊢ { r {} }
					∎ ret_vld◂ast.jmp◂{ ax◂%[ EX.id ] r }
				∐.# line_res ⊢ { b } 
					∎ _some◂prs_err◂_cns◂{ { %_n %_r %[ "lc_code ∎ .. " ] } _nil◂{} }
			∐* nls lc_mtc ⊢ { _ m }
				$ m ⊢ 
				∐ prs_vld◂m . 
					∎ ret_vld◂ast.mtc◂m
				∐. prs_err◂e .
					∎ ret_err◂e 
			∐# nls "$~" !| "_^" "⊢" mtc_ptn "\n" nls s8_ct_lst lc_code ⊢ { _ {} {} {} m {} _ c lc }
				$ lc ⊢ 
				∐ prs_vld◂lc . 
					∎ ret_vld◂ast.seq◂{ { RP.atm◂ast.k_app◂{ ax◂%[ EX.st ] c } RP.unt◂{} m } lc }
				∐. prs_err◂e . 
					∎ ret_err◂e
			∐# nls "$" !| ; ⊢ { _ {} },r
				∎ ‹ r ›

				∐# "." !| "[" args "." type "]" src_ptn "⊢" mtc_ptn "\n" lc_code ⊢ { {} {} as {} t {} s {} d {} lc }
					$ lc ⊢ 
					∐ prs_vld◂lc . 
						$ t ⊢ t0,t1
						$ RP.atm◂ast.k_t◂{ ax◂%[ EX.id ] { as TX.t_imp◂{ t0 t1 } } } ⊢ l
						∎ ret_vld◂ast.seq◂{ { l s d } lc }
					∐. prs_err◂e . 
						∎ ret_err◂e
				∐# src_ptn "⊢" !| ; ⊢ { s {} },il 
					prs_add { s il } ⊢ r 
					--∎ _some◂a 
					prs_act◂◂act.id_0 { {} r } ⊢|
					
					∐# "\n" !| nls lc_id_mtc ⊢ { {} _ m }
						prs_act◂◂act.id_mtc { {} m } ⊢|	
					∐.# mtc_ptn mtc_ptn_tl "\n" lc_code ⊢ { r1 rs {} lc }
						prs_act◂◂(act.id_line) { { r1 rs } lc } ⊢|
				∐# line_res nls lc_id_mtc ⊢ { { n r } _ lc }
					$ lc ⊢ 
					∐ prs_vld◂x . 
						mk_prs_err { n r %[ "glb_etr id_line line_res 0" ] } ⊢ l 
						∎ ‹ l ›
					∐. prs_err◂l . 
						∎ ret_err◂⟦ { n r %[ "glb_etr id_line line_res 1" ] } < l ⟧
				∐.# line_res lc_code ⊢ { { n r } lc } 
					$ lc ⊢ 
					∐ prs_vld◂x . 
						mk_prs_err { n r %[ "glb_etr id_line line_res 2" ] } ⊢ l 
						∎ ‹ l ›
					∐. prs_err◂l . 
						∎ _some◂prs_err◂_cns◂{ { n r %[ "glb_etr id_line line_res 3" ] } %l }
			∐# nls "^" !| lc_exp_s8_sd "\n" s8_ptn_lst lc_code ⊢ { nn {} { s d } {} ps lc }
				$ lc ⊢ 
				∐ prs_vld◂lc . 
					∎ ret_vld◂ast.seq◂{ { RP.atm◂ast.k_app◂{ ax◂%[ EX.pf ] RP.atm◂ast.k_pf◂ps } s d } lc }
				∐. prs_err◂e . 
					∎ ret_err◂e
			∐# nls "!^" !| ila_s ila_d s8_ct_lst lc_code ⊢ { _ {} { sa s } { sd d } a lc } 
				$ lc ⊢ 
				∐ prs_vld◂lc . 
					∎ ret_vld◂ast.seq◂{ { RP.atm◂ast.k_app◂{ ax◂%[ EX.ila ] RP.cns3◂{ sa sd a } } s d } lc }
				∐. prs_err◂e . 
					∎ ret_err◂e
			∐# nls "=+" var "\n" tj ⊢ { _ {} x {} p } 
				$ p ⊢ 
				∐ prs_vld◂{ v r } . 
					∎ ret_vld◂ast.tj◂{ x v r }  
				∐. prs_err◂e . 
					∎ ret_err◂e 
			∐# nls ct_ptn inl_flg src_ptn ; ⊢ { nn n ib r0 },o 
				$ o ⊢ 
				∐ prs_vld◂o . 
					$ o ⊢ 
					∐ c1◂{ y lc } .
						∎ _some◂prs_vld◂ast.seq◂{ { n r0 y } lc }
					∐ c2◂{ d e } . 
						prs_act◂◂act.lc_exh { { n r0 d } e } ⊢|			
					∐. c0◂{} . 
						∎ _some◂prs_vld◂ast.jmp◂{ n r0 }
				∐. prs_err◂e . 
					∎ _some◂prs_err◂e 
				
				∐* "⊢|" !| ⊢ { {} }
					∎ _some◂prs_vld◂c0◂{} 
				∐# "⊢" mtc_ptn "\n" !| lc_code ⊢ { {} r1 {} lc }
					$ lc ⊢ 
					∐ prs_vld◂lc . 
						∎ _some◂prs_vld◂c1◂{ r1 lc }
					∐. prs_err◂e . 
						∎ _some◂prs_err◂e
				∐# "⊢" "\n" !| "?" mtc_ptn "." "\n" lc_code "∐." "_" "." "\n" lc_code ⊢ { {} {} {} d {} {} lf {} {} {} {} lx }
					prs_cct { lf lx } ⊢ e 		
					∎ _some◂prs_vld◂c2◂{ d e } 
				∐.* line_res lc_code ⊢ { { nn rr } lc }
					$ lc ⊢ 
					∐ prs_vld◂_ . 
						∎ _some◂prs_err◂_cns◂{ { %nn %rr %[ "lc_code 20" ] } _nil◂{} }
					∐. prs_err◂e . 
						∎ _some◂prs_err◂_cns◂{ { %nn %rr %[ "lc_code 21" ] } %e } 
			∐.* glb_etr_res_line ; ⊢ { r },lc
				add_prs_err { _n _r %[ "lc_code 9" ] lc } ⊢ e 
				∎ _some◂e 
				
				∐* lc_code ⊢ { lc } 
					∎ _some◂%lc
				∐.* glb_etr_res_clq ⊢ { r } 
					∎ _some◂prs_err◂_cns◂{ { %_n %_r %[ "lc_code 11" ] } _nil◂{} }  
		@.tj ^= 
			∐# nls "∐." !| "\n" lc_code ⊢ { _ {} {} lc } 
				$ lc ⊢ 
				∐ prs_vld◂lc . 
					∎ ret_vld◂{ ⟦⟧ lc } 
				∐. prs_err◂e . 
					∎ ret_err◂e 
			∐.# nls "∐" "\n" lc_code tj ⊢ { _ {} {} lc p } 
				prs_cct { lc p } ⊢ e 
				$ e ⊢ 
				∐ prs_vld◂{ lc { v r } } . 
					∎ ret_vld◂{ ⟦ lc < v ⟧ r } 
				∐. prs_err◂e . 
					∎ ret_err◂e   
		@.mtc_line ^= 
			∐# "." "\n" !| nls lc_code ⊢ { {} {} _ lc } 
				$ lc ⊢ 
				∐ prs_vld◂lc . 
					∎ ret_vld◂ast.na_e◂{ ⟦⟧ lc }
				∐. prs_err◂e .	
					∎ ret_err◂e  
			∐.# mtc_test mtc_line_tl ⊢ { t l } 
				$ l ⊢ 
				∐ prs_vld◂l .
					∎ ret_vld◂ast.na_s◂{ t l }
				∐. prs_err◂e .
					∎ ret_err◂e 
		@.mtc_line_tl ^= 
			∐# "." "\n" !| nls lc_code ⊢ { {} {} _ lc } 
				$ lc ⊢ 
				∐ prs_vld◂lc . 
					∎ ret_vld◂ast.na_e◂{ ⟦⟧ lc }
				∐. prs_err◂e .	
					∎ ret_err◂e  
			∐# ";" "\n" !| nls lc_mtc ⊢ { {} {} _ m } 
				∎ ‹ m ›
			∐.# ";" mtc_test mtc_line_tl ⊢ { {} t l }
				$ l ⊢ 
				∐ prs_vld◂l .
					∎ ret_vld◂ast.na_s◂{ t l }
				∐. prs_err◂e .
					∎ ret_err◂e 
		@.lc_mtc ^= 
			∐# "∐." !| mtc_line ⊢ { {} n } 
				∎ ‹ n › 
			∐.# "∐" mtc_test mtc_line_tl nls lc_mtc ⊢ { {} t n _ m } 
				prs_cct { n m } ⊢ p 
				$ p ⊢ 
				∐ prs_vld◂{ n m } .
					∎ ret_vld◂ast.na_p◂{ t n m }
				∐. prs_err◂e .	
					∎ ret_err◂e 
		@.lc_id_mtc ^= 
			∐# "∐." !| mtc_ptn mtc_line_tl ⊢ { {} m l } 
				$ l ⊢ 
				∐ prs_vld◂l .	
					∎ ret_vld◂p_end◂{ m l }
				∐. prs_err◂e .
					∎ ret_err◂e  
			∐.# "∐" mtc_ptn mtc_line_tl nls lc_id_mtc ⊢ { {} m l _ r } 
				prs_cct { l r } ⊢ p 
				$ p ⊢ 
				∐ prs_vld◂{ l r } .
					∎ ret_vld◂p_cns◂{ { m l } r }
				∐. prs_err◂e .	
					∎ ret_err◂e 
	§	
		@.glb_etr_res ^= 
			∐* glb_etr_res_ch glb_etr_res ⊢ { c r }
				∎ _some◂{}
			∐.* ⊢ { }
				∎ _some◂{}
		@.mdl_etr_res  ^=
			∐* "∎∎" ⊢ { {} } 
				∎ _some◂{}
			∐* "§§" ; ⊢ { {} },p
				∎ _some◂{}
				∐* word "=" name mdl_etr_res ⊢ { w {} n r }
					∎ ‹ {} ›
				∐.* mdl_etr_res mdl_etr_res ⊢ { r0 r1 } 
					∎ ‹ {} ›
			∐* _byt mdl_etr_res ⊢ { b r } 
				∎ ‹ {} › 
			∐.* ⊢ { } 
				∎ ‹ {} ›
		
	§		 
		@.def_gnr ^= 
			∐# "◂◂" !| tpl_ptn ⊢ { {} p } 
				∎ _some◂_some◂p
			∐.# ⊢ { } 
				∎ _some◂_none◂{}
	
	§ @.def_word ^= 
		∐ "_" word ⊢ { {} w } 
			^ w ⊢ _,w 
				"_" 0' // 
			∎ ‹ { %[ 0r ] w } › 
		∐. word ⊢ { w } 
			∎ ‹ { %[ 1r ] w } ›  
	
	§	@.dt_args ^=
			∐# "◂" !| var args_tl ⊢ { {} v as }
				∎ ‹ _cns◂{ v as } ›  
			∐# var !| args_tl ⊢ { v as } 
				∎ ‹ _cns◂{ v as } ›  
			∐.# ⊢ { } 
				∎ ‹ ⟦⟧ ›
	§	@.dt_etr_coprd_i ^=
			∐.# "∐" !| word ":" type "\n" ⊢ { {} w {} t {} }
				∎ _some◂{ w t }
	§	@.dt_etr_coprd = nls_lst_n◂◂dt_etr_coprd_i 
	§	@.dt_etr_body ^=
			∐* def_word dt_args "=" !| type ⊢ { w as {} n }
				∎ ‹ { w ast.dt_ln◂{ as n } } ›
			∐.* def_word dt_args nls "∐" word ":" type dt_etr_coprd ⊢ { w as nn {} wc {} t { n d } }
				_inc n ⊢ n 
				∎ ‹ { w ast.dt_def◂{ as n ⟦ { wc t } < d ⟧ } } ›

	§	@.qlq_dt_etr_i ^= 
			∐.# "@" !| "." dt_etr_body ⊢ { {} {} p } 
				∎ _some◂p
	§	@.qlq_dt_etr = nls_lst◂◂qlq_dt_etr_i 
	§	@.dt_etr ^=
			∐* "@" !| "." dt_etr_body qlq_dt_etr ⊢ { {} {} e q }
				∎ ‹ ast.dt_qlq_etr◂⟦ e < q ⟧ ›
			∐* dt_etr_body ⊢ { e }
				∎ ‹ ast.dt_etr◂e ›
			∐. ⊢ { }
				∎ ‹›
	§ 
		@.grm_rle ^= 
			∐* "!|" !| lst.stx_line◂◂grm_ptn ⊢ { {} g }
				∎ ‹ ast.grm.ptn_cut◂g ›
			∐* grm_ptn grm_rle ⊢ { h g }
				∎ _some◂ast.grm.ptn_seq◂{ h g }
			∐.* ⊢ { }
				∎ _some◂ast.grm.ptn_end◂{}
		@.grm_ptn ^= 
			∐.* grm_ptn_atm ⊢ { a }
				∎ _some◂%a
		@.grm_ptn_atm ^=
			∐# stg_ltr ⊢ { a }
				∎ _some◂RP.atm◂ast.k_app◂{ psc_unv_k◂{} RP.atm◂ast.k_s8◂%a }
			∐.# ct_ptn ⊢ { n }
				∎ _some◂%n
	
		@.grm_ord ^= 
			∐* "∐*" ⊢ { {} }
				∎ _some◂ast.grm.synt◂{}
			∐* "∐#" ⊢ { {} }
				∎ _some◂ast.grm.line◂{}
			∐.* "∐" ⊢ { {} }
				∎ _some◂ast.grm.lex◂{}
		@.grm_ord_end ^= 
			∐* "∐.*" ⊢ { {} }
				∎ _some◂ast.grm.synt◂{}
			∐* "∐.#" ⊢ { {} }
				∎ _some◂ast.grm.line◂{}
			∐.* "∐." ⊢ { {} }
				∎ _some◂ast.grm.lex◂{}
	§ 
		@.grm_etr_def ^= 
			∐.* grm_etr_act ⊢ { g }
				∎ ‹ g ›
		@.grm_etr_act ^= 
			∐* grm_ord_end !| grm_rle grm_etr_act_act	⊢ { o l ga }
				$ ga ⊢ 
				∐ prs_vld◂{ r0 lc a } . 
					$ ast.grm.act_regs◂{} ⊢ gr
					∎ ret_vld◂ast.grm.act_end◂{ gr r0 lc o l a }
				∐. prs_err◂e . 
					∎ ret_err◂e 
			∐.* grm_ord grm_rle grm_etr_act_act grm_etr_act ⊢ { o l ga g }
				prs_cct { ga g } ⊢ e  
				$ e ⊢ 
				∐ prs_vld◂{ { r0 lc a } g } . 
					$ ast.grm.act_regs◂{} ⊢ gr
					∎ ret_vld◂ast.grm.act_cns◂{ gr r0 lc o l a g }
				∐. prs_err◂e .	
					∎ ret_err◂e
		@.grm_etr_act_act ^= 
			∐* ";" "⊢" !| mtc_ptn "," mtc_ptn lc_code grm_etr_act ⊢ { {} {} r0 {} r1 lc g }
				prs_cct { lc g } ⊢ e 
				$ e ⊢ 
				∐ prs_vld◂{ lc g } . 
					∎ ret_vld◂{ r0 lc ‹ { r1 g } › }
				∐. prs_err◂e .
					∎ ret_err◂⟦ { _n _r %[ "grm_etr_act_act 0"  ] } < e ⟧
			∐.* "⊢" !| mtc_ptn lc_code ⊢ { {} r0 lc }
				$ lc ⊢ 
				∐ prs_vld◂lc . 
					∎ ret_vld◂{ r0 lc ‹› }
				∐. prs_err◂e .
					∎ ret_err◂⟦ { _n _r %[ "grm_etr_act_act 1"  ] } < e ⟧
	§ 
		@.lc_etr_def ^=
			∐# "◂◂" tpl_ptn "=" !| ct_ptn "\n" ⊢ { {} T {} c {} } 
				of_tpl_ptn { {} T } ⊢ { {} T }  
				∎ ret_vld◂ast.lc_ln◂RP.atm◂ast.k_fnc◂{ T c }
			∐# def_gnr "^=" "\n" grm_etr_def ⊢ { o_g {} {} ge } 
				$ ge ⊢ 
				∐ prs_vld◂ge . 
					∎ _some◂prs_vld◂ast.lc_grm◂{ o_g ge }
				∐. prs_err◂e .
					∎ ret_err◂e 
			
			∐# "=^" !| "\n" s8_ptn_lst ⊢ { {} {} l } 
				∎ ret_vld◂ast.lc_ln◂RP.atm◂ast.k_pf◂l 
			∐# "=|" !| "\n" ⊢ { {} {} }
				∎ ret_vld◂ast.lc_neg◂{}
			∐# "=" !| ct_ptn "\n" ⊢ { {} c {} }
				∎ _some◂prs_vld◂ast.lc_ln◂c
			∐# def_gnr inl_flg mtc_ptn "\n"  lc_code ⊢ { o_t if r0 {} x0 }  
				$ x0 ⊢ 
				∐ prs_vld◂x0 . 
					∎ ret_vld◂ast.lc_def◂{ o_t r0 if x0 }
				∐. prs_err◂e . 
					∎ ret_err◂e
			∐.# "◂" !| tpl_reg_ptn "=" src_ptn "\n" ⊢ { {} x {} p {} } 
				∎ _some◂prs_vld◂ast.lc_ln◂RP.atm◂ast.k_ply◂{ %[ 0r ] x p }
	§ 
		@.lc_etr_body ^=
			∐# nls "@" !| "." def_word lc_etr_def qlq_etr ⊢ { nn {} {} w le q }
				prs_cct { q le } ⊢ e 
				$ e ⊢ 
				∐ prs_vld◂{ q le } . 
					∎ _some◂prs_vld◂ast.lc_qlq_etr◂_cns◂{ { %w %le } %q }
				∐. prs_err◂e . 
					∎ _some◂prs_err◂%e
			∐* def_word lc_etr_def ⊢ { n e }
				$ e ⊢ 
				∐ prs_vld◂e . 	
					∎ ret_vld◂ast.lc_etr◂{ n e }
				∐. prs_err◂e . 
					∎ ret_err◂e
			∐. ⊢ { }
				_emt_im.f◂◂"lc_etr_body 0" {} ⊢ {} 
				∎ _none◂{}
		@.lc_clq_etr_i ^=
			∐.# "@" !| "." def_word lc_etr_def ⊢ { {} {} w le } 
				$ le ⊢ 
				∐ prs_vld◂le . 
					∎ _some◂prs_vld◂{ w le } 
				∐. prs_err◂e . 
					∎ _some◂prs_err◂e 
		@.qlq_etr = nls_lst_prs◂◂lc_clq_etr_i 
		
	§
		@.file ^=
			∐.# nls_lst_prs◂◂glb_etr nl_eof ⊢ { gl _  } 
				∎ _some◂gl
		@.glb_etr ^=
			∐* nls "§§" !| ; ⊢ { nn {} },p 
				∎ _some◂p
				∐* def_word mdl_etr_def ⊢ { n d }
					$ d ⊢ 
					∐ prs_vld◂d . 
						∎ _some◂prs_vld◂ast.mdl_etr◂{ %n %d }
					∐. prs_err◂err . 
						∎ ret_err◂err 
				∐.* mdl_etr_res ⊢ { r } 
					∎ _some◂prs_err◂_cns◂{ { %_n %_r %[ "glb_etr 0.1" ] } _nil◂{} }
			∐# "¶¶" !| def_word dt_args ":" type "\n" ⊢ { {} w as {} t {} }
				∎ ret_vld◂ast.lc_ap_t◂{ w as t }
			∐# "¶§" !| abs_name "=" ct_ptn "\n" ⊢ { {} n {} c {} }
				∎ ret_vld◂ast.lc_ap◂{ n c }
			∐# "§:" !| def_word dt_args "=" type "\n" ⊢ { {} w as {} t {} }
				$ t ⊢ t,t0 
				∎ ret_vld◂ast.lc_etr◂{ w ast.lc_ln◂RP.atm◂ast.k_t◂{ ast.axm_pp◂%[ EX.id ] { as TX.t_imp◂{ t t0 } } } }
			∐* "§" !| ; ⊢ { {} },p 
				$ _some◂p ⊢ a 
				∎ a
				∐* lc_etr_body ⊢ { le }
					∎ _some◂le
				∐.* glb_etr_res ⊢ { bs }
					∎ _some◂prs_err◂_cns◂{ { %_n %_r %[ "glb_etr 3" ] } _nil◂{} }
			∐.* "¶" !| ; ⊢ { {} },p 
				∎ _some◂p
				∐* dt_etr ⊢ { de }
					∎ ret_vld◂de
				∐.* glb_etr_res ⊢ { bs }
					∎ _some◂prs_err◂_cns◂{ { %_n %_r %[ "glb_etr 4" ] } _nil◂{} }
		@.mdl_etr_def ^=
			∐* "=" !| name nls ⊢ { {} n nn }
				∎ ret_vld◂ast.mdl_ln◂n
			∐.* nls mdl_glb_etr ⊢ { nn m }
				$ m ⊢ 
				∐ prs_vld◂m . 
					∎ ret_vld◂ast.mdl_def◂m
				∐. prs_err◂err . 
					∎ ret_err◂err
		@.mdl_glb_etr ^=
			∐* nls "∎∎" nls ⊢ { nn0 {} nn }
				∎ ret_vld◂⟦⟧
			∐* nls glb_etr mdl_glb_etr ⊢ { nn e gl }
				prs_cct { e gl } ⊢ e0 
				$ e0 ⊢ 
				∐ prs_vld◂{ e gl } . 
					∎ ret_vld◂⟦ e < gl ⟧
				∐. prs_err◂err . 
					∎ ret_err◂err 
			∐. mdl_etr_res ⊢ { r }
				∎ _some◂prs_err◂_cns◂{ { %_n %_r %[ "glb_etr 7" ] } _nil◂{} }
		
	∎∎	
	 
	§§ SCM = ast.SCM
	§§ ns
		§ dta = T.dta 
		§ imp = T.imp 
		§ ct_imp = T.ct_imp 
		§ abs = T.abs 
		§ var = T.var 
		§ var_l = T.var_l 
		§ var_q = T.var_q 
		§ var_ln = T.var_ln 
		§ newvar_i = T.newvar_i 
		§ newvar_l = T.newvar_l 
		§ newvar_q = T.newvar_q 
		
		
	
		§§ f_c 
			¶ seq = bl.t
			¶ mtc = bl.t   
			
			∎∎
		¶ f_c a',b',c',d',e',f',g',h'
			∐ f_seq : a' 
			∐ f_seq_mtc : b' 
			∐ f_ret : c'
			∐ f_ret_mtc : d' 
		§§ t_axm = T.t_axm 
		§§ inst = T.inst 
		
		§ inst = T.inst 
	
		§ gen = T.gen 
		§ gen_lst = T.gen_lst
		§ gen_dlt = T.gen_dlt 
		§ gen_dlt_lst = T.gen_dlt_lst
		§ inst_imp = T.inst_imp 
		 
			§ dta_n_1 { tav a } 
				_alc_o { tav a } ⊢ { tav o } 
				∐ o ⊢ _some◂{ n v k } .
					--$ o ⊢ { w { n v k } }
					∐ n'=1r . 
						$ v ⊢ v,v0 
						$ k ⊢ k,k0 
						--_alc_i { tav { w { n v k } } } ⊢ { tav a }
						_alc_i { tav ‹ { n v k } › } ⊢ { tav a }
						∎ { tav a ‹ { v0 k0 } › }
					∐. . 
						--_alc_i { tav { w { n v k } } } ⊢ { tav a }
						_alc_i { tav ‹ { n v k } › } ⊢ { tav a }
						∎ { tav a ‹› }
				∐. .
					_alc_i { tav o } ⊢ { tav _ } 
					∎|
			§ dta_n { tav a } 
				_alc_o { tav a } ⊢ { tav o } 
				smt_err◂◂"dta_n" o ⊢ { n v k }  
				--$ o ⊢ { w { n v k } }
				$ n ⊢ n,n0 
				$ v ⊢ v,v0 
				$ k ⊢ k,k0 
				--_alc_i { tav { w { n v k } } } ⊢ { tav a }
				_alc_i { tav ‹ { n v k } › } ⊢ { tav a }
				∎ { tav a { n0 v0 k0 } }
		
		§ @.slv_ns◂◂{ ASC_M ASC_F GET SET P0 P1 } { n MV NS m_l }
			$ n ⊢ 
			∐ ast.mdl_n◂{ w n } . 
				ASC_M { NS w } ⊢ { NS w o }
				$ o ⊢ 
				∐ _some◂i_m . 
					GET { MV i_m } ⊢ { MV i_m NS0 } 
					slv_ns◂◂{ ASC_M ASC_F GET SET P0 P1 } { n MV NS0 _nil◂{} } ⊢ { MV NS0 _ i_e }
					SET { MV i_m NS0 } ⊢ { MV _ } 
					∎ { MV NS m_l i_e }
				∐. _none◂{} . 
					$ m_l ⊢ 
					∐ _cns◂{ I m_l } .
						P0 I ⊢ { NS0 I } 
						$ ast.mdl_n◂{ w n } ⊢ n 
						slv_ns◂◂{ ASC_M ASC_F GET SET P0 P1 } { n MV NS0 m_l } ⊢ { MV NS0 m_l i_e }
						P1 { NS0 I } ⊢ I 
						$ _cns◂{ I m_l } ⊢ m_l 
						∎ { MV NS m_l i_e }
					∐. _nil◂{} . 
						^ w ⊢ _,sr 
							"slv_ns 0:not found:" 0' "\n" //
						_emt.f sr ⊢ _ 
						∎|  
			∐. ast.fst_n◂w . 
				ASC_F { NS w } ⊢ { NS w o } 
				$ o ⊢
				∐ _some◂i_e . 
					∎ { MV NS m_l i_e }
				∐. _none◂{} . 
					$ m_l ⊢ 
					∐ _cns◂{ I m_l } .
						$ ast.fst_n◂w ⊢ n 
						P0 I ⊢ { NS0 I } 
						slv_ns◂◂{ ASC_M ASC_F GET SET P0 P1 } { n MV NS0 m_l } ⊢ { MV NS0 m_l i_e }
						P1 { NS0 I } ⊢ I 
						$ _cns◂{ I m_l } ⊢ m_l 
						∎ { MV NS m_l i_e }
					∐. _nil◂{} . 
						_emt.f w ⊢ _ 
						_emt_im.f◂◂"slv_ns 1:not found\n" {} ⊢ {} 
						∎|  
		§ MV_MAX = 3200r 
		§§ MMV 
			§ ini # {} 
				ini_tv_n %[ MV_MAX ] ⊢ { _ mmv } 
				∎ mmv 
			§ get = get_tv 
			§ set { M i v }
				$ _some◂v ⊢ v 
			  exc_q { M i v } ⊢ { M i v } 
				$ v ⊢ 
				∐ _some◂_ . 
					_emt_im◂◂77r {} ⊢ {} 
					∎| 
				∐. _none◂{} . 
	  			∎ { M i }
					
			∎∎ 
		§§ NS_M 
			§ ini = BST_s8.ini
			§ asc # { ns w } 
				BST_s8.asc { ns w } ⊢ { ns { w o } } 
				∎ { ns w o } 
			§ set = BST_s8.set 
			∎∎
		§§ MTV 
			§ ini # {} 
				ini_tv_n %[ MV_MAX ] ⊢ { _ mtv } 
				∎ mtv 
			§ asc # { ns w } 
				BST_s8.asc { ns w } ⊢ { ns { w o } } 
				∎ { ns w o } 
			§ get = get_tv 
			§ set = set_tv
			∎∎ 
		§§ NS_T 
			§ ini = BST_s8.ini 
			§ set = BST_s8.set  
			∎∎		
		§§ MEV
			§ ini # {} 
				ini_tv_n %[ MV_MAX ] ⊢ { _ mev } 
				∎ mev 
			§ get = get_tv 
			§ set = set_tv
			∎∎ 
		§§ NS_E 
			§ ini = BST_s8.ini 
			§ asc # { ns w } 
				BST_s8.asc { ns w } ⊢ { ns { w o } } 
				∎ { ns w o } 
			§ set = BST_s8.set  
			§ get = BST_s8.get
			∎∎		
	--/
	§ @.tpl_push { NS wl wl0 } 
		∐ wl ⊢ _cns◂{ { w _some◂k } wl } . 
			NS_E.set { NS { w k } } ⊢ { NS { w k0 } } 
			tpl_push { NS wl ⟦ { w k0 } < wl0 ⟧ } ⊢|
		∐ wl ⊢ _nil◂{} . 
			∎ { NS ⟦⟧ } 
		∐. . 
			∎|
	§ tpl_push # { NS wl } 
		tpl_push { NS wl ⟦⟧ } ⊢| 
	§ @.tpl_pop { NS wl } 
		$ wl ⊢ 
		∐ _cns◂{ { w k } wl } . 
			$ k ⊢ 
			∐ _some◂k . 
				NS_E.set { NS { w k } } ⊢ { NS _ } 
				tpl_pop { NS wl } ⊢|
			∐. _none◂{} . 
				NS_E.get { NS w } ⊢ { NS _ } 
				tpl_pop { NS wl } ⊢|  
		∐. _nil◂{} . 
			∎ NS  

		§ add_e # { ns e k  } 
			EVV.alc k ⊢ p 
			$ p ⊢ p,p0 
			NS_E.set { ns { e p } } ⊢ { ns _ } 
			∎ { ns p0 }
		§ add_e_v # { ns e k  } 
			EVV.alc k ⊢ p 
			$ p ⊢ p,p0 
			NS_E.set { ns { e p } } ⊢ { ns { e _ } } 
			∎ { ns e p0 }
		§ alc_e # k
			EVV.alc k ⊢ p 
			∎ ast.k_name◂p
		§ add_t # { ns w y } 
			T.newvar_ln y ⊢ i0 
			NS_T.set { ns { w i0 } } ⊢ { ns _ } 
			∎ ns
		§§ slv_ns_e 
			§ asc_m # { { m_ns t_ns } w }
				NS_M.asc { m_ns w } ⊢ { m_ns w o } 
				∎ { { m_ns t_ns } w o }
			§ asc_f # { { m_ns e_ns } w } 
				NS_E.asc { e_ns w } ⊢ { e_ns w o } 
				∎ { { m_ns e_ns } w o } 
			§ get # { { mmv mtv } i_m } 
				MMV.get { mmv i_m } ⊢ { mmv i_m m_ns }
				MEV.get { mtv i_m } ⊢ { mtv i_m t_ns } 
				∎ { { mmv mtv } i_m { m_ns t_ns } }
			§ set # { { mmv mtv } i_m { m_ns t_ns } } 
				MMV.set { mmv i_m m_ns } ⊢ { mmv i_m } 
				MEV.set { mtv i_m t_ns } ⊢ { mtv i_m } 
				∎ { { mmv mtv } i_m }
			§ p0 # { i_m_r ns_m0 ns_e0 ns_t0 } 
				∎ { { ns_m0 ns_e0 } { i_m_r ns_t0 } } 
			§ p1 # { { ns_m0 ns_e0 } { i_m_r ns_t0 } } 
				∎ { i_m_r ns_m0 ns_e0 ns_t0 }
			§ f = slv_ns◂◂{ asc_m asc_f get set p0 p1 } 
			∎∎
			§ slv_ns_e = slv_ns_e.f
		§§ slv_ns_t 
			§ asc_m # { { m_ns t_ns } w }
				NS_M.asc { m_ns w } ⊢ { m_ns w o } 
				∎ { { m_ns t_ns } w o }
			§ asc_f # { { m_ns t_ns } w } 
				NS_E.asc { t_ns w } ⊢ { t_ns w o } 
				∎ { { m_ns t_ns } w o } 
			§ get # { { mmv mtv } i_m } 
				MMV.get { mmv i_m } ⊢ { mmv i_m m_ns } 
				MTV.get { mtv i_m } ⊢ { mtv i_m t_ns } 
				∎ { { mmv mtv } i_m { m_ns t_ns } }
			§ set # { { mmv mtv } i_m { m_ns t_ns } } 
				MMV.set { mmv i_m m_ns } ⊢ { mmv i_m } 
				MTV.set { mtv i_m t_ns } ⊢ { mtv i_m } 
				∎ { { mmv mtv } i_m }
			§ p0 # { i_m_r ns_m0 ns_e0 ns_t0 } 
				∎ { { ns_m0 ns_t0 } { i_m_r ns_e0 } } 
			§ p1 # { { ns_m0 ns_t0 } { i_m_r ns_e0 } } 
				∎ { i_m_r ns_m0 ns_e0 ns_t0 }
			§ f = slv_ns◂◂{ asc_m asc_f get set p0 p1 } 
			∎∎
			§ slv_ns_t = slv_ns_t.f

		§§ slv_ns_m 
			§ asc_m = NS_M.asc 
			§ asc_f = NS_M.asc 
			§ get = MMV.get 
			§ set = MMV.set 
			§ p0 # { i_m_r ns_m0 ns_e0 ns_t0 } 
				∎ { ns_m0 { i_m_r ns_e0 ns_t0 } } 
			§ p1 # { ns_m0 { i_m_r ns_e0 ns_t0 } } 
				∎ { i_m_r ns_m0 ns_e0 ns_t0 }
			§ f = slv_ns◂◂{ asc_m asc_f get set p0 p1 } 
			∎∎
		§ slv_ns_m = slv_ns_m.f
		
§§ slv_type 
		§§ app 
			§ 
				@.al_dta # { N { a l } } 
					lst { N l } ⊢ { N l }
					∎ { N T.dta◂{ %a %l } } 
				@.al_abs # { N { T.p◂a0 y0 } }
					al { N y0 } ⊢ { N y0 } 
					∎ { N T.abs◂{ T.p◂a0 y0 } }
				@.al_var { N i0 } 
					T.TV.lod i0 ⊢ { i0 v0 } 
					$ v0 ⊢
					∐ T.var_ln◂y0 . 
						al { N y0 } ⊢|
					∐ T.var_q◂{ qn qv } .
						_sgn.eq { N qn } ⊢ { { N qn } b } 
						∐ b'=1r . 
							∎ { N T.var◂qv } 
						∐. . 
							∎ { N T.var◂T.p◂i0 }  
					
					∐. T.var_l◂lvl . 
						∎|
				@.atm = T.map_k_atm◂◂{ al_dta al_abs al_var }
				@.al = T.map_k◂◂{ al_dta al_abs al_var } 
				@.lst = T.map_k_lst◂◂{ al_dta al_abs al_var }
			∎∎
		§ @.f_app { k0 k1 } 
				∐ k0 ⊢ T.abs◂{ T.p◂a k0 } . 
					_sgn.mk {} ⊢ N 
					T.newvar_ln k1 ⊢ v 
					T.set_q { N a T.p◂v } ⊢ { N _ } 
					app.al { N k0 } ⊢ { _ k0 } 
					∎ k0
				∐ k0 ⊢ T.dta◂{ d l } . 
					∎ T.dta◂{ d ⟦ k1 < l ⟧ }
				∐ k0 ⊢ T.var◂T.p◂i . 
					T.TV.lod i ⊢ { i v } 
					∐ v ⊢ T.var_ln◂k2 . 
						f_app { k2 k1 } ⊢|
					∐. . 
						∎|
				∐. . 
					∎| 
			§ args_as_i { al a } 
				T.ini_q {} ⊢ i
				BST_s8.set { al { a i } } ⊢ { al { _ o } }
				nnt o ⊢ {}
				∎ al
			§ args_as = lst.fld_l◂◂args_as_i
			§ @.args_ln { { env0 mtv t_ns as al l2 } t } 
				$ as ⊢ 
				∐ _cns◂{ a as } . 
					T.ini_q {} ⊢ i 
					$ i ⊢ i,i0 
					BST_s8.set { al { a i } } ⊢ { al { _ o } }
					nnt o ⊢ {}
					args_ln { { env0 mtv t_ns as al l2 } t } ⊢ { { env0 mtv t_ns al l2 } k } 
					∎ { { env0 mtv t_ns al l2 } T.abs◂{ T.p◂i0 k } }	
						
				∐. _nil◂{} .  
					f { { env0 mtv t_ns al l2 } t } ⊢|	
				@.f = f_atm 
				@.f_atm { ENV a }
					$ a ⊢ 
					∐ T.imp◂{ t0 t1 } .
						f { ENV t0 } ⊢ { ENV t0 } 
						f { ENV t1 } ⊢ { ENV t1 } 
						∎ { ENV T.imp◂{ t0 t1} } 
					∐ T.ct_imp◂{ t0 t1 } . 
						f { ENV t0 } ⊢ { ENV t0 } 
						f { ENV t1 } ⊢ { ENV t1 } 
						∎ { ENV T.ct_imp◂{ t0 t1 } } 
					∐ T.dta◂{ ax tl } . 
						lst.map_l◂◂f { ENV tl } ⊢ { ENV tl }
						∎ { ENV T.dta◂{ ax tl } }
					∐ T.abs◂{ i t } . 
						∎|
					∐. T.var◂v . 
						$ v ⊢ 
						∐ ast.app◂{ t0 t1 } . 
							f { ENV t0 } ⊢ { ENV t0 } 
							f { ENV t1 } ⊢ { ENV t1 } 
							$ ENV ⊢ { env0 mtv t_ns al l2 } 
							f_app { t0 t1 } ⊢ k0 
							$ { env0 mtv t_ns al l2 } ⊢ ENV
							∎ { ENV k0 }
						∐ ast.type_name◂n . 
							$ ENV ⊢ { env0 mtv t_ns al l2 } 
							$ n ⊢ 
							∐ ast.rel_n◂n . 
								∐ n ⊢ ast.fst_n◂w . 
									BST_s8.get { l2 w } ⊢ { l2 { w o } }
									$ o ⊢ 
									∐ _some◂{ as y } .
										_ref.n {} ⊢ T 
										_ref.lc_rpc T ⊢ { T iv } 
										add_t { t_ns w T.var◂T.p◂iv } ⊢ t_ns
										BST_s8.ini {} ⊢ al0
										args_ln { { env0 mtv t_ns as al0 l2 } y } ⊢ { { env0 mtv t_ns _ l2 } k } 
										_ref.i { T T.var_ln◂k } ⊢ v 
										$ T.var◂T.p◂v ⊢ k 
										∎ { { env0 mtv t_ns al l2 } k }
									∐. _none◂{} .
										$ ast.fst_n◂w ⊢ n 
										$ env0 ⊢ { mmv mev m_ns e_ns m_l } 
										slv_ns_t { n { mmv mtv } { m_ns t_ns } m_l } ⊢ { { mmv mtv } { m_ns t_ns } m_l iv }
										$ { mmv mev m_ns e_ns m_l } ⊢ env0 	
										$ T.var◂T.p◂iv ⊢ k 
										∎ { { env0 mtv t_ns al l2 } k }
								
								∐. .
									$ env0 ⊢ { mmv mev m_ns e_ns m_l } 
									slv_ns_t { n { mmv mtv } { m_ns t_ns } m_l } ⊢ { { mmv mtv } { m_ns t_ns } m_l iv }
									$ { mmv mev m_ns e_ns m_l } ⊢ env0 	
									$ T.var◂T.p◂iv ⊢ k 
									∎ { { env0 mtv t_ns al l2 } k }
									
							∐. ast.abs_n◂i .
								UNV_T.f i ⊢ t 
								∎ { { env0 mtv t_ns al l2 } t }
						∐. ast.type_var◂s . 
							$ ENV ⊢ { env0 mtv t_ns al l2 } 
							BST_s8.asc { al s } ⊢ { al { _ o } }
							smt_err◂◂"slv_type" o ⊢ i 
							∎ { { env0 mtv t_ns al l2 } var◂T.p◂i }
							
							
				§ args_T # { { { mmv mev ns_m ns_e m_l } mtv ns_t as } y } 
					BST_s8.ini {} ⊢ al 
					args_as { al as } ⊢ al 
					BST_s8.ini {} ⊢ l2 
					f { { { mmv mev ns_m ns_e m_l } mtv ns_t al l2 } y } ⊢ { { { mmv mev ns_m ns_e m_l } mtv ns_t _ _ } k }
					∎ { { { mmv mev ns_m ns_e m_l } mtv ns_t } k }
			∎∎ 
		§§ slv_n 
			§ re_itr # { l { w i } } 
				∎ _cns◂{ i l } 
     
			§§ RE 
				§ ini = BST_s8.ini 
				§ asc = BST_s8.asc 
				§ set = BST_s8.set 
				§ get = BST_s8.get 
				§ rpc = BST_s8.rpc 
				§ mk_lst = BST_s8.itr◂◂re_itr 
				§ is_empty = BST_s8.is_empty
				∎∎
			§ reg # { w rv_n re }
			  $ rv_n ⊢ rv_n,n0
			  RE.set { re { w n0 } } ⊢ { re _ } 
				_inc rv_n ⊢ rv_n 
			  ∎ { rv_n re }
		  § slv { V n { mmv mev } { m_ns e_ns } m_l } 
				$ n ⊢ 
				∐ ast.abs_n◂x .
					UNV.f { V x } ⊢ { V k } 
					RP.atm_a k ⊢ k 
					∎ { V { mmv mev } { m_ns e_ns } m_l k }
				∐. ast.rel_n◂cn .
			  	slv_ns_e { cn { mmv mev } { m_ns e_ns } m_l } ⊢ { { mmv mev } { m_ns e_ns } m_l i_e }
					∎ { V { mmv mev } { m_ns e_ns } m_l ast.k_name◂i_e }
			§ r_atm # { { wl n } w } 		
				RE.asc { wl w } ⊢ { wl { w o } } 
				nnt_emt { o w } ⊢ w 
				inc_x n ⊢ { i n } 
				$ i ⊢ i,i0
				RE.set { wl { w i } } ⊢ { wl _ } 
				∎ { { wl n } i0 } 
			§ r_ptn = RP.map_l◂◂r_atm 
			§ r_ptn_lst = lst.map_l◂◂r_atm 
			§ tpl_atm { wl w } 		
				ast.of_fst_n w ⊢ w 
				assoc { wl w } ⊢ { wl w o } 
				nnt_emt { o w } ⊢ w 
				T.ini_q {} ⊢ t0
				EVV.alc_var T.var◂T.p◂t0 ⊢ n0
				$ n0 ⊢ n0,n1
				∎ { ⟦ { w _some◂n0 } < wl ⟧ n1 }
			§ tpl_ptn = RP.map_l◂◂tpl_atm 
			§ 
				@.cst { %env0 %c } 
		    $ c ⊢ 
				∐ ast.k_btm◂t . 
					∎ { env0 ast.k_btm◂t }
				∐ ast.k_name◂%cn . 
					$ %env0 ⊢ { V { SCM mmv mev mtv m_ns e_ns t_ns m_l } } 
			  	slv { V cn { mmv mev } { m_ns e_ns } m_l } ⊢ { V { mmv mev } { m_ns e_ns } m_l k }
			  	$ { V { SCM mmv mev mtv m_ns e_ns t_ns m_l } } ⊢ env0 	
		    	∎ { env0 k }
				∐ ast.k_unv◂x . 
					$ %env0 ⊢ { V { SCM mmv mev mtv m_ns e_ns t_ns m_l } } 
					UNV.f { V x } ⊢ { V k } 
			  	$ { V { SCM mmv mev mtv m_ns e_ns t_ns m_l } } ⊢ env0 	
					RP.atm_a k ⊢ k 
					∎ { env0 k }
				∐ ast.k_r64◂x . 
		    	∎ { env0 ast.k_r64◂x }
		    ∐ ast.k_s8◂s . 
			    $ %env0 ⊢ { V { SCM mmv mev mtv m_ns e_ns t_ns m_l } }
			  	SCM.asc { SCM s } ⊢ { SCM { s o } } 
					∐ o ⊢ _some◂p . 
			  	  $ { V { SCM mmv mev mtv m_ns e_ns t_ns m_l } } ⊢ env0 	
						∎ { env0 ast.k_s8◂p }
					∐. . 
						_ref.n {} ⊢ P
						_ref.lc_rpc P ⊢ { P p }
						SCM.set { SCM { s p } } ⊢ { SCM { s _ } } 
						_ref.i { P { s ‹› } } ⊢ p
						$ { V { SCM mmv mev mtv m_ns e_ns t_ns m_l } } ⊢ env0 	
						∎ { env0 ast.k_s8◂p }
	    	∐ ast.k_app◂{ c0 c1 } . 
					ct_ptn { env0 c0 } ⊢ { env0 c0 }
					ct_ptn { env0 c1 } ⊢ { env0 c1 }
					∎ { env0 ast.k_app◂{ c0 c1 } }
				∐ ast.k_pf◂pl . 
					lst.map_l◂◂exp_s8 { env0 pl } ⊢ { env0 pl } 
					∎ { env0 ast.k_pf◂pl }
				∐ ast.k_op_gnr◂K . 
					∎|
				∐ ast.k_op◂K . 
					∎|
				∐ ast.k_fnc◂{ T c } . 
			    $ %env0 ⊢ { V { SCM mmv mev mtv ns_m ns_e ns_t m_l } }
					$ V ⊢ apv
					--BST_s8.ini {} ⊢ a
					tpl_ptn { _nil◂{} T } ⊢ { wl T } 
					tpl_push { ns_e wl } ⊢ { ns_e wl } 
					$ { apv { SCM mmv mev mtv ns_m ns_e ns_t m_l } } ⊢ env0 	
					ct_ptn { env0 c } ⊢ { env0 c }
			    $ %env0 ⊢ { apv { SCM mmv mev mtv ns_m ns_e ns_t m_l } }
					tpl_pop { ns_e wl } ⊢ ns_e 
					$ { apv { SCM mmv mev mtv ns_m ns_e ns_t m_l } } ⊢ env0
					∎ { env0 ast.k_fnc◂{ T c } }
				∐ ast.k_ctr◂K . 
					∎ { env0 ast.k_ctr◂K }
				∐ ast.k_arr◂K . 
					∎|
				∐ ast.k_ply◂{ _ s d } . 
					RE.ini {} ⊢ ns_r_t 
					r_ptn { { ns_r_t %[ 0r ] } s } ⊢ { { ns_r_t n } s }
					csm_src_ptn { { env0 ns_r_t } d } ⊢ { { env0 ns_r_t } d }
					RE.is_empty ns_r_t ⊢ { _ b } 		
					∎ { env0 ast.k_ply◂{ n s d } }
				∐ ast.k_ap◂K . 
					∎| 
				∐ ast.k_t◂{ c { as y } } .
					ct_ptn { env0 c } ⊢ { env0 c } 
					$ %env0 ⊢ { V { SCM mmv mev mtv ns_m ns_e ns_t m_l } }
					$ V ⊢ apv
					slv_type.args_T { { { mmv mev ns_m ns_e m_l } mtv ns_t as } y } ⊢ { { { mmv mev ns_m ns_e m_l } mtv ns_t } k } 
					$ { apv { SCM mmv mev mtv ns_m ns_e ns_t m_l } } ⊢ env0
					∎ { env0 ast.k_t◂{ c k } }
				∐. ast.k_op_axm◂{ a al o } . 
					∐ al ⊢ _nil◂{} .
						∎ { env0 ast.k_op_axm◂{ a ⟦⟧ o } }
					∐. . 
						∎|
			@.src { env0 a }
				$ a ⊢ 
				∐ ast.re_reg◂i .
					∎ { env0 ast.re_reg◂i }
				∐ ast.re_agl◂{ n sp } . 
					ct_ptn { env0 n } ⊢ { env0 n } 
					src_ptn { env0 sp } ⊢ { env0 sp } 
					∎ { env0 ast.re_agl◂{ n sp } }				
				∐. ast.re_v◂c .
					ct_ptn { env0 c } ⊢ { env0 c }
					∎ { env0 ast.re_v◂c }
			@.src_ptn = RP.map_l◂◂src 
			@.exp_s8 { env0 e } 
				$ e ⊢ 
				∐ ast.exp_s8_cst◂c . 
					ct_ptn { env0 c } ⊢ { env0  c } 
					∎ { env0 ast.exp_s8_cst◂c }
				∐ ast.exp_s8_idx◂{ p i } . 
					∐ p ⊢ ast.fmt_p◂{} .
						∎| 
					∐. . 
						∎ { env0 ast.exp_s8_idx◂{ p i } }
				∐. ast.exp_s8_for◂{ i c } . 
					ct_ptn { env0 c } ⊢ { env0 c } 
				  ∎ { env0 ast.exp_s8_for◂{ i c } }
				@.ct_ptn = RP.map_l◂◂cst 
			@.csm_src { { env0 re } a }
				$ a ⊢ 
				∐ ast.re_reg◂w .
					RE.get { re w } ⊢ { re { w o } } 
					$ o ⊢ 
					∐ _some◂i . 
						∎ { { env0 re } ast.re_reg◂i }
					∐. _none◂{} . 
						^ w ⊢ _,e
							"csm_src 1:" 0' //
						_emt.f e ⊢ _ 
						∎| 
				∐ ast.re_agl◂{ n sp } . 
					ct_ptn { env0 n } ⊢ { env0 n } 
					csm_src_ptn { { env0 re } sp } ⊢ { { env0 re } sp } 
					∎ { { env0 re } ast.re_agl◂{ n sp } }				
				∐. ast.re_v◂c .
					ct_ptn { env0 c } ⊢ { env0 c }
					∎ { { env0 re } ast.re_v◂c }
			@.csm_src_lst = lst.map_l◂◂csm_src 
			@.csm_src_ptn_lst = lst.map_l◂◂csm_src_ptn 
			@.csm_src_ptn = RP.map_l◂◂csm_src
		§ ct_ptn_lst = lst.map_l◂◂ct_ptn 
		§ 
			@.crt_mtc { { env0 n re dl } a }  
				$ a ⊢ 
				∐ ast.re_reg◂w .
					RE.asc { re w } ⊢ { re { w o } } 
					nnt_emt { o w } ⊢ w 
					$ n ⊢ n,n0
					reg { w n re } ⊢ { n re } 
					∎ { { env0 n re dl } ast.re_reg◂n0 }
				∐ ast.re_v◂_ .
					$ n ⊢ n,n0,n1
					_inc n ⊢ n 							
					∎ { { env0 n re ⟦ n1 < dl ⟧ } ast.re_reg◂n0 }
				∐. ast.re_agl◂{ cn ap } . 
					crt_mtc_ptn { { env0 n re dl } ap } ⊢ { { env0 n re dl } ap } 
					ct_ptn { env0 cn } ⊢ { env0 cn } 
					∎ { { env0 n re dl } ast.re_agl◂{ cn ap } }
				@.crt_mtc_ptn = RP.map_l◂◂crt_mtc 
			§ crt_mtc_ptn_lst = lst.map_l◂◂crt_mtc_ptn 
			§ crt_mtc_lst = lst.map_l◂◂crt_mtc
			§ 
				@.crt_mtc_al { { env0 n re dl al adl } a }  
					$ a ⊢ 
					∐ ast.re_reg◂w .
						RE.asc { re w } ⊢ { re { w o } } 
						nnt_emt { o w } ⊢ w 
						$ n ⊢ n,n0
						reg { w n re } ⊢ { n re } 
						∎ { { env0 n re dl al adl } n0 }
					∐ ast.re_v◂_ .
						$ n ⊢ n,n0,n1
						_inc n ⊢ n 							
						∎ { { env0 n re ⟦ n1 < dl ⟧ al adl } n0 }
					∐. ast.re_agl◂{ cn ap } . 
						crt_mtc_ptn { { env0 n re adl } ap } ⊢ { { env0 n re adl } ap } 
						ct_ptn { env0 cn } ⊢ { env0 cn } 
						$ n ⊢ n,n0,n1 
						_inc n ⊢ n 
						∎ { { env0 n re dl ⟦ { n1 cn ap } < al ⟧ adl } n0 }
						
				@.crt_mtc_ptn_al = RP.map_l◂◂crt_mtc_al
		§ crt_mtc_ptn_lst_al = lst.map_l◂◂crt_mtc_ptn_al 
		§ crt_mtc_lst_al = lst.map_l◂◂crt_mtc_al
		
		
		§ 
			@.csm_tpl { re w }
				RE.get { re w } ⊢ { re { w o } } 
				∐ o ⊢ _some◂i . 
					∎ { re i }
				∐. . 
					^ w ⊢ _,e
						"csm_tpl 1:" 0' //
					_emt.f e ⊢ _ 
					∎| 
				
		§ csm_tpl_lst = lst.map_l◂◂csm_tpl 
		§ csm_tpl_ptn = RP.map_l◂◂csm_tpl
		§ csm_tpl_ptn_lst = lst.map_l◂◂csm_tpl_ptn 
		
		§ dlt_i # { { i dl } d } 
			_inc i ⊢ i 
			∎ { i ⟦ RP.atm◂ast.re_reg◂d < dl ⟧ } 
		§ dlt { d dl lc } 
			lst.fld_l◂◂dlt_i { { %[ 0r ] ⟦⟧ } dl } ⊢ { i dl } 
			∐ i'=0r .
				∎ lc
			∐. . 
				∎ ast.seq◂{ { d RP.rcd◂dl RP.unt◂{} } lc }
		§ iso_i # { { n sl ml } { i c p } }
			_inc n ⊢ n 
			∎ { n ⟦ RP.atm◂i < sl ⟧ ⟦ RP.atm◂ast.re_agl◂{ c p } < ml ⟧ } 
		§ iso_rl { re adl al } 
			lst.fld_l◂◂iso_i { { %[ 0r ] ⟦⟧ ⟦⟧ } al } ⊢ { n sl ml } 
			∐ n'=0r . 
				∎ { re ‹› }
			∐. .
				RE.mk_lst { re ⟦⟧ } ⊢ { re rl } 
				$ adl ⊢ adl,adl0 
				rev_apnd { adl0 rl } ⊢ rl 
				$ ast.mtc_id◂{ RP.rcd◂sl RP.rcd◂ml } ⊢ t
				∎ { re ‹ { adl rl t } › }
		§ iso { o lc } 
			∐ o ⊢ _some◂{ adl rl t } . 
				dlt { dlt_ap_k◂{} adl lc } ⊢ lc
				∎ ast.mtc◂ast.na_s◂{ t ast.na_e◂{ rl lc } }
			∐. . 
				∎ lc 
		§ test_var { env0 n re v } 
			$ v ⊢ 
			∐ ast.test_var◂w . 
				RE.asc { re w } ⊢ { re { w o } }
				smt_err◂◂"test_var:0" o ⊢ i 
				$ ast.test_var◂i ⊢ v 
  			∎ { env0 n re v }
			∐. ast.test_cst◂c .  
				ct_ptn { env0 c } ⊢ { env0 c }
				$ ast.test_cst◂c ⊢ v 
				∎ { env0 n re v }
		§ op_line # { { env0 n re } ll }
			$ ll ⊢ { o s d }
			ct_ptn { env0 o } ⊢ { env0 o } 
			csm_src_ptn { { env0 re } s } ⊢ { { env0 re } s }
			crt_mtc_ptn_al { { env0 n re ⟦⟧ ⟦⟧ ⟦⟧ } d } ⊢ { { env0 n re dl al adl } d }
			∎ { { env0 n re dl al adl } { o s d } }
		§ mtc_test { { env0 n re dl } t }
			$ t ⊢ 
			∐ ast.mtc_id◂{ sp mp } . 
				csm_tpl_ptn { re sp } ⊢ { re sp } 
				crt_mtc_ptn { { env0 n re dl } mp } ⊢ { { env0 n re dl } mp }
				∎ { { env0 n re dl } ast.mtc_id◂{ sp mp } } 
			∐. ast.mtc_test◂{ tt v0 v1 } .  
				test_var { env0 n re v0 } ⊢ { env0 n re v0 } 
				test_var { env0 n re v1 } ⊢ { env0 n re v1 } 
				∎ { { env0 n re dl } ast.mtc_test◂{ tt v0 v1 } }  
		§	@.tj { { env0 n re } v } 
			$ v ⊢ 
			∐ _cns◂{ lc v } . 
				RE.rpc re ⊢ { re rex } 
				r { { env0 n rex } lc } ⊢ { { env0 n _ } lc } 
				tj { { env0 n re } v } ⊢ { { env0 n re } v } 
				∎ { { env0 n re } ⟦ lc < v ⟧ }
			∐. _nil◂{} . 
				∎ { { env0 n re } ⟦⟧ }
				
		@.r { { env0 n re } lc }
			$ lc ⊢
			∐ ast.jmp◂{ en x } . 
				ct_ptn { env0 en } ⊢ { env0 en } 
				csm_src_ptn { { env0 re } x } ⊢ { { env0 re } x } 
				∎ { { env0 n re } ast.jmp◂{ en x } } 
			∐ ast.seq◂{ ll lc } .
				op_line { { env0 n re } ll } ⊢ { { env0 n re dl al adl } ll } 
				iso_rl { re adl al } ⊢ { re o } 
				r { { env0 n re } lc } ⊢ { { env0 n re } lc }
				iso { o lc } ⊢ lc
				dlt { dlt_ap_k◂{} dl lc } ⊢ lc
				∎ { { env0 n re } ast.seq◂{ ll lc } }
				
			∐ ast.mtc◂lm .
				lc_mtc { { env0 n re ⟦⟧ } lm } ⊢ { { env0 n re } lm }
				∎ { { env0 n re } ast.mtc◂lm } 
			∐ ast.op_exh◂{ op sp dp lf lx } . 
				ct_ptn { env0 op } ⊢ { env0 op } 
				csm_src_ptn { { env0 re } sp } ⊢ { { env0 re } sp } 
				RE.rpc re ⊢ { re re0 } 
				crt_mtc_ptn_al { { env0 n re ⟦⟧ ⟦⟧ ⟦⟧ } dp } ⊢ { { env0 n re dl al adl } dp }
				iso_rl { re adl al } ⊢ { re o } 
				r { { env0 n re } lf } ⊢ { { env0 n re } lf } 
				iso { o lf } ⊢ lf 
				dlt { dlt_ap_k◂{} dl lf } ⊢ lf 
				r { { env0 n re0 } lx } ⊢ { { env0 n re0 } lx } 
				∎ { { env0 n re } ast.op_exh◂{ op sp dp lf lx } } 
			∐. ast.tj◂{ x v r } .
				RE.asc { re x } ⊢ { re { _ o } } 
				smt_err◂◂"test_var_T" o ⊢ i 
				RE.rpc re ⊢ { re rex } 
				tj { { env0 n rex } v } ⊢ { { env0 n _ } v } 				 
  			r { { env0 n re } r } ⊢ { { env0 n re } r }
				∎ { { env0 n re } ast.tj◂{ i v r } }
				
		@.lc_mtc { { env0 n re dl } m } 
			$ m ⊢ 
			∐ ast.na_e◂{ _ lc } .	
				RE.mk_lst { re ⟦⟧ } ⊢ { re rl } 
				$ dl ⊢ dl,dl0 
				rev_apnd { dl0 rl } ⊢ rl 
				r { { env0 n re } lc } ⊢ { { env0 n re } lc } 
				dlt { dlt_ap_k◂{} dl lc } ⊢ lc 
				∎ { { env0 n re } ast.na_e◂{ rl lc } } 
			∐ ast.na_s◂{ t m } .
				mtc_test { { env0 n re dl } t } ⊢ { { env0 n re dl } t } 
				lc_mtc { { env0 n re dl } m } ⊢ { { env0 n re } m }
				∎ { { env0 n re } ast.na_s◂{ t m } }
			∐. ast.na_p◂{ t m0 m1 } . 
				RE.rpc re ⊢ { re re0 } 
				$ dl ⊢ dl,dl0 
				mtc_test { { env0 n re dl } t } ⊢ { { env0 n re dl } t } 
				lc_mtc { { env0 n re dl } m0 } ⊢ { { env0 n re } m0 }
				lc_mtc { { env0 n re0 dl0 } m1 } ⊢ { { env0 n _ } m1 }
				∎ { { env0 n re } ast.na_p◂{ t m0 m1 } }
				
		∎∎	
		§§ slv_gl 
		§§ RV = ast.RV 
		§ 
			@.f0_atm { { v n } a } 
				$ a ⊢ 
				∐ ast.re_reg◂i .
					$ n ⊢ n,n0,n1 
					_inc n ⊢ n 
					RV.set { v { i n0 } } ⊢ { v { i o } } 
					nnt o ⊢ {} 
					∎ { { v n } ast.re_reg◂n1 }				
				∐ ast.re_agl◂{ e sp } . 
					f0 { { v n } sp } ⊢ { { v n } sp } 
					∎ { { v n } ast.re_agl◂{ e sp } }				
				∐. ast.re_v◂c .
					∎ { { v n } ast.re_v◂c }
			@.f0 = RP.map_l◂◂f0_atm 
		§ f1_atm { { v n l } i } 
			RV.get { v i } ⊢ { v { i o } } 
			$ o ⊢ 
			∐ _some◂j . 
				∎ { { v n l } j }
			∐. _none◂{} . 
				$ n ⊢ n,n0,n1 
				_inc n ⊢ n 
				∎ { { v n ⟦ RP.atm◂ast.re_reg◂n0 < l ⟧ } n1 }
		§ f1 = RP.map_l◂◂f1_atm 
		§ f2_atm { { v n l ld } i } 
			RV.get { v i } ⊢ { v { i o } } 
			$ o ⊢ 
			∐ _some◂j . 
				∎ { { v n l ld } j }
			∐. _none◂{} . 
				$ n ⊢ n,n0,n1 
				_inc n ⊢ n 
				∎ { { v n ⟦ RP.atm◂ast.re_reg◂n0 < l ⟧ ⟦ RP.atm◂i < ld ⟧ } n1 }
		§ f2 = RP.map_l◂◂f2_atm 
		§ ip0 # { p sp }
			RV.ini {} ⊢ v 
			f0 { { v %[ 0r ] } sp } ⊢ { { v n } sp } 
			f1 { { v n ⟦⟧ } p } ⊢ { { _ nc l } p } 
			∎ RP.atm◂ast.k_ply◂{ nc p RP.cns2◂{ RP.rcd◂l sp } }
		§ ip1 # { p sp }
			RV.ini {} ⊢ v 
			f0 { { v %[ 0r ] } sp } ⊢ { { v n } sp } 
			f2 { { v n ⟦⟧ ⟦⟧ } p } ⊢ { { _ nc l dl } p } 
			∎ { RP.atm◂ast.k_ply◂{ nc p RP.cns2◂{ RP.rcd◂l sp } } RP.rcd◂dl }
		§ to_src # { l i } 
			∎ ⟦ RP.atm◂ast.re_reg◂i < l ⟧ 
		§ to_tpl # { l i } 
			∎ ⟦ RP.atm◂i < l ⟧ 
		
		§§ ip_m 
			§ 
				@.f0_atm { { v n } i } 
					$ n ⊢ n,n0,n1 
					_inc n ⊢ n 
					RV.set { v { i n0 } } ⊢ { v { i o } } 
					nnt o ⊢ {} 
					∎ { { v n } n1 }				
				@.f0 = RP.map_l◂◂f0_atm 
			§ f2_atm { { v n l ld } i } 
				RV.get { v i } ⊢ { v { i o } } 
				$ o ⊢ 
				∐ _some◂j . 
					∎ { { v n l ld } ast.re_reg◂j }
				∐. _none◂{} . 
					$ n ⊢ n,n0,n1 
					_inc n ⊢ n 
					∎ { { v n ⟦ RP.atm◂n0 < l ⟧ ⟦ RP.atm◂i < ld ⟧ } ast.re_reg◂n1 }
			§ f2 = RP.map_l◂◂f2_atm 
			§ 
				@.f_m { { n l ld } m }
					$ m ⊢ 
					∐ ast.re_agl◂{ e p } . 
						f_mp { { n l ld } p } ⊢ { { n l ld } p } 
						∎ { { n l ld } ast.re_agl◂{ e p } }
					∐ ast.re_v◂_ . 
						∎| 
					∐. ast.re_reg◂r . 
						inc_x n ⊢ { j n }
						$ j ⊢ j,j0
						∎ { { n ⟦ RP.atm◂j < l ⟧ ⟦ RP.atm◂r < ld ⟧ } ast.re_reg◂j0 }
				@.f_mp = RP.map_l◂◂f_m
			§ f { dp0 xp mp }
				RV.ini {} ⊢ v 
				f0 { { v %[ 0r ] } xp } ⊢ { { v n } xp }
				f2 { { v n ⟦⟧ ⟦⟧ } dp0 } ⊢ { { _ nc l ld } dp0 }
				$ RP.atm◂ast.k_ply◂{ nc RP.cns2◂{ RP.rcd◂l xp } dp0 } ⊢ c0
				f_mp { { %[ 1r ] ⟦⟧ ⟦⟧ } mp } ⊢ { { nc lm ldm } mp } 
				$ RP.atm◂ast.k_ply◂{ nc RP.cns2◂{ RP.atm◂%[ 0r ] RP.rcd◂lm } RP.cns2◂{ RP.atm◂ast.re_reg◂%[ 0r ] mp } } ⊢ c1 
				$ sqc_k◂{ c1 c0 } ⊢ cr 
				$ RP.cns2◂{ RP.rcd◂ld RP.rcd◂ldm } ⊢ dp1 
				∎ { dp1 cr }
			
			§ ft_im_atm { { { r0 s0 } v n l } i } 
				∐ r0'=i' . 
					$ s0 ⊢ s0,s00 
					∎ { { { r0 s0 } v n l } s00 }
				∐. .
					$ n ⊢ n,n0,n1 
					_inc n ⊢ n 
					∎ { { { r0 s0 } v n ⟦ RP.atm◂ast.re_reg◂n0 < l ⟧ } n1 }
			§ ft_im = RP.map_l◂◂ft_im_atm 

			§ ft_atm { { { r0 s0 } { r1 s1 } v n l } i } 
				∐ r0'=i' .
					$ s0 ⊢ s0,s00 
					∎ { { { r0 s0 } { r1 s1 } v n l } s00 }
				∐ r1'=i' .
					$ s1 ⊢ s1,s10 
					∎ { { { r0 s0 } { r1 s1 } v n l } s10 }
				∐. .
					$ n ⊢ n,n0,n1 
					_inc n ⊢ n 
					∎ { { { r0 s0 } { r1 s1 } v n ⟦ RP.atm◂ast.re_reg◂n0 < l ⟧ } n1 }
			§ ft = RP.map_l◂◂ft_atm 

			§ ft_c_atm # { { v n l } i } 
				$ n ⊢ n,n0,n1 
				_inc n ⊢ n 
				∎ { { v n ⟦ RP.atm◂ast.re_reg◂n0 < l ⟧ } n1 }
			§ ft_c = RP.map_l◂◂ft_c_atm 

			§ f_t { dp v0 v1 }
				$ v0 ⊢ 
				∐ ast.test_cst◂c0 . 
					$ v1 ⊢ 
					∐ ast.test_cst◂c1 . 
						RV.ini {} ⊢ v 
						$ dp ⊢ dp,dp0 
						ft_c { { v %[ 0r ] ⟦⟧ } dp0 } ⊢ { { _ nc l } dp0 }
						$ RP.atm◂ast.k_ply◂{ nc dp0 RP.cns2◂{ RP.cns2◂{ RP.atm◂ast.re_v◂c0 RP.atm◂ast.re_v◂c1 } RP.rcd◂l } } ⊢ c 
						∎ { dp c }
					∐. ast.test_var◂r1 . 
						RV.ini {} ⊢ v 
						$ dp ⊢ dp,dp0 
						ft_im { { { r1 %[ 0r ] } v %[ 1r ] ⟦⟧ } dp0 } ⊢ { { _ _ nc l } dp0 }
						$ RP.atm◂ast.k_ply◂{ nc dp0 RP.cns2◂{ RP.cns2◂{ RP.atm◂ast.re_v◂c0 RP.atm◂ast.re_reg◂%[ 0r ]  } RP.rcd◂l } } ⊢ c 
						∎ { dp c }
				∐. ast.test_var◂r0 . 
					$ v1 ⊢ 
					∐ ast.test_cst◂c1 . 
						RV.ini {} ⊢ v 
						$ dp ⊢ dp,dp0 
						ft_im { { { r0 %[ 0r ] } v %[ 1r ] ⟦⟧ } dp0 } ⊢ { { _ _ nc l } dp0 }
						$ RP.atm◂ast.k_ply◂{ nc dp0 RP.cns2◂{ RP.cns2◂{ RP.atm◂ast.re_reg◂%[ 0r ] RP.atm◂ast.re_v◂c1 } RP.rcd◂l } } ⊢ c 
						∎ { dp c }
					∐. ast.test_var◂r1 . 
						RV.ini {} ⊢ v 
						$ dp ⊢ dp,dp0 
						ft { { { r0 %[ 0r ] } { r1 %[ 1r ] } v %[ 2r ] ⟦⟧ } dp0 } ⊢ { { _ _ _ nc l } dp0 }
						$ RP.atm◂ast.k_ply◂{ nc dp0 RP.cns2◂{ RP.cns2◂{ RP.atm◂ast.re_reg◂%[ 0r ] RP.atm◂ast.re_reg◂%[ 1r ] } RP.rcd◂l } } ⊢ c 
						∎ { dp c }
							
			∎∎
		§ id0◂d = { id_k◂{} RP.atm◂ast.re_reg◂%[ 0r ]  d } 
		§ 
			@.r { { q pd } lc } 
				$ lc ⊢
				∐ ast.jmp◂{ en x } . 
					ip0 { pd x } ⊢ k0 
					∎ seq_k◂{ q seq_k◂{ ctr◂k0 seq_k◂{ dlt_ap_id◂{} en } } }
				∐ ast.seq◂{ { en s d } lc } .
					ip1 { pd s } ⊢ { k0 d0 } 
					$ seq_k◂{ q seq_k◂{ ctr◂k0 id_par◂en } } ⊢ q 
					$ RP.cns2◂{ d0 d } ⊢ pd
					r { { q pd } lc } ⊢| 
				∐ ast.mtc◂m .
					mtc { pd m } ⊢ m 
					∎ seq_k◂{ q oom_k◂m } 
				∐ ast.op_exh◂{ op sp dp lf lx } . 
					∎|
				∐. ast.tj◂{ x j r } .
					RV.ini {} ⊢ v 
					$ pd ⊢ dp,dp0 
					ip_m.ft_im { { { x %[ 0r ] } v %[ 1r ] ⟦⟧ } dp0 } ⊢ { { _ _ nc l } dp0 }	
					$ RP.atm◂ast.k_ply◂{ nc dp0 RP.cns2◂{ RP.atm◂ast.re_reg◂%[ 0r ] RP.rcd◂l } } ⊢ c 
					$ dp ⊢ dp,dp0 
					r { { id_k◂{} dp0 } r } ⊢ or 
					tj { { dp or } j } ⊢ j 
					∎ seq_k◂{ q oom_k◂tj_k◂{ c j } }
			@.tj { { dp r } l } 
				$ l ⊢ 
				∐ _nil◂{} . 
					∎ tjn_k◂moo_k◂r
				∐. _cns◂{ lc l } .
					$ dp ⊢ dp,dp0 
					tj { { dp0 r } l } ⊢ j 
					r { { id_k◂{} dp } lc } ⊢ o 
					∎ tjc_k◂{ moo_k◂o j } 
			@.mtc { pd m } 
				$ m ⊢ 
				∐ ast.na_e◂{ _ lc } . 
					r { { id_k◂{} pd } lc } ⊢ o 
					∎ moo_k◂o 
				∐ ast.na_s◂{ t lm } . 
					$ t ⊢ 
					∐ ast.mtc_id◂{ p sp } . 
						ip_m.f { pd p sp } ⊢ { pd c } 
						mtc { pd lm } ⊢ lm 
						∎ mcp_k◂{ mop_k◂c lm mcn_k◂{} } 
					∐. ast.mtc_test◂{ mt v0 v1 } . 
						ip_m.f_t { pd v0 v1 } ⊢ { pd c } 
						mtc { pd lm } ⊢ lm0 
						$ mcn_k◂{} ⊢ lm1
						$ mt ⊢ 
						∐ ast.test_eq◂{} . 
							∎ mcp_k◂{ mt_e_k◂c lm0 lm1 }
						∐ ast.test_neq◂{} . 
							∎ mcp_k◂{ mt_ne_k◂c lm0 lm1 }
						∐. ast.test_cmp◂{} . 
							∎ mcp_k◂{ mt_le_k◂c lm0 lm1 }
				∐. ast.na_p◂{ t lm0 lm1 } . 
					$ t ⊢ 
					∐ ast.mtc_id◂{ p sp } . 
						$ pd ⊢ pd,pd0 
						ip_m.f { pd p sp } ⊢ { pd c } 
						mtc { pd lm0 } ⊢ lm0 
						mtc { pd0 lm1 } ⊢ lm1
						∎ mcp_k◂{ mop_k◂c lm0 lm1 }
					∐. ast.mtc_test◂{ mt v0 v1 } . 
						ip_m.f_t { pd v0 v1 } ⊢ { pd c } 
						$ pd ⊢ pd,pd0 
						mtc { pd lm0 } ⊢ lm0 
						mtc { pd0 lm1 } ⊢ lm1
						$ mt ⊢ 
						∐ ast.test_eq◂{} . 
							∎ mcp_k◂{ mt_e_k◂c lm0 lm1 }
						∐ ast.test_neq◂{} . 
							∎ mcp_k◂{ mt_ne_k◂c lm0 lm1 }
						∐. ast.test_cmp◂{} . 
							∎ mcp_k◂{ mt_le_k◂c lm0 lm1 }
		∎∎
	
	
		§§ slv 
			§ reg # { lv n0 rv }
				T.ini_l lv ⊢ { lv t0 } 
				$ t0 ⊢ t0,t0_0 
				$ T.var◂T.p◂t0_0 ⊢ y 
				ast.RV.set { rv { n0 t0 } } ⊢ { rv { n0 o } } 
				nnt o ⊢ {} 
				∎ { lv n0 rv y }
		§ exc_tpl # { { lv el } i } 
			T.newvar_l lv  ⊢ {  lv y1 } 
			$ y1 ⊢ y1,y10 
			EVV.x { ast.k_v◂y10 i } ⊢ { p i } 
			$ i ⊢ i,i0 
			$ ⟦ { i0 p } < el ⟧ ⊢ el 
			∎ { { lv el } i y1 }
		§ exc_tpl = T.map_l_x◂◂exc_tpl 
		§ pop_tpl # { {} { i p } } 
			EVV.u { i p } ⊢ _
			∎ {}
		§ pop_tpl # l 
			lst.fld_l◂◂pop_tpl { {} l } ⊢|
			
		§ set_tpl # { { lv vv } n0 } 
			lod_q { vv n0 } ⊢ { vv n0 v }
			$ T.var◂T.p◂v ⊢ y 
			∎ { { lv vv } n0 y } 
		
		§ set_tpl_ptn = T.map_l_x◂◂set_tpl 
		 
		§ op_lv◂◂F # { al lv apv } 
			F lv ⊢ lv 
			∎ { al lv apv }
		§ inc_E = op_lv◂◂_inc 
		§ dec_E = op_lv◂◂_dec
		§ slv_axm { al lv i o } 
			$ o ⊢ 
			∐ ast.ap_some◂t . 
				inst { %[ 1r ] t } ⊢ { _ t } 
				$ t ⊢ t,t0,t1 
				$ ⟦ t1 < al ⟧ ⊢ al 
				∎ { al lv i ast.ap_some◂t t0 }  
			∐ ast.ap_none◂{} .
				$ i ⊢ i,i0 
				EX.slv i0 ⊢ t
				inst { %[ 1r ] t } ⊢ { _ t } 
				$ t ⊢ t,t0,t1 
				$ ⟦ t1 < al ⟧ ⊢ al 
				∎ { al lv i ast.ap_some◂t t0 }
			∐. ast.pp_none◂{} .
				$ i ⊢ i,i0 
				EX.slv i0 ⊢ t 
				inst { lv t } ⊢ { lv t } 
				∎ { al lv i ast.pp_none◂{} t }
		§ 
			@.ct_abs { E y l }
				$ l ⊢ 
				∐ _cns◂{ c l } . 
					ct_ptn { E c } ⊢ { E c yc } 
					ct_abs { E TX.t_ct_imp◂{ yc y } l } ⊢ { E y l } 
					∎ { E y ⟦ c < l ⟧ }
				∐. _nil◂{} . 
					∎ { E y ⟦⟧ }
			@.cst_ply_F # lv 
				T.ini_l lv ⊢ { lv t0 } 
				∎ { lv t0 }
			@.cst_ply # { { nc _ rv0 } { E p0 p1 } } 
				$ E ⊢ { al lv apv } 
				set_tpl_ptn { { lv rv0 } p0 } ⊢ { { lv rv0 } p0 y } 
				$ { al lv apv } ⊢ E
				lod_src_ptn { { E rv0 } p1 } ⊢ { { E _ } p1 yp } 
				∎ { nc E p0 p1 y yp }
			
			@.cst { E c } 
				$ c ⊢ 
				∐ ast.k_name◂i . 
					$ E ⊢ { al lv apv } 
					EVV.lod i ⊢ { i p } 
					$ p ⊢ 
					∐ ast.k_p◂c . 
						$ { al lv apv } ⊢ E 
						ct_ptn { E c } ⊢| 
					∐. ast.k_v◂v .
						inst { lv v } ⊢ { lv y } 
						∎ { { al lv apv } RP.atm◂ast.k_name◂i y }
				∐ ast.k_btm◂t . 
					$ E ⊢ { al lv apv } 
					newvar_l lv ⊢ { lv yy }
					$ { al lv apv } ⊢ E 
					∎ { E RP.atm◂ast.k_btm◂t yy } 
				∐ ast.k_unv◂x . 
					$ E ⊢ { al lv apv }
					UNV.f { apv x } ⊢ { apv c } 
					$ { al lv apv } ⊢ E 
					ct_ptn { E c } ⊢|
				∐ ast.k_r64◂x . 
					∎ { E RP.atm◂ast.k_r64◂x TX.r64◂{} }
				∐ ast.k_s8◂s . 
					∎ { E RP.atm◂ast.k_s8◂s TX.s8◂{} } 
				∐ ast.k_app◂{ c0 c1 } . 
					inc_E E ⊢ E 
					ct_ptn { E c0 } ⊢ { E c0 y0 } 
					ct_ptn { E c1 } ⊢ { E c1 y1 } 
					$ E ⊢ { al lv apv } 
					newvar_l lv  ⊢ { lv yy }
					$ yy ⊢ yy,yy0 
					$ y1 ⊢ y1,y10 
					T.unify.f { ct_imp◂{ y1 yy0 } y0 } ⊢ {}  
					_dec lv ⊢ lv 
					gen { lv y10 } ⊢ {  lv _ } 
					gen { lv yy } ⊢ {  lv yy } 
					inst { lv yy } ⊢ { lv yy }  
					∎ { { al lv apv } RP.atm◂ast.k_app◂{ c0 c1 } yy }
				∐ ast.k_ctr◂{ i n v } . 
					$ E ⊢ { al lv apv } 
					$ v ⊢ v,v0 
					inst { lv var◂T.p◂%v0 } ⊢ { lv y } 
					∎ { { al lv apv } RP.atm◂ast.k_ctr◂{ i n v } y }
				∐ ast.k_op_axm◂{ i l o } . 
					$ E ⊢ { al lv apv } 
					$ i ⊢ i,i0 
					slv_axm { al lv i o } ⊢ { al lv i o y }
					newvar_l lv  ⊢ {  lv yy }
					$ yy ⊢ yy,yy0 
					ct_abs { { al lv apv } yy l } ⊢ { { al lv apv } yy l } 
					$ y ⊢ y,y0,y1 
					T.unify.f { y yy } ⊢ {} 
					$ { al lv apv } ⊢ E 
					∎ { E RP.atm◂ast.k_op_axm◂{ i l o } yy0 }
				∐ ast.k_ap◂{ p t } .
					$ E ⊢ { al lv apv } 
					inst { %[ 1r ] t } ⊢ { _ t }
					$ t ⊢ t,t0,t1 
					$ { ⟦ t1 < al ⟧ lv apv } ⊢ E 
					∎ { E RP.atm◂ast.k_ap◂{ p t } t0 }
				∐ ast.k_arr◂v .
					∎| 
				∐ ast.k_op◂{ ib lc v } . 
					$ E ⊢ { al lv apv } 
					inst { %[ 1r ] var◂T.p◂v } ⊢ { _ y } 
					$ y ⊢ y,y0,y1 
					T.newvar_ln y0 ⊢ v0
					∎ { { ⟦ y1 < al ⟧ lv apv } RP.atm◂ast.k_op◂{ ib lc v0 } y }
				∐ ast.k_op_gnr◂{ g ib lc { v0 v1 } } . 
					$ E ⊢ { al lv apv } 
					_sgn.mk {} ⊢ N 
					inst.al { { N %[ 1r ] } v0 } ⊢ { { N _ } y0 } 
					inst.al { { N %[ 1r ] } v1 } ⊢ { { _ _ } y1 } 
					$ y0 ⊢ y0,y00,y01 
					$ y1 ⊢ y1,y10,y11
					$ TX.t_ct_imp◂{ y01 y11 } ⊢ yx 
					∎ { { ⟦ y0 y1 < al ⟧ lv apv } RP.atm◂ast.k_op_gnr◂{ g ib lc { y00 y10 } } yx }
				∐ ast.k_fnc◂{ T f } . 
					$ E ⊢ { al lv apv } 
					_inc lv ⊢ lv 
					exc_tpl { { lv  ⟦⟧ } T } ⊢ { { lv el } T yT } 
					ct_ptn { { al lv apv } f } ⊢ { { al lv apv } f yf } 
					pop_tpl el ⊢ {} 
					_dec lv ⊢ lv 
					gen { lv yT } ⊢ { lv yT } 
					gen { lv yf } ⊢ { lv yf } 
					$ TX.t_ct_imp◂{ yT yf } ⊢ y,y0
					inst { lv y } ⊢ { lv y }
					$ { al lv apv } ⊢ E 
					∎ { E RP.atm◂ast.k_fnc◂{ T f } y }
					
				∐ ast.k_pf◂pl . 
					$ E ⊢ { al lv apv } 
					newvar_l lv  ⊢ { lv w } 
					$ { al lv apv } ⊢ E
					pf { { E w } pl } ⊢ { { E w } pl }
					∎ { E RP.atm◂ast.k_pf◂pl TX.pf◂w }
				∐ ast.k_ply◂{ nc p0 p1 } . 
					$ E ⊢ { al lv apv } 
					_inc lv ⊢ lv 
					$ lv ⊢ lv,lv0
					_mk_stk_F◂◂{ cst_ply cst_ply_F } { { nc lv0 } { { al lv apv } p0 p1 } } ⊢ { nc { al lv apv } p0 p1 y yp } 
					_dec lv ⊢ lv 
					gen { lv y } ⊢ { lv y } 
					gen { lv yp } ⊢ { lv yp } 
					$ TX.t_ctr◂{ y yp } ⊢ y 
					inst { lv y } ⊢ { lv y }
					∎ { { al lv apv } RP.atm◂ast.k_ply◂{ nc p0 p1 } y }
					
				∐. ast.k_t◂{ c y } .
					ct_ptn { E c } ⊢ { E c yc }
					$ E ⊢ { al lv apv } 
					$ y ⊢ y,y0 
					inst { lv y0 } ⊢ { lv y0 }
					$ yc ⊢ yc,yc0 
					T.unify.f { yc0 y0 } ⊢ {} 
					∎ { { al lv apv } RP.atm◂ast.k_t◂{ c y } yc } 
				
			@.ct_ptn = T.map_l_x_atm◂◂cst
			@.pf_i { { E w } p }
				exp_s8 { E p } ⊢ { E p y } 
				$ y ⊢ 
				∐ _some◂{ i t } .
					$ E ⊢ { al lv apv } 
					T.inst_prd { lv i t } ⊢ { lv r } 
					$ w ⊢ w,w0 
					T.unify.f { w0 TX.rcd◂r } ⊢ {} 
					∎ { { { al lv apv } w } p }
				∐. _none◂{} . 
					∎ { { E w } p }
			@.pf = lst.map_l◂◂pf_i 
			@.exp_s8 { E e } 
				$ e ⊢ 
				∐ ast.exp_s8_cst◂c . 
					$ E ⊢ { al lv apv } 
					_inc lv ⊢ lv 
					$ { al lv apv } ⊢ E
					ct_ptn { E c } ⊢ { { al lv apv } c yc } 
					_dec lv ⊢ lv 
					gen { lv yc } ⊢ { lv _ }
					∎ { { al lv apv } ast.exp_s8_cst◂%c _none◂{} }
				∐ ast.exp_s8_idx◂{ p i } . 
					$ i ⊢ i,i0 
					$ p ⊢ 
					∐ ast.fmt_s◂{} . 
						∎ { E ast.exp_s8_idx◂{ ast.fmt_s◂{} %i } _some◂{ %i0 TX.s8◂{} } }
					∐ ast.fmt_st_s◂{} . 
						∎ { E ast.exp_s8_idx◂{ ast.fmt_st_s◂{} %i } _some◂{ %i0 TX.st◂TX.s8◂{} } }
					∐ ast.fmt_d◂{} . 
						∎ { E ast.exp_s8_idx◂{ ast.fmt_d◂{} %i } _some◂{ %i0 TX.r64◂{} } }
					∐ ast.fmt_x◂{} .
						∎ { E ast.exp_s8_idx◂{ ast.fmt_x◂{} %i } _some◂{ %i0 TX.r64◂{} } } 
					∐. ast.fmt_p◂{} .
						∎|  
				∐. ast.exp_s8_for◂{ i c } . 
					$ i ⊢ i,i0 
					∎ { E ast.exp_s8_for◂{ %i %c } _some◂{ %i0 TX.r64◂{} } } 
		
		 	@.lod_src_ptn = T.map_l_x◂◂lod_src 
			@.lod_src { { E rv } a }
				$ a ⊢ 
				∐ ast.re_reg◂i .
					lod_q { rv i } ⊢ { rv i vi } 
					$ var◂T.p◂vi ⊢ y 
					∎ { { E rv } ast.re_reg◂i y }
				∐ ast.re_agl◂{ e sp } .
					lod_src_ptn { { E rv } sp } ⊢ { { E rv } sp yp } 
					$ E ⊢ { al lv apv } 
					_inc lv ⊢ lv 
					newvar_l lv  ⊢ { lv yd } 
					ct_ptn { { al lv apv } e } ⊢ { { al lv apv } e y } 
					$ yd ⊢ yd,yd0 
					$ y ⊢ y,y0 
					T.unify.f { TX.t_ctr◂{ yp yd0 } y } ⊢ {} 
					_dec lv ⊢ lv 
					gen { lv y0 } ⊢ { lv _ }
					inst { lv yd } ⊢ { lv yd } 
					$ { al lv apv } ⊢ E
					∎ { { E rv } ast.re_agl◂{ e sp } yd } 					
				∐. ast.re_v◂c .
					ct_ptn { E c } ⊢ { E c y0 }
					∎ { { E rv } ast.re_v◂c y0 }
			
		§ cst =| 
	∎∎

				§ m_of_mp = IR.m_of_mp 

		§ @.ctr_of mc 
			∐ mc ⊢ RP.atm◂ast.k_ply◂{ n x y } .	
				m_of_mp y ⊢ y
				∎ { n x y } 
			∐ mc ⊢ RP.atm◂ast.k_ctr◂{ i n _ } . 
				∎ { %[ 1r ] RP.atm◂%[ 0r ] RP.atm◂stt_a◂{ i n RP.atm◂ stt_r◂%[ 0r ] } }
			∐ mc ⊢ RP.atm◂ast.k_name◂v . 
				EVV.lod_evv v ⊢ { v c  }
				ctr_of c ⊢| 
			∐ mc ⊢ RP.atm◂ast.k_op_axm◂{ a l _ }; a'=EX.sqc; l ⊢ _cns◂{ RP.rcd◂_cns◂{ c0 _cns◂{ c1 _nil◂{} } } _nil◂{} } . 
				ctr_of c0 ⊢ {  n0 x0 y0  } 
				ctr_of c1 ⊢ {  n1 x1 y1  } 
				IR.V.ini {} ⊢ V0 
				IR.inst_tp { V0 x0 } ⊢ { V0 x0 }
				IR.inst_mp { V0 y0 } ⊢ { _ y0 }
				IR.V.ini {} ⊢ V1 
				IR.inst_tp { V1 x1 } ⊢ { V1 x1 }
				IR.inst_mp { V1 y1 } ⊢ { _ y1 }
					
				IR.unify { y0 x1 } ⊢ {}  
				IR.gen_mp_tp { %[ 0r ] x0 } ⊢ { n x0 }
				IR.gen_mp_mp y1 ⊢ y1
				∎ { n x0 y1 }	
			∐. . 
				∎|
				
				§ mop_of { mo pb } 
					∐ mo ⊢ RP.atm◂ast.k_op_axm◂{ a _cns◂{ mc _nil◂{} } _ }; 
						∐ a'=EX.mop . 
							ctr_of mc ⊢ mc
							∎ mop◂{ mc pb }
						∐ a'=EX.mt . 
							∐ mc ⊢ RP.rcd◂_cns◂{ t _cns◂{ mc _nil◂{} } } .
								ctr_of mc ⊢ mc
								∐ t ⊢ RP.atm◂ast.k_op_axm◂{ i _nil◂{} _ } . 
									∐ i'=EX.mt_e_r64 . 
										∎ mt◂{ %[ ast.mt.e.r64 ] mc pb }
									∐ i'=EX.mt_e_pt . 
										∎ mt◂{ %[ ast.mt.e.pt ] mc pb } 
									∐ i'=EX.mt_e_s8 . 
										∎ mt◂{ %[ ast.mt.e.s8 ] mc pb } 
									∐ i'=EX.mt_ne_r64 . 
										∎ mt◂{ %[ ast.mt.ne.r64 ] mc pb } 
									∐ i'=EX.mt_ne_r64 . 
										∎ mt◂{ %[ ast.mt.ne.pt ] mc pb } 
									∐ i'=EX.mt_ne_s8 . 
										∎ mt◂{ %[ ast.mt.e.s8 ] mc pb } 
									∐ i'=EX.mt_le_r64 . 
										∎ mt◂{ %[ ast.mt.le.r64 ] mc pb } 
									∐ i'=EX.mt_le_s8 . 
										∎ mt◂{ %[ ast.mt.le.s8 ] mc pb } 
										
									∐. .
										∎|
								∐. . 
									∎| 
							∐. .
								∎|
						∐ a'=EX.mt_e . 
							ctr_of mc ⊢ mc
							∎ mt◂{ %[ ast.mt.e ] mc pb } 
						∐ a'=EX.mt_ne . 
							ctr_of mc ⊢ mc
							∎ mt◂{ %[ ast.mt.ne ] mc pb } 
 						∐. a'=EX.mt_le . 
							ctr_of mc ⊢ mc
							∎ mt◂{ %[ ast.mt.le ] mc pb } 
					∐. . 
						∎|
		§§ AP 
			§ ini = _cli
			§ new # y 
				_mk_arr_x { %[ 1r ] { TX.unt◂{} RP.unt◂{} } } ⊢ { _ _ V }
				$ y ⊢ y,y0 
				_ref.mk { y V } ⊢ p
				∎ RP.atm◂ast.k_ap◂{ p y0 }
			§ @.add_i { V l i c y } 
				∐ l'<>i' .
					_alc_o { V i } ⊢ { V { t ct } }
					T.iu { t y } ⊢ { t y b } 
					_alc_i { V { t ct } } ⊢ { V i } 
					∐ b'=0r .
						_inc i ⊢ i 
						add_i { V l i c y } ⊢| 
					∐. .
						∎| 
				∐. .
					$ { l i } ⊢ _ 
					_push { { y c } V } ⊢ V 
					∎ V 
			§ @.add { a c y } 
				∐ a ⊢ RP.atm◂ast.k_ap◂{ p _ } .
					_ref.o p ⊢ { P { s V } }
					T.iut { y s } ⊢ { y s b } 
					∐ b'=1r .
						_arr_len V ⊢ { V l } 
						_push { { y c } V } ⊢ V
						_ref.i { P { s V } } ⊢ _
						∎ {} 
					∐. .
						T.pp y ⊢ sy 
						_emt.f sy ⊢ _
						T.pp s ⊢ s
						_emt.f s ⊢ _
						∎|
				∐ a ⊢ RP.atm◂ast.k_name◂i .
					EVV.lod_evv i ⊢ { _ a  }
					add { a c y } ⊢|
				∐. .
					∎|
			§ add_k # { apv a c } 
				slv.ct_ptn { { ⟦⟧ %[ 1r ] apv } c } ⊢ { { al lv apv } c yc }
				_dec lv ⊢ lv 
				gen { lv yc } ⊢ {  _ yc }
				gen_dlt_lst { %[ 0r ] al } ⊢ _
				add { a c yc } ⊢ {}
				∎ apv
			§ @.slv_i { V l i y } 
				∐ l'<>i' .
					_alc_o { V i } ⊢ { V { t ct } }
					T.iu { y t } ⊢ { y t b0 } 
					∐ b0'=1r . 
						$ b0 ⊢ _ 
						T.ciu { y t } ⊢ { y t b1 } 
						$ ct ⊢ ct,ct0 
						_alc_i { V { t ct } } ⊢ { V _ } 
						∐ b1'=1r . 
							$ b1 ⊢ _ 
							∎ { V y ‹ ct0 › } 
						∐. .
							_emt_im◂◂"AP.slv 0:" {} ⊢ {}
							$ y ⊢ y,y0 
							T.pnt_type_k y0 ⊢ s  
							_emt.f s ⊢ _ 
							∎ { V y ‹› }
					∐. .
						_alc_i { V { t ct } } ⊢ { V i } 
						_inc i ⊢ i 
						slv_i { V l i y } ⊢| 
				∐. .
					_emt_im◂◂"AP.slv 1:" {} ⊢ {}
					$ y ⊢ y,y0 
					T.pnt_type_k y0 ⊢ s 
					_emt.f s ⊢ _ 
					∎ { V y ‹› }
			§ slv { apv p y } 
				_ref.o p ⊢ { P { s V } }
				T.ciu { y s } ⊢ { y s b } 
				∐ b'=1r .
					_arr_len V ⊢ { V l } 
					slv_i { V l %[ 1r ] y } ⊢ { V y c }
					_ref.i { P { s V } } ⊢ p
					$ c ⊢ 
					∐ _some◂c .
						$ p ⊢ _ 
						inst { %[ 1r ] y } ⊢ { lv y } 
						slv.ct_ptn { { ⟦⟧ lv apv } c } ⊢ { { al lv apv } c yc } 
						$ y ⊢ y,y0 
						T.unify.f { yc y0 } ⊢ {} 
						_dec lv ⊢ lv 
						gen_dlt { lv y } ⊢ _ 
						gen_dlt_lst { %[ 0r ] al } ⊢ _
						∎ { apv c }
					∐. _none◂{} .
						$ RP.atm◂ast.k_btm◂{} ⊢ c 
						∎ { apv c }
				∐. .
					∎|
			∎∎ 
	
	§§ siz_k
			§	 
				@.rcd { V t0 }
					∐ t0 ⊢ dta◂{ a l }; 
						∐ a'=TX.id.prd; l ⊢ _cns◂{ y0 _cns◂{ y1 _nil◂{} } } . 
							f_T { V y0 } ⊢ V
							rcd { V y1 } ⊢| 
						∐. a'=TX.id.unt; l ⊢ _nil◂{} .
							∎ V
					∐ t0 ⊢ var◂T.p◂i . 
						$ V ⊢ { tav b n } 
						_ref.lod i ⊢ { i v }
						$ { tav b n } ⊢ V 
						∐ v ⊢ var_ln◂k . 
							rcd { V k } ⊢| 
						∐. .
							∎| 
					∐. . 
						∎| 
				@.f_T_adt { { tav b n } t }
					$ t ⊢ 
					∐ dta◂{ a l } . 			
						_and_im◂◂0x0000ffffffffffffr a ⊢ a 
						dta_n_1 { tav a } ⊢ { tav a o } 
						∐ o ⊢ _some◂{ v k } . 
							T.iug_axm { v k l } ⊢ l
							∐ l ⊢ _cns◂{ t _nil◂{} } . 		
								f_T { { tav b n } t } ⊢| 
							∐. .
								∎|
						∐. . 
							_add_im◂◂2r n ⊢ n
							∎ { tav b n } 								
					∐ var◂T.p◂i . 
						_ref.lod i ⊢ { i v }
						∐ v ⊢ var_ln◂k . 
							f_T_adt { { tav b n } k } ⊢| 
						∐. .
							∎ { tav %[ 0r ] n }
					∐ abs◂{ a k0 } . 
						∎|  
					∐ ct_imp◂{ k0 k1 } .
						∎|
					∐. imp◂{ k0 k1 } .
						∎|
				@.f_T { { tav b n } t0 }
					$ t0 ⊢ 
					∐ dta◂{ a l } . 			
						=+ a' 
						-- r64 
						∐ 
							_inc n ⊢ n
							∎ { tav b n }   
						∐ 
							∎| 
						-- arr 
						∐ 
							∐ l ⊢ _cns◂{ y _cns◂{ yt _nil◂{} } } . 
								_inc n ⊢ n
								∎ { tav b n }   
							∐. . 
								∎| 
						-- Clr 
						∐ 
							∐ l ⊢ _cns◂{ y _nil◂{} } . 
								_inc n ⊢ n
								∎ { tav b n }   
							∐. . 
								∎|  
						-- pt 
						∐ 	
								∐ l ⊢ _cns◂{ y _nil◂{} } . 
									_inc n ⊢ n
									∎ { tav b n }   
								∐. . 
									∎| 
						-- prd 
						∐ 
							∎| 		
						-- grm 
						∐
							∎| 
						-- pf 
						∐
							∎| 
						-- Clr_lc 
						∐ 
							∎| 
						-- arr_lc 
						∐ 
							∎| 
						-- r8 
						∐ 
							∎| 
						-- arr_x 
						∐ 
							∎| 
						-- ctr 
						∐ 
							∎| 
						-- mtc 
						∐ 
							∎| 
						-- mop 
						∐ 
							∎| 
						-- tj 
						∐ 
							∎| 
						-- st 
						∐ 
							∐ l ⊢ _cns◂{ y _nil◂{} } . 
								_inc n ⊢ n
								∎ { tav b n }   
							∐. . 
								∎|  
						∐. 
							∐ a'=TX.id.rcd; l ⊢ _cns◂{ y _nil◂{} } .
								rcd { { tav b n } y } ⊢| 
							-- adt  
							∐ a'=TX.id.adt; l ⊢ _cns◂{ y _nil◂{} }. 
								f_T_adt { { tav b n } y } ⊢| 
							-- hp 
							∐ a'=TX.id.hp . 
								∎ { tav b n }
							∐. . 
								∎| 
					∐ var◂T.p◂i . 
						_ref.lod i ⊢ { i v }
						∐ v ⊢ var_ln◂k . 
							f_T { {  tav b n } k } ⊢| 
						∐. .
							∎ { tav %[ 0r ] n }
					∐ abs◂{ a k0 } . 
						∎|  
					∐ ct_imp◂{ k0 k1 } .
						∎|
					∐. imp◂{ k0 k1 } .
						∎| 
			§ f_x { tav y } 
				f_T { { tav %[ 1r ] %[ 0r ] } y } ⊢ { tav b n }
				∐ b'<>0r . 
					∎ { tav n } 
				∐. .
					∎|
			§ f_o { tav y } 
				f_T { { tav %[ 1r ] %[ 0r ] } y } ⊢ { tav b n }
				∐ b'<>0r . 
					∎ { tav ‹ n › } 
				∐. .
					∎ { tav ‹› }
			∎∎ 
	§§ inl 
		§§ m 
			§ gl = 1r
			§ lc_gl = 2r 
			∎∎ 
		§ app◂{ a b } = RP.atm◂ast.k_app◂{ a b } 
		§ k_s8◂s = RP.atm◂ast.k_s8◂s 
		§ mtc_atm # { vv s } 
			∎ { vv s }
		§ mtc_ptn = RP.map_l◂◂mtc_atm
		§ tpl_atm # s 
			∎ s 
		§ tpl_ptn = RP.map_l◂◂mtc_atm
		§ 
				@.ccs0 { sl l c }
					RP.atm_a c ⊢ c 
					∐ c ⊢ ast.k_s8◂s . 
						SCM.len_p s ⊢ { s ls } 
						_add { l ls } ⊢ { l _ } 
						∎ { ⟦ s < sl ⟧ l } 
					∐ c ⊢ ast.k_name◂i . 
						EVV.lod_evv i ⊢ { i c  }
						ccs0 { sl l c } ⊢| 
					∐ c ⊢ ast.k_op_axm◂{ a la _ }; a'=EX.ccs; la ⊢ _cns◂{ RP.rcd◂_cns◂{ c0 _cns◂{ c1 _nil◂{} } } _nil◂{} } . 
						ccs0 { sl l c1 } ⊢ { sl l } 
						ccs0 { sl l c0 } ⊢| 
					∐. . 
						∎| 
			§	@.ccs1 { m sl i }
					$ sl ⊢ 
					∐ _cns◂{ s sl } .	
						_ref.o s ⊢ { P { s l } }
						_pf_x◂◂pf.s8 { m i { s } } ⊢ { m i { s } } 
						_ref.i { P { s l } } ⊢ _
						ccs1 { m sl i } ⊢| 
					∐. _nil◂{} .
						∎ m 
			§ @.ct_x_pf_i { { E v0 } p } 
				$ E ⊢ { m SC apv tav } 
				$ p ⊢ 
				∐ ast.exp_s8_cst◂s .
					ast.s8_of_k s ⊢ s 
					$ { m SC apv tav } ⊢ E 
					∎ { { E v0 } s }
				∐ ast.exp_s8_idx◂{ f i } .
					lod_q { v0 i } ⊢ { v0 i ki } 
					∐ f ⊢ ast.fmt_d◂{} .
						ast.r64_of_k ki ⊢ xi 
						^ xi ⊢ _,sxi 
							0d' // 
						SCM.set_s { SC sxi } ⊢ { SC s }  
						$ { m SC apv tav } ⊢ E 
						∎ { { E v0 } s }
					∐ f ⊢ ast.fmt_x◂{} . 
						ast.r64_of_k ki ⊢ xi 
						^ xi ⊢ _,sxi 
							0x' // 
						SCM.set_s { SC sxi } ⊢ { SC s }  
						$ { m SC apv tav } ⊢ E 
						∎ { { E v0 } s }
					∐. . 
						∎|
				∐. ast.exp_s8_for◂_ . 
					∎|
			§ @.ct_x_pf { { E v0 } lf }
				$ lf ⊢
				∐ _cns◂{ p lf } .
					ct_x_pf_i { { E v0 } p } ⊢ { { E v0 } s }
					ct_x_pf { { E v0 } lf } ⊢ { { E v0 } c } 
					∎ { { E v0 } app◂{ ast.axm_pp◂%[ EX.ccs ] RP.cns2◂{ k_s8◂s c } } }
				∐. _nil◂{} . 
					$ E ⊢ { m SC apv tav } 
					SCM.set_s { SC %[ "" ] } ⊢ { SC s }  
					$ { m SC apv tav } ⊢ E 
					∎ { { E v0 } k_s8◂s }
		 
			§	@.exp_s8 { E e } 
				∐ e ⊢ ast.exp_s8_cst◂c . 
					ct_ptn { E c } ⊢ { E c } 
					∎ { E ast.exp_s8_cst◂c }
				∐ e ⊢ ast.exp_s8_for◂{ i c } . 
					ct_ptn { E c } ⊢ { E c } 
					∎ { E ast.exp_s8_for◂{ i c } }
				∐. . 
					∎ { E e } 
				@.src { E s } 
					$ s ⊢ 
					∐ ast.re_agl◂{ e p } . 
						src_ptn { E p } ⊢ { E p }
						∎ { E ast.re_agl◂{ e p } }
					∐ ast.re_reg◂r . 
						∎ { E ast.re_reg◂r }
					∐. ast.re_v◂c . 
						ct_ptn { E c } ⊢ { E c }
						∎ { E ast.re_v◂c }
				@.src_ptn = RP.map_l◂◂src 

			@.ct_ptn = RP.map_l_atm◂◂cst
			@.cst { E c } 
				$ c ⊢ 
				∐ ast.k_unv◂_ .
					∎|
				∐ ast.k_op_axm◂{ a la ya } .
					lst.map_l◂◂ct_ptn { E la } ⊢ { E la } 
					∎ { E RP.atm◂ast.k_op_axm◂{ a la ya } } 
				∐ ast.k_op◂K . 
					∎ { E RP.atm◂ast.k_op◂K }
				∐ ast.k_op_gnr◂K . 
					∎ { E RP.atm◂ast.k_op_gnr◂K }
				∐ ast.k_fnc◂{ X Y } . 
					$ E ⊢ { m SC apv tav } 
					ct_ptn { { %[ m.lc_gl ] SC apv tav } Y } ⊢ { { _ SC apv tav } Y }
					$ { m SC apv tav } ⊢ E 
					∎ { E RP.atm◂ast.k_fnc◂{ X Y } } 
				∐ ast.k_ctr◂K . 
					∎ { E RP.atm◂ast.k_ctr◂K }
				∐ ast.k_r64◂K . 
					∎ { E RP.atm◂ast.k_r64◂K }
				∐ ast.k_s8◂K . 
					∎ { E RP.atm◂ast.k_s8◂K }
				∐ ast.k_btm◂K .
					∎ { E RP.atm◂ast.k_btm◂K }
				∐ ast.k_t◂{ c t } . 
					$ E ⊢ { m SC apv tav } 
					∐ m'=m.lc_gl . 
						$ { m SC apv tav } ⊢ E 
						ct_ptn { E c } ⊢ { E c } 
						∎ { E RP.atm◂ast.k_t◂{ c t } }
					∐. .
						$ { m SC apv tav } ⊢ E 
						ct_ptn { E c } ⊢| 					 
				∐ ast.k_name◂i . 
					$ E ⊢ { m SC apv tav } 
					EVV.lod i ⊢ { i p } 
					$ p ⊢ 
					∐ ast.k_p◂k . 
						$ { m SC apv tav } ⊢ E
						ct_ptn { E k } ⊢|
					∐. ast.k_v◂v . 
						$ { m SC apv tav } ⊢ E 
						∎ { E RP.atm◂ast.k_name◂i }
				∐ ast.k_ply◂{ nc x y } .
					src_ptn { E y } ⊢ { E y }
					∎ { E RP.atm◂ast.k_ply◂{ nc x y } }
				∐ ast.k_pf◂pf . 
					lst.map_l◂◂exp_s8 { E pf } ⊢ { E pf }
					∎ { E RP.atm◂ast.k_pf◂pf }
				∐ ast.k_arr◂v . 
					 ∎ { E RP.atm◂ast.k_arr◂v }
				∐ ast.k_ap◂{ p0 t0 } .
					$ E ⊢ { m SC apv tav } 
					∐ m'=m.gl .
						AP.slv { apv p0 t0 } ⊢ { apv c0 } 
						$ { m SC apv tav } ⊢ E
						ct_ptn { E c0 } ⊢|
					∐. .
						$ { m SC apv tav } ⊢ E
						∎ { E RP.atm◂ast.k_ap◂{ p0 t0 } }
				∐. ast.k_app◂{ c0 c1 } .
					ct_ptn { E c0 } ⊢ { E c0 } 
					ct_ptn { E c1 } ⊢ { E c1 }
					$ E ⊢ { m SC apv tav } 
					∐ m'=m.lc_gl . 
						$ { m SC apv tav } ⊢ E
						∎ { E RP.atm◂ast.k_app◂{ c0 c1 } }												
					∐ c0 ⊢ RP.atm◂ast.k_t◂{ c0 _ } .
						$ { m SC apv tav } ⊢ E 
						ct_ptn { E RP.atm◂ast.k_app◂{ c0 c1 } } ⊢|
					∐ c0 ⊢ RP.atm◂ast.k_btm◂t .
						$ { m SC apv tav } ⊢ E
						∎ { E RP.atm◂ast.k_btm◂t }
					∐ c1 ⊢ RP.atm◂ast.k_btm◂t .
						$ { m SC apv tav } ⊢ E 
						∎ { E RP.atm◂ast.k_btm◂t }
					∐ c0 ⊢ RP.atm◂ast.k_op_axm◂{ ax la ya } . 
						$ { m SC apv tav } ⊢ E
						∐ ax'=EX.ftr . 
							∎|
						∐ ax'=EX.prs .
							∐ la ⊢ _nil◂{}; c1 ⊢ RP.atm◂ast.k_op_axm◂{ ax1 axl1 _ }; 
								∐. ax1'=EX.grm; axl1 ⊢ _cns◂{ k1 _nil◂{} } .
									∎ { E k1 }
							∐. .
								∎| 									
						∐ ax'=EX.ccs . 
							ccs0 { ⟦⟧ %[ 0r ] RP.atm◂ast.k_op_axm◂{ ax ⟦ c1 < la ⟧ ya } } ⊢ { sl l }
							_mlc_s8 l ⊢ { _ s } 
							ccs1 { s sl %[ 0r ] } ⊢ s
							$ E ⊢ { m SC apv tav } 
							SCM.set_s { SC s } ⊢ { SC p }  
							$ { m SC apv tav } ⊢ E 
							∎ { E k_s8◂p }
						∐ ax'=EX.ct_scf_d . 
							$ E ⊢ { m SC apv tav } 
							ast.r64_of_k c1 ⊢ x 
							^ x ⊢ _,sx
								0d' // 
							SCM.set_s { SC sx } ⊢ { SC s }  
							$ { m SC apv tav } ⊢ E 
							∎ { E k_s8◂s }
						∐ ax'=EX.ct_scf_x . 
							$ E ⊢ { m SC apv tav } 
							ast.r64_of_k c1 ⊢ x 
							^ x ⊢ _,sx
								0x' // 
							SCM.set_s { SC sx } ⊢ { SC s }  
							$ { m SC apv tav } ⊢ E 
							∎ { E k_s8◂s }
						∐ ax'=EX.ct_cnc_siz .
							ast.smt_ap ya ⊢ ya 
							inst { %[ 1r ] ya } ⊢ { lv ya } 
							newvar_l lv  ⊢ { lv v0 } 
							$ v0 ⊢ v0,v0_0  
							T.unify.f { TX.t_ct_imp◂{ TX.hp◂v0_0 TX.r64◂{} } ya } ⊢ {}  
							_dec lv ⊢ lv 
							gen { lv v0 } ⊢ { lv yh } 
							$ E ⊢ { m SC apv tav } 
							siz_k.f_x { tav yh } ⊢ { tav c_n }
							$ { m SC apv tav } ⊢ E
							∎ { E RP.atm◂ast.k_r64◂c_n }
						∐ ax'=EX.ct; la ⊢ _cns◂{ f _nil◂{} } . 
							ct_x { E f c1 } ⊢|
						∐ ax'=EX.ct_eq . 
							∐ c1 ⊢ RP.rcd◂_cns◂{ c10 _cns◂{ c11 _nil◂{} } } .
								ast.eq_ct_ptn { c10 c11 } ⊢ { _ _ b }
								$ b ⊢ 
								∐ bl.t◂{} .
									∎ { E RP.atm◂ast.k_r64◂%[ 1r ] }
								∐. bl.f◂{} .
									∎ { E RP.atm◂ast.k_r64◂%[ 0r ] }
							∐. .
								∎|
						∐ ax'=EX.ct_if .
							∐ c1 ⊢ RP.rcd◂_cns◂{ cb _cns◂{ c10 _cns◂{ c11 _nil◂{} } } } .
								ast.r64_of_k cb ⊢ x 
								∐ x'=0r .
									∎ { E c10 }
								∐. .
									∎ { E c11 }
							∐. .
								∎|
						∐ ax'=EX.ct_op2; la ⊢ _cns◂{ i _nil◂{} } .
							∐ c1 ⊢ RP.rcd◂_cns◂{ x0 _cns◂{ x1 _nil◂{} } } .
								ast.r64_of_k i ⊢ i 
								ast.r64_of_k x0 ⊢ x0 
								ast.r64_of_k x1 ⊢ x1
								=+ i' 
								-- add 
								∐ 
									_add { x0 x1 } ⊢ { x _ } 
									∎ { E RP.atm◂ast.k_r64◂x }
								-- sub 
								∐
									_sub { x0 x1 } ⊢ { x _ } 
									∎ { E RP.atm◂ast.k_r64◂x }
								-- bts 
								∐ 
									_bts { x0 x1 } ⊢ { x _ } 
									∎ { E RP.atm◂ast.k_r64◂x }
								-- bsr 
								∐ 
									_bsr x0 ⊢ { _ x } 
									∎ { E RP.atm◂ast.k_r64◂x }
								-- flo2  
								∐ 
									_inc x0 ⊢ x 
									_bsr x ⊢ { _ x }
									_inc x ⊢ x 
									_bts { %[ 0r ] x } ⊢ { x _ }
									∎ { E RP.atm◂ast.k_r64◂x }
								-- imul 
								∐ 
									_imul { x0 x1 } ⊢ { x _ } 
									∎ { E RP.atm◂ast.k_r64◂x }
								-- shl 
								∐ 
									_shl { x0 x1 } ⊢ { x _ } 
									∎ { E RP.atm◂ast.k_r64◂x }
								-- shr 
								∐ 
									_shr { x0 x1 } ⊢ { x _ } 
									∎ { E RP.atm◂ast.k_r64◂x }
								∐. 
									∎|
							∐. .
								∎|
						∐. .
							∎ { E RP.atm◂ast.k_op_axm◂{ ax ⟦ c1 < la ⟧ ya } } 
						
					∐ c0 ⊢ RP.atm◂ast.k_op_gnr◂{ pg ibg lcg { v0 v1 } } . 
						_ref.o lcg ⊢ { lcGG { w lcg gfl } }
						 find_gf.e_lp { { v0 v1 c1  } gfl } ⊢ { { { v0 v1 c1 } o } gfl } 
						$ o ⊢ 
						∐ _some◂ie . 
							$ v0 ⊢ _ 
							_ref.i { lcGG { w lcg gfl } } ⊢ lcg 
							T.newvar_ln v1 ⊢ v1
							$ { m SC apv tav } ⊢ E
							∎ { E RP.atm◂ast.k_op◂{ ibg ie v1 } }	
						∐. _none◂{} . 
							_ref.n {} ⊢ IE 
							$ lcg ⊢ lcg,lcg0 
							_ref.lc_rpc IE ⊢ { IE ie0 } 
							$ v0 ⊢ v0,v00
							$ c1 ⊢ c1,c10 
							$ w ⊢ w,w0
							$ v1 ⊢ v1,v10
							_ref.i { lcGG { w0 lcg0 ⟦ { v00 v10 c10 ie0 } < gfl ⟧ } } ⊢ _
							slv.exc_tpl { { %[ 1r ] ⟦⟧ } pg } ⊢ { { lv el } pg yT } 
							slv.ct_ptn { { ⟦⟧ lv apv } lcg } ⊢ { { al lv apv } lcg yf } 
							slv.pop_tpl el ⊢ {} 
							$ yf ⊢ yf,yf0 
							$ yT ⊢ yT,yT0
							inst { lv TX.t_ct_imp◂{ v0 v1 } } ⊢ { lv yi }
							T.unify.f { yi TX.t_ct_imp◂{ yT0 yf0 } } ⊢ {} 
							_dec lv ⊢ lv 
							gen_dlt { lv yT } ⊢ lv 
							gen { lv yf } ⊢ {  _ yf }
							gen_dlt_lst { %[ 0r ] al } ⊢ _
							cst_evl { { %[ m.lc_gl ] apv SC tav lcg pg c1 } } ⊢ { { _ SC apv tav } lcg }
							_ref.i { IE { w lcg ⟦⟧ } } ⊢ ie 
							T.newvar_ln yf ⊢ v 
							$ { m SC apv tav } ⊢ E
							∎ { E RP.atm◂ast.k_op◂{ ibg ie v } }
					∐ c0 ⊢ RP.atm◂ast.k_fnc◂{ T c0 } . 
						cst_evl { { m apv SC tav c0 T c1 } } ⊢ { { m SC apv tav } c2 }
						$ { m SC apv tav } ⊢ E
						∎ { E c2 }	
					∐. . 
						_emt_im◂◂22r {} ⊢ {} 
						∎|					
				
			@.cst_evl # { { m apv SC tav lcg pg c1 } }
				exc_tpl { ⟦⟧ pg c1 } ⊢ el
				ct_ptn { { m SC apv tav } lcg } ⊢ { E lcg } 
				pop_tpl el ⊢ {} 
				∎ { E lcg }			
			@.ct_x { E f c }
				∐ f ⊢ RP.atm◂ast.k_op_axm◂{ a la _ } .
					∐ a'=EX.pf; la ⊢ _cns◂{ RP.atm◂ast.k_pf◂lf _nil◂{} }; c ⊢ RP.rcd◂l0 .	
						arr_of_lst { l0 RP.rcd◂⟦⟧ } ⊢ v0 
						ct_x_pf { { E v0 } lf } ⊢ { { E _ } c }
						ct_ptn { E c } ⊢| 
						--∎|
					∐. . 
						∎|
				∐. . 
					∎|
			§ cst_evl_gl # { { apv SC tav c } }
				ct_ptn { { %[ m.gl ] SC apv tav } c } ⊢ { { _ SC apv tav } c } 
				∎ { SC apv tav c }
			
		∎∎
		§§ mk_ap 
		§§ emt
			§ @.mo_n l 
				$ l ⊢ 
				∐ _cns◂{ { w i n v } l } .
					mo_n l ⊢ mf 
					$ RP.atm◂ast.k_ctr◂{ i n v } ⊢ c,c0
					$ app_k◂{ unv_k◂%[ UNV.id.emt_mo ] RP.cns2◂{ RP.atm◂ast.k_s8◂w c0 } } ⊢ m 
					$ mcp_k◂{ mop_k◂c m mf } ⊢ m 
					∎ m
				∐. _nil◂{} .
					∎ mcn_k◂{}
			§ f_gl # cl 
				mo_n cl ⊢ m 
				$ ast.lc_etr◂{ { %[ 1r ] %[ ".e0" ] } ast.lc_def◂{ ‹› ip.reg◂%[ "s" ] %[ 0r ] ast.jmp◂{ oom_k◂m ip.reg◂%[ "s" ] } } } ⊢ e0 
				$ ast.lc_ap◂{ ast.abs_n◂%[ UNV.id.emt_adt ] fst_n_k◂%[ ".e0" ] } ⊢ e1
				∎ { e0 e1 }
			§ @.lp_gl { gl cll } 
				$ cll ⊢ 
				∐ _cns◂{ cl cll } .
					f_gl cl ⊢ { e0 e1 } 
					$ ⟦ e0 e1 < gl ⟧ ⊢ gl
					lp_gl { gl cll } ⊢|
				∐. _nil◂{} .
					∎ gl
			∎∎
		§§ dlt
			§ @.mo_n l 
				$ l ⊢ 
				∐ _cns◂{ { w i n v } l } .
					mo_n l ⊢ mf 
					$ RP.atm◂ast.k_ctr◂{ i n v } ⊢ c
					$ mcp_k◂{ mop_k◂c moo_k◂unv_k◂%[ UNV.id.dlt ] mf } ⊢ m 
					∎ m
				∐. _nil◂{} .
					∎ mcn_k◂{}
			§ f_gl # cl 
				mo_n cl ⊢ m 
				$ ast.lc_etr◂{ { %[ 1r ] %[ ".e0" ] } ast.lc_def◂{ ‹› ip.reg◂%[ "s" ] %[ 0r ] ast.jmp◂{ oom_k◂m ip.reg◂%[ "s" ] } } } ⊢ e0 
				$ ast.lc_ap◂{ ast.abs_n◂%[ UNV.id.dlt_adt ] fst_n_k◂%[ ".e0" ] } ⊢ e1
				∎ { e0 e1 }
			§ @.lp_gl { gl cll } 
				$ cll ⊢ 
				∐ _cns◂{ cl cll } .
					f_gl cl ⊢ { e0 e1 } 
					$ ⟦ e0 e1 < gl ⟧ ⊢ gl
					lp_gl { gl cll } ⊢|
				∐. _nil◂{} .
					∎ gl
			∎∎
		§§ rpc
			§ ply◂c = RP.atm◂ast.k_ply◂c 
			§ agl_n◂{ c n } = RP.atm◂ast.re_agl◂{ c RP.atm◂ast.re_reg◂n }
			§ c◂{ c0 c1 } = ply◂{ %[ 2r ] RP.cns2◂{ RP.atm◂%[ "0" ] RP.atm◂%[ "1" ] } RP.cns2◂{ agl_n◂{ c0 %[ "0" ] } agl_n◂{ c1 %[ "1" ] } } }
			§ @.mo_n l 
				$ l ⊢ 
				∐ _cns◂{ { w i n v } l } .
					mo_n l ⊢ m 
					$ RP.atm◂ast.k_ctr◂{ i n v } ⊢ c,c0,c1
					$ mcp_k◂{ mop_k◂c moo_k◂seq_k◂{ unv_k◂%[ UNV.id.rpc ] ctr◂c◂{ c0 c1 } } m } ⊢ m 
					∎ m
				∐. _nil◂{} .
					∎ mcn_k◂{}
			§ f_gl # cl 
				mo_n cl ⊢ m 
				$ ast.lc_etr◂{ { %[ 1r ] %[ ".e0" ] } ast.lc_def◂{ ‹› ip.reg◂%[ "s" ] %[ 0r ] ast.jmp◂{ oom_k◂m ip.reg◂%[ "s" ] } } } ⊢ e0 
				$ ast.lc_ap◂{ ast.abs_n◂%[ UNV.id.rpc_adt ] fst_n_k◂%[ ".e0" ] } ⊢ e1
				∎ { e0 e1 }
			§ @.lp_gl { gl cll } 
				$ cll ⊢ 
				∐ _cns◂{ cl cll } .
					f_gl cl ⊢ { e0 e1 } 
					$ ⟦ e0 e1 < gl ⟧ ⊢ gl
					lp_gl { gl cll } ⊢|
				∐. _nil◂{} .
					∎ gl
			∎∎
		∎∎
		¶ rf t',f',k'
			∐ rf_t : t'
			∐ rf_f : f' 
			∐ rf_k : k'  			
		§ gnr_rfv { rfv o rfb rfb_g } 
					∐ rfb_g'=o' . 
						exc_q { rfv o rf_t◂rfb_g } ⊢ { rfv _ _ }
						∎ { bl.t◂{} rfv rfb }
					∐ rfb_g'=<o' .  
						$ rfb_g ⊢ rfb_g,l 
						_min { rfb rfb_g } ⊢ rfb 
						exc_q { rfv o rf_t◂l } ⊢ { rfv _ _ }
						∎ { bl.t◂{} rfv rfb }
					∐. . 
						exc_q { rfv o rf_f◂{} } ⊢ { rfv _ _ }
						∎ { bl.f◂{} rfv rfb }					
				§ @.chk_rec { rfv o }
					lod_q { rfv o } ⊢ { rfv o k } 
					$ k ⊢ 
					∐ rf_k◂{} . 
						∎ { rfv o bl.t◂{} }
					∐ rf_t◂o1 . 
						∐ o'=o1' . 
							∎ { rfv %[ CST.MAX ] bl.f◂{} } 
						∐. . 
							chk_rec { rfv o1 } ⊢| 
					∐. rf_f◂{} . 
						∎ { rfv %[ CST.MAX ] bl.f◂{} }
			
		§§ mk_ir 
			§ 
				@.f { E o }
					∐ o ⊢ RP.atm◂ast.k_name◂i . 
						EVV.lod_evv i ⊢ { i c  }
						f { E c } ⊢|  
					∐ o ⊢ RP.atm◂ast.k_t◂{ o _ } .
						f { E o } ⊢|
					∐ o ⊢ RP.atm◂ast.k_btm◂{} .
						∎ { E ast.cn_b◂{} }
					∐ o ⊢ RP.atm◂ast.k_op◂{ ibg ie v } .
						$ E ⊢ { SC apv rfv tav }
						∐ ibg ⊢ bl.t◂{} . 
							_ref.o ie ⊢ { IE { w lc gl } } 
							$ lc ⊢ lc,o 
							_ref.i { IE { w lc gl } } ⊢ _
							slv.ct_ptn { { ⟦⟧ %[ 1r ] apv } o } ⊢ { { al lv apv } o yk }
							T.inst { lv T.var◂T.p◂v } ⊢ { lv yv } 
							$ yk ⊢ yk,yk0 
							T.unify.f_err◂◂0r { yv yk0 } ⊢ {} 
							_dec lv ⊢ lv 
							T.gen { lv yk } ⊢ {  _ yk }
							gen_dlt_lst { %[ 0r ] al } ⊢ _
							inl.cst_evl_gl { { apv SC tav o } } ⊢ { SC apv tav o } 
							f { { SC apv rfv tav } o } ⊢|
						∐. .
							_ref.o ie ⊢ { IE { w lc gl } } 
							find_gf.ge_lp { TX.t_var◂v gl } ⊢ { { yi oa0 } gl } 
							$ oa0 ⊢ 
							∐ _some◂{ ig pi } . 
								_ref.i { IE { w lc gl } } ⊢ _ 
								$ rfv ⊢ { rfb rfv } 
								chk_rec { rfv ig } ⊢ { rfv bf b }
          	    _min { bf rfb } ⊢ rfb 
								_ref.mk ‹› ⊢ po 
								$ ast.cn_o◂{ pi b yi po } ⊢ x 
								$ { rfb rfv } ⊢ rfv 
								∎ { { SC apv rfv tav } x }
							∐. _none◂{} . 
								T.of_imp yi ⊢ { ys yd }
								$ rfv ⊢ { rfb rfv } 
								_arr_len rfv ⊢ { rfv on } 
								$ on ⊢ on,on0 
								$ ys ⊢ ys,ys0 
								$ yd ⊢ yd,yd0
								_ref.n {} ⊢ PI
								_ref.lc_rpc PI ⊢ { PI pi }
								$ { on0 ys0 yd0 pi } ⊢ R1
								$ lc ⊢ lc0,lc1  
								_ref.i { IE { w lc0 ⟦ R1 < gl ⟧ } } ⊢ ie 
								slv.ct_ptn { { ⟦⟧ %[ 1r ] apv } lc1 } ⊢ { { al lv apv } o yk }
								T.inst { lv TX.t_imp◂{ ys yd } } ⊢ { lv yi } 
								$ yk ⊢ yk,yk0 
								T.unify.f { yi yk } ⊢ {}  
								_dec lv ⊢ lv 
								T.gen { lv yk0 } ⊢ { _ yi }
								gen_dlt_lst { %[ 0r ] al } ⊢ _
								inl.cst_evl_gl { { apv SC tav o } } ⊢ { SC apv tav o } 
								_push { rf_k◂{} rfv } ⊢ rfv 
								f { { SC apv { %[ CST.MAX ] rfv } tav } o } ⊢ { { SC apv { rfb_g rfv } tav } lc } 
								_ref.i { PI lc } ⊢ pi 
								gnr_rfv { rfv on rfb rfb_g } ⊢ { bf rfv rfb }
								_ref.mk ‹› ⊢ po 
								$ ast.cn_o◂{ pi bf yi po } ⊢ x
								$ { rfb rfv } ⊢ rfv 
								∎ { { SC apv rfv tav } x }
					∐ o ⊢ RP.atm◂ast.k_op_axm◂{ a la ya } . 
						$ E ⊢ { SC apv rfv tav }
						∐ a'=EX.oom; la ⊢ _cns◂{ m _nil◂{} } . 
							mtc { { SC apv rfv tav } m } ⊢ { E m b }
							ast.smt_ap_err◂◂8r ya ⊢ ya 
							T.inst { %[ 1r ] ya } ⊢ { lv ya }
							T.newvar_l lv  ⊢ { lv y0 } 
							T.newvar_l lv  ⊢ { lv y1 } 
							$ y0 ⊢ y0,y00,y000 
							$ y1 ⊢ y1,y10,y100
							T.unify.f { ya TX.t_ct_imp◂{ TX.t_mtc◂{ y00 y10 } TX.t_imp◂{ y000 y100 } } } ⊢ {}
							_dec lv ⊢ lv 
							T.gen { lv y0 } ⊢ {  lv y0 }
							T.gen { lv y1 } ⊢ {  lv y1 }
							∎ { E ast.cn_m◂{ y0 { m b } y1 } }
						∐ a'=EX.seq; la ⊢ _cns◂{ RP.rcd◂_cns◂{ o0 _cns◂{ o1 _nil◂{} } } _nil◂{} } . 
							f { { SC apv rfv tav } o0 } ⊢ { E o0 }
							f { E o1 } ⊢ { E o1 }
							_ref.mk o0 ⊢ o0 
							_ref.mk o1 ⊢ o1 
							∎ { E ast.cn_p◂{ o0 o1 } }
						∐ a'=EX.id_par; la ⊢ _cns◂{ o _nil◂{} } . 
							ast.smt_ap_err◂◂9r ya ⊢ ya 
							T.inst { %[ 1r ] ya } ⊢ { lv ya }
							T.newvar_l lv  ⊢ {  lv y0 } 
							T.newvar_l lv  ⊢ {  lv y1 } 
							T.newvar_l lv  ⊢ {  lv y2 } 
							$ y0 ⊢ y0,y00,y000 
							$ y1 ⊢ y1,y10,y11
							$ y2 ⊢ y2,y20,y21
							T.unify.f { ya TX.t_ct_imp◂{ TX.t_imp◂{ y11 y21 } TX.t_imp◂{ TX.cns2◂{ y00 y10 } TX.cns2◂{ y000 y20 } } } } ⊢ {}
							_dec lv ⊢ lv 
							T.gen { lv y0 } ⊢ {  lv y0 }
							T.gen { lv y1 } ⊢ {  lv _ }
							T.gen { lv y2 } ⊢ {  lv _ }
							f { {  SC apv rfv tav } o } ⊢ { E o }	
							∎ { E ast.cn_id◂{ y0 o } }
						∐. .
							∎ { { SC apv rfv tav } ast.cn_a◂{ a la ya } }
					∐. . 
						∎ { E ast.cn_e◂o }
				@.mtc { E m }
					∐ m ⊢ RP.atm◂ast.k_t◂{ m _ } .
						mtc { E m } ⊢|
					∐ m ⊢ RP.atm◂ast.k_btm◂t . 
						∎ { E nm_e◂ast.cn_e◂RP.atm◂ast.k_btm◂t %[ 0r ] }
					∐ m ⊢ RP.atm◂ast.k_op_axm◂{ a la ya } . 
						∐ a'=EX.moo; la ⊢ _cns◂{ o _nil◂{} } . 
							f { E o } ⊢ { E o } 
							∎ { E nm_e◂o %[ 1r ] }
						∐ a'=EX.mcn . 
							∎ { E nm_n◂{} %[ 0r ] }
						∐ a'=EX.tj; la ⊢ _cns◂{ RP.rcd◂_cns◂{ c _cns◂{ j _nil◂{} } } _nil◂{} } .
							ctr_of c ⊢ c
							tj { E %[ 0r ] j } ⊢ { E _ l r b } 
							_ref.mk { mtj◂{ c l } r } ⊢ p 
							∎ { E nm_m◂p b }
						
						∐ a'=EX.mcp; la ⊢ _cns◂{ RP.rcd◂_cns◂{ mc _cns◂{ mt _cns◂{ mf _nil◂{} } } } _nil◂{} } . 
							mtc { E mt } ⊢ { E p1 b0 }
							mtc { E mf } ⊢ { E pb b1 }
							_add { b0 b1 } ⊢ { b _ } 
							mop_of { mc pb } ⊢ mc 
							_ref.mk { mc p1 } ⊢ n0 
							∎ { E nm_m◂n0 b }							
						∐. . 	
							_emt_im◂◂33r {} ⊢ {} 
							∎|
					∐. . 
						ast.pnt.ct_ptn m ⊢ s 
						_emt s ⊢ _ 
						∎|
			@.tj { {  SC mfv rfv tav } i j } 
					∐ j ⊢ RP.atm◂ast.k_t◂{ j _ } .
						tj { {  SC mfv rfv tav } i j } ⊢|
					∐ j ⊢ RP.atm◂ast.k_op_axm◂{ a la _ }; a'=EX.tjn; la ⊢ _cns◂{ m _nil◂{} } . 
						mtc { {  SC mfv rfv tav } m } ⊢ { { SC mfv rfv tav } m b }
						_mk_arr { i nm_n◂{} } ⊢ { i _ v } 
						∎ { {  SC mfv rfv tav } i v m b }
					∐ j ⊢ RP.atm◂ast.k_op_axm◂{ a la _ }; a'=EX.tjc; la ⊢ _cns◂{ RP.rcd◂_cns◂{ m _cns◂{ j _nil◂{} } } _nil◂{} } . 
						_inc i ⊢ i 
						tj { {  SC mfv rfv tav } i j } ⊢ { {  SC mfv rfv tav } i v r b } 
						_dec i ⊢ i 
						mtc { {  SC mfv rfv tav } m } ⊢ { { SC mfv rfv tav } m b1 }
						_add { b b1 } ⊢ { b _ }
						exc_q { v i m } ⊢ { v i _ }
						∎ { {  SC mfv rfv tav } i v r b }
					∐. . 
						_emt_im◂◂3r {} ⊢ {} 
						∎|											
		∎∎
	§ mk_ir # { {  eds mfv rfv tav } c } 
		$ eds ⊢ { SCM eds } 
		mk_ir.f { { SCM mfv rfv tav } c } ⊢ { { SCM mfv rfv tav } c }
		∎ { { SCM eds rfv tav } mfv c } 
	
	
		§ @.slv_args_def_0 { as al x ql ql0 pl }
			$ as ⊢ 
			∐ _cns◂{ a as } . 
				T.ini_q {} ⊢ q 
				T.ini_q {} ⊢ p
				$ q ⊢ q,q0,qi,qj 
				BST_s8.set { al { a q0 } } ⊢ { al { a o } } 
				nnt o ⊢ {} 
				$ var◂T.p◂q ⊢ q 
				$ p ⊢ p,p0 
				$ var◂T.p◂p0 ⊢ p0 
				slv_args_def_0 { as al x _cns◂{ q ql } ⟦ qi < ql0 ⟧ ⟦ p0 < pl ⟧ } ⊢ { al td yx ql0 }
				∎ { al T.abs◂{ T.p◂p td } yx ql0 }
			∐. _nil◂{} .  
				_add_im◂◂0x0001000000000000r x ⊢ x 
				$ x ⊢ x,x0
				$ ql ⊢ ql,ql1
				∎ { al TX.t_adt◂T.dta◂{ x0 pl } TX.t_adt◂T.dta◂{ x ql } ql0 }
		§ slv_args_def # { as x } 
			BST_s8.ini {} ⊢ al 
			$ { as al x ⟦⟧ ⟦⟧ ⟦⟧ } ⊢ SAD 
			slv_args_def_0 SAD ⊢|
	
		§ @.slv_dt_def { nn kl cl { mmv mev ns_m il } an mtv al yx ns_t ns_e dl { dd ep0 } } 
			$ dl ⊢ 
			∐ _cns◂{ { cn y } dl } . 
				BST_s8.ini {} ⊢ l2
				slv_type.f { { { mmv mev ns_m ns_e il } mtv ns_t al l2 } y } ⊢ { { { mmv mev ns_m ns_e il } mtv ns_t al _ } k } 
				$ yx ⊢ yx,yx0 
				$ k ⊢ k,k0 
				$ ⟦ k0 < kl ⟧ ⊢ kl
				$ TX.t_ctr◂{ k yx0 } ⊢ yy,yy0 
				T.pnt_type_k yy0 ⊢ syy
				^ dd,cn,syy ⊢ dd,cn,_,ep1 
					0'*"\t" "§ " 1' " : " 2' "\n" // 
				$ _cns◂{ ep1 ep0 } ⊢ ep0 
				$ nn ⊢ nn,nn0 
				$ an ⊢ an,an0 
				$ yy ⊢ yy,yy0,yy1 
				$ an0 ⊢ an0,an00 
				$ nn0 ⊢ nn0,nn00 
				T.newvar_ln yy1 ⊢ p
				k_ctr { an0 nn0 yy0 } ⊢ k 
				$ RP.atm◂k ⊢ k 
				add_e_v { ns_e cn k } ⊢ { ns_e cn _ } 
				$ ⟦ { cn an00 nn00 p } < cl ⟧ ⊢ cl 
				_inc an ⊢ an 
				slv_dt_def { nn kl cl { mmv mev ns_m il } an mtv al yx ns_t ns_e dl { dd ep0 } } ⊢|
			∐. _nil◂{} . 
				lst.rev kl ⊢ kl 
				∎ { cl { mmv mev ns_m il } an mtv al yx ns_t ns_e { dd ep0 } nn kl }
	
		§§ slv_dt_clq 
			§	@.lp0 { ns_T q { l0 l1 l2 } tx_n mtv ns_t } 
					$ q ⊢ 
					∐ _cns◂{ { { w_T w } d } q } . 
						is_ge { w_T ns_T } ⊢ { _ ns_T } 
						$ d ⊢ 
						∐ ast.dt_def◂{ as cn dl } .
							$ tx_n ⊢ tx_n,x,x0 
							_inc tx_n ⊢ tx_n 
							slv_args_def { as x } ⊢ { al yk yx ql } 
							add_t { ns_t w yk } ⊢ ns_t
							lp0 { ns_T q { _cns◂{ { cn al yx dl x0 ql } l0 } l1 l2 } tx_n mtv ns_t } ⊢| 
						∐. ast.dt_ln◂{ as y } . 
							BST_s8.set { l1 { w { as y } } } ⊢ { l1 { w o } }
							nnt o ⊢ {}
							lp0 { ns_T q { l0 l1 ⟦ w < l2 ⟧ } tx_n mtv ns_t } ⊢| 
					∐. _nil◂{} .
						∎ { ns_T { l0 l1 l2 } tx_n mtv ns_t } 
			§	@.lp0_ln { { l1 l2 } { mmv mev ns_m ns_e il } tx_n mtv ns_t { dd ep0 } }  
					$ l2 ⊢ 
					∐ _cns◂{ w l2 } . 
						BST_s8.get { l1 w } ⊢ { l1 { w o } }
						$ o ⊢ 
						∐ _some◂{ as y } . 
							_ref.n {} ⊢ T 
							_ref.lc_rpc T ⊢ { T iv } 
							$ w ⊢ w,w0 
							add_t { ns_t w0 T.var◂T.p◂iv } ⊢ ns_t			
							BST_s8.ini {} ⊢ al
							slv_type.args_ln { { { mmv mev ns_m ns_e il } mtv ns_t as al l1 } y } ⊢ { { { mmv mev ns_m ns_e il } mtv ns_t _ l1 } k } 
							$ k ⊢ k,k0 
							T.pnt_type_k k0 ⊢ sv 
							^ dd,w,sv ⊢ dd,_,_,ep1 
								0'*"\t" "¶ " 1' " ~ " 2' // 
							$ _cns◂{ ep1 ep0 } ⊢ ep0 
							_ref.i { T var_ln◂k } ⊢ _
							lp0_ln { { l1 l2 } { mmv mev ns_m ns_e il } tx_n mtv ns_t { dd ep0 } } ⊢|
						∐. _none◂{} . 
							lp0_ln { { l1 l2 } { mmv mev ns_m ns_e il } tx_n mtv ns_t { dd ep0 } } ⊢|	  
					∐. _nil◂{} . 
						∎ { { mmv mev ns_m ns_e il } tx_n mtv ns_t { dd ep0 } } 
			§ @.lp0_def { cll l0 { mmv mev ns_m ns_e il } tav tx_n mtv ns_t { dd ep0 } } 
					$ l0 ⊢ 
					∐ _cns◂{ { nn al yx dl x ql } l0 } . 
						slv_dt_def { nn ⟦⟧ ⟦⟧ { mmv mev ns_m il } %[ 0r ] mtv al yx ns_t ns_e dl { dd ep0 } } ⊢ { cl { mmv mev ns_m il } an mtv al yx ns_t ns_e { dd ep0 } ac kl }
						set_tv { tav x { ac ql kl } } ⊢ { tav _ } 
						$ ⟦ cl < cll ⟧ ⊢ cll 
						lp0_def { cll l0 { mmv mev ns_m ns_e il } tav tx_n mtv ns_t { dd ep0 } } ⊢| 
					∐. _nil◂{} .
						∎ { cll { mmv mev ns_m ns_e il } tav tx_n mtv ns_t { dd ep0 } }	
			§ f # { ns_T q { mmv mev ns_m ns_e il } tx_n tav mtv ns_t { dd ep0 } }
				BST_s8.ini {} ⊢ l1 
				lp0 { ns_T q { ⟦⟧ l1 ⟦⟧ } tx_n mtv ns_t } ⊢ { ns_T { l0 l1 l2 } tx_n mtv ns_t }
				lp0_ln { { l1 l2 } { mmv mev ns_m ns_e il } tx_n mtv ns_t { dd ep0 } } ⊢ { { mmv mev ns_m ns_e il } tx_n mtv ns_t { dd ep0 } } 
				lp0_def { ⟦⟧ l0 { mmv mev ns_m ns_e il } tav tx_n mtv ns_t { dd ep0 } } ⊢ { cll { mmv mev ns_m ns_e il } tav tx_n mtv ns_t { dd ep0 } }
				∎ { cll ns_T { mmv mev ns_m ns_e il } tx_n tav mtv ns_t { dd ep0 } }
			∎∎
	§ inl_op { mfv w c b v }
		=+ b'
		∐ 
			$ mfv ⊢ apv 
			_ref.mk { w c ⟦⟧ } ⊢ lcp
			$ apv ⊢ mfv
			∎ { mfv RP.atm◂ast.k_op◂{ bl.f◂{} lcp v } }
		∐ 
			$ mfv ⊢ apv 
			_ref.mk { w c ⟦⟧ } ⊢ lcp
			$ apv ⊢ mfv
			∎ { mfv RP.atm◂ast.k_op◂{ bl.t◂{} lcp v } }
		∐. 
			∎ { mfv c }
	§ inl_op_gnr { mfv w p c b v }
		=+ b'
		∐ 
			$ mfv ⊢ apv 
			_ref.mk { w c ⟦⟧ } ⊢ lcp
			$ apv ⊢ mfv
			∎ { mfv RP.atm◂ast.k_op_gnr◂{ p bl.f◂{} lcp v } }
		∐ 
			$ mfv ⊢ apv 
			_ref.mk { w c ⟦⟧ } ⊢ lcp
			$ apv ⊢ mfv
			∎ { mfv RP.atm◂ast.k_op_gnr◂{ p bl.t◂{} lcp v } }
		∐. 
			∎ { mfv RP.atm◂ast.k_fnc◂{ p c } }			
	§§ slv_lc_clq 
			§ f_l0_i { { ns_T mfv env0 cl { gfl fl ql gl } } { { w_T w } le } }
				is_ge { w_T ns_T } ⊢ { _ ns_T } 
				BST_s8.set { cl { w {} } } ⊢ { cl { w o } } 
				nnt_emt { o w } ⊢ w 
				$ env0 ⊢ { SC mmv mev mtv ns_m ns_e ns_t il }
				$ le ⊢ 
				∐ ast.lc_def◂{ o_t d if lc } . 
					$ w ⊢ w,w0
					$ o_t ⊢ 
					∐ _some◂p .  
						newvar_l %[ 1r ]  ⊢ { lv ys }
						newvar_l lv  ⊢ { lv yd }
						$ ys ⊢ ys0,ys1
						$ yd ⊢ yd0,yd1
						$ TX.t_ct_imp◂{ ys1 yd1 } ⊢ yx
						_ref.n {} ⊢ LCP
						_ref.lc_rpc LCP ⊢ { LCP po }
						of_tpl_ptn { {} p } ⊢ { {} p } 
						tpl_ptn { { _nil◂{} lv  } p } ⊢ { { wl lv  } p y_c } 
						add_e { ns_e w RP.atm◂ast.k_op_gnr◂{ p bl.f◂{} po { ys0 yd0 } } } ⊢ { ns_e en0 }
						$ { SC mmv mev mtv ns_m ns_e ns_t il } ⊢ env0 
						$ lv ⊢ _  
						∎ { ns_T mfv env0 cl { ⟦ { LCP { y_c wl } en0 w0 yx d lc } < gfl ⟧ fl ql gl } }
					∐. _none◂{} . 
						newvar_l %[ 1r ]  ⊢ { lv yx }
						$ yx ⊢ yx0,yx1
						T.newvar_ln yx1 ⊢ iy 
						_ref.n {} ⊢ LCP
						_ref.lc_rpc LCP ⊢ { LCP po }
						add_e { ns_e w RP.atm◂ast.k_op◂{ bl.f◂{} po iy } } ⊢ { ns_e en0 }
						$ { SC mmv mev mtv ns_m ns_e ns_t il } ⊢ env0 
						$ lv ⊢ _  
						∎ { ns_T mfv env0 cl { gfl ⟦ { LCP en0 w0 yx0 d lc } < fl ⟧ ql gl } }
				∐ ast.lc_grm◂ _ .
					∎|
				∐ ast.lc_neg◂{} .
					∎| 
				∐. ast.lc_ln◂c .
					newvar_l %[ 1r ]  ⊢ { lv yx }
					EVV.npt {} ⊢ EN 
					EVV.lc_rpc EN ⊢ { EN i0 }
					$ w ⊢ w,w0 
					NS_E.set { ns_e { w i0 } } ⊢ { ns_e _ } 
					$ { SC mmv mev mtv ns_m ns_e ns_t il } ⊢ env0 
					∎ { ns_T mfv env0 cl { gfl fl ⟦ { w0 EN c yx } < ql ⟧ gl } }
				
			§ f_l0 = lst.fld_l◂◂f_l0_i 
			§ @.f_l1_q { { al apv env0 } ql }
				$ ql ⊢ 
				∐ _cns◂{ { w en c yx } ql } .
					slv_n.ct_ptn { { apv env0 } c } ⊢ { { apv env0 } c }   
					$ yx ⊢ yx,yx0 
					T.newvar_ln yx0 ⊢ v0
					$ c ⊢ c,c0 
					$ v0 ⊢ v0,v1 
					EVV.set { en c0 } ⊢ en 
					f_l1_q { { al apv env0 } ql } ⊢ { { al apv env0 } ql }
					slv.ct_ptn { { al %[ 1r ] apv } c } ⊢ { { al lv apv } c y0 } 
					$ yx ⊢ yx,yx0 
					T.unify.f { yx0 y0 } ⊢ {} 
					∎ { { al apv env0 } ⟦ { w en c v0 yx } < ql ⟧ }
				
				∐. _nil◂{} .
					∎ { { al apv env0 } ⟦⟧ } 
			§ f_l2_q_i # { { SC mfv dd ep0 } { w en c v y } } 
					gen { %[ 0r ] y } ⊢ {  _ y } 
					$ y ⊢ y,y0 
					T.pnt_type_k y0 ⊢ sy
					^ dd,w,sy ⊢ dd,_,_,ep1 
						0'*"\t" "§ " 1' " : " 2' "\n" // 
					rp8.add_s8 { ep0 ep1 } ⊢ ep0 
					EVV.exc_evv { en c } ⊢ { _ _ } 
					∎ { SC mfv dd ep0 }
			§ f_l2_q = lst.fld_l◂◂f_l2_q_i 
			§ f_l1_i { { al apv lv env0 } { lcp en w yx d lc } } 
				slv_n.RE.ini {} ⊢ re 
				$ %[ 1r ] ⊢ r_n 
				slv_n.crt_mtc_ptn_al { { { apv env0 } r_n re ⟦⟧ ⟦⟧ ⟦⟧ } d } ⊢ { { { apv env0 } r_n re dl al0 adl } d } 
				slv_n.iso_rl { re adl al0 } ⊢ { re o } 
				slv_n.r { { { apv env0 } r_n re } lc } ⊢ { { { apv env0 } r_n _ } lc } 
				slv_n.iso { o lc } ⊢ lc 
				slv_n.dlt { dlt_ap_k◂{} dl lc } ⊢ lc  
				slv_gl.r { { id_k◂{} d } lc } ⊢ lc
				_inc lv ⊢ lv 
				slv.ct_ptn { { al lv apv } lc } ⊢ { { al lv apv } lc y0 } 
				_dec lv ⊢ lv 
				gen { lv y0 } ⊢ {  lv y0 }
				inst { lv y0 } ⊢ { lv y0 } 
				$ yx ⊢ yx,yx0 
				T.unify.f { y0 yx0 } ⊢ {} 
				∎ { { al apv lv env0 } { lcp en lc w yx } } 
			§ f_l1 = lst.map_l◂◂f_l1_i 	
			§ f_gl1_i { { al apv lv env0 } { lcp { y_c wl } en w yx d lc } } 
				slv_n.RE.ini {} ⊢ re 
				$ env0 ⊢ { SC mmv mev mtv ns_m ns_e ns_t il }
				tpl_push { ns_e wl } ⊢ { ns_e wl } 
				$ %[ 1r ] ⊢ r_n 
				slv_n.crt_mtc_ptn_al { { { apv { SC mmv mev mtv ns_m ns_e ns_t il } } r_n re ⟦⟧ ⟦⟧ ⟦⟧ } d } ⊢ { { { apv { SC mmv mev mtv ns_m ns_e ns_t il } } r_n re dl al0 adl } d } 
				slv_n.iso_rl { re adl al0 } ⊢ { re o } 
				slv_n.r { { { apv { SC mmv mev mtv ns_m ns_e ns_t il } } r_n re } lc } ⊢ { { { apv { SC mmv mev mtv ns_m ns_e ns_t il } } r_n _ } lc } 
				slv_n.iso { o lc } ⊢ lc 
				slv_n.dlt { dlt_ap_k◂{} dl lc } ⊢ lc 
				tpl_pop { ns_e wl } ⊢ ns_e 
				$ { SC mmv mev mtv ns_m ns_e ns_t il } ⊢ env0
				slv_gl.r { { id_k◂{} d } lc } ⊢ lc
				_inc lv ⊢ lv 
				slv.ct_ptn { { al lv apv } lc } ⊢ { { al lv apv } lc y0 } 
				_dec lv ⊢ lv 
				gen { lv y0 } ⊢ {  lv y0 }
				$ TX.t_ct_imp◂{ y_c y0 } ⊢ y0 
				inst { lv y0 } ⊢ { lv y0 }
				$ yx ⊢ yx,yx0 
				T.unify.f { y0 yx0 } ⊢ {} 
				∎ { { al apv lv env0 } { lcp en lc w yx } } 
			§ f_gl1 = lst.map_l◂◂f_gl1_i 	
			§ f_l2_i { { lv mfv SC { dd ep0 } } { lcp en lc w yx } }  
					gen { lv yx } ⊢ {  lv yx } 
					$ yx ⊢ yx,yx0 
					T.pnt_type_k yx0 ⊢ syx
					$ w ⊢ w,w0 
					_ref.i { lcp { w0 lc ⟦⟧ } } ⊢ _
					^ dd,w,syx ⊢ dd,_,_,ep1 
						0'*"\t" "§ " 1' " : " 2' "\n" // 
					rp8.add_s8 { ep0 ep1 } ⊢ ep0 
					∎ { lv mfv SC { dd ep0 } } 
			§ f_l2 = lst.fld_l◂◂f_l2_i 
			§ f_gl2_i { { lv mfv { dd ep0 } } { lcp en lc w yx } }  
				gen { lv yx } ⊢ {  lv yx } 
				$ yx ⊢ yx,yx0 
				T.pnt_type_k yx0 ⊢ syx
				$ w ⊢ w,w0 
				_ref.i { lcp { w0 lc ⟦⟧ } } ⊢ _ 
				^ dd,w,syx ⊢ dd,_,_,ep1 
					0'*"\t" "§ " 1' " : " 2' "\n" // 
				rp8.add_s8 { ep0 ep1 } ⊢ ep0 
				∎ { lv mfv { dd ep0 } } 
			§ f_gl2 = lst.fld_l◂◂f_gl2_i
			§	f { ns_T mfv env0 tav q { dd ep0 } } 
				BST_s8.ini {} ⊢ cl 
				f_l0 { { ns_T mfv env0 cl { ⟦⟧ ⟦⟧ ⟦⟧ ⟦⟧ } } q } ⊢ { ns_T mfv env0 cl { gq q ql gl } } 
				$ cl ⊢ _ 
				$ mfv ⊢ apv 
				f_l1_q { { ⟦⟧ apv env0 } ql } ⊢ { { al apv env0 } ql }
				f_l1 { { al apv %[ 1r ] env0 } q } ⊢ { { al apv _ env0 } yl } 
				f_gl1 { { al apv %[ 1r ] env0 } gq } ⊢ { { al apv _ env0 } gyl } 
				$ apv ⊢ mfv
				$ rp8.e◂{} ⊢ eq0 
				f_gl2 { { %[ 0r ] mfv { dd eq0 } } gyl } ⊢ { _ mfv { dd eq0 } } 
				$ env0 ⊢ { SC mmv mev mtv ns_m ns_e ns_t il }
				f_l2_q { { SC mfv dd eq0 } ql } ⊢ { SC mfv dd eq0 } 
				gen_dlt_lst { %[ 0r ] al } ⊢ _ 
				f_l2 { { %[ 0r ] mfv SC { dd eq0 } } yl } ⊢ { _ mfv SC { dd eq0 } } 
				$ { SC mmv mev mtv ns_m ns_e ns_t il } ⊢ env0
				rp8.to_s8 eq0 ⊢ es0 
				eml es0 ⊢ es0 
				$ ⟦ es0 < ep0 ⟧ ⊢ ep0
				∎ { ns_T mfv env0 tav { dd ep0 } gl } 
			

			∎∎ 
		§ iso_file = _id 
		§ inv_file = _id 

		§  
			@.slv_file_lp { i il SC  MV LCV tx_n NS gel EC }
				inv_file { MV NS LCV EC } ⊢ { { mmv mev mtv mfv mv_n } { ns_T ns_m ns_e ns_t } { tav } { el dd ep0 } }
				s8_of_s8_lst ep0 ⊢ sep0 
				$ ⟦ sep0 ⟧ ⊢ ep0 
				$ gel ⊢ 
				∐ _cns◂{ e gel } . 
				--\
					$ e ⊢ 
					∐ ast.mdl_etr◂{ { w_T w } e } .
						is_ge { w_T ns_T } ⊢ { _ ns_T } 
						$ e ⊢ 
						∐ ast.mdl_def◂gel0 . 
							^ dd,w ⊢ dd,w,ep1 
								0'*"\t" "§§ " 1' "\n" // 
							$ _cns◂{ ep1 ep0 } ⊢ ep0
							_inc dd ⊢ dd 
							inc_x mv_n ⊢ { mv_n_0 mv_n }
							$ _cns◂{ { i ns_m ns_e ns_t } il } ⊢ il 
							NS_M.ini {} ⊢ ns_m 
							NS_E.ini {} ⊢ ns_e 
							NS_T.ini {} ⊢ ns_t 
							iso_file { { mmv mev mtv mfv mv_n } { ns_T ns_m ns_e ns_t } {    tav } { el dd ep0 } } ⊢ {  MV NS0 LCV EC }
							slv_file_lp { mv_n_0 il SC  MV  LCV tx_n NS0 gel0 EC } ⊢ { mv_n_0 il SC  MV  LCV tx_n NS0 EC }
							inv_file { MV NS0 LCV EC } ⊢ { { mmv mev mtv mfv mv_n } { ns_T ns_m ns_e ns_t } {    tav } { el dd ep0 } }
							MMV.set { mmv mv_n_0 ns_m } ⊢ { mmv mv_n_0 } 
							MTV.set { mtv mv_n_0 ns_t } ⊢ { mtv mv_n_0 } 
							MEV.set { mev mv_n_0 ns_e } ⊢ { mev mv_n_0 } 
							^ dd ⊢ dd,ep1 
								0'*"\t" "∎∎\n" // 
							$ _cns◂{ ep1 ep0 } ⊢ ep0
							_dec dd ⊢ dd 
							$ il ⊢ 
							∐ _cns◂{ { i ns_m ns_e ns_t } il } . 
								NS_M.set { ns_m { w mv_n_0 } } ⊢ { ns_m _ }
								iso_file { { mmv mev mtv mfv mv_n } { ns_T ns_m ns_e ns_t } { tav } { el dd ep0 } } ⊢ {  MV NS LCV EC }
								slv_file_lp { i il SC  MV  LCV tx_n NS gel EC } ⊢|
							∐. _nil◂{} . 
								_emt_im◂◂76r {} ⊢ {} 
								∎| 
						∐. ast.mdl_ln◂n0 .						
							$ n0 ⊢ n0,n0_0 
							ast.pnt_name n0_0 ⊢ sn0  							
							^ dd,w,sn0 ⊢ dd,w,_,ep1 
								0'*"\t" "§§ " 1' " = " 2' "\n" // 
							$ _cns◂{ ep1 ep0 } ⊢ ep0
							$ n0 ⊢ n0,n0_0 
							slv_ns_m { n0 mmv ns_m il } ⊢ { mmv ns_m il i_m } 
							BST_s8.set { ns_m { w i_m } } ⊢ { ns_m _ } 
							iso_file { { mmv mev mtv mfv mv_n } { ns_T ns_m ns_e ns_t } { tav } { el dd ep0 } } ⊢ {  MV NS LCV EC }
							slv_file_lp { i il SC  MV LCV tx_n NS gel EC } ⊢|
					∐ ast.lc_ap_t◂{ { w_T w } as y } .
						is_ge { w_T ns_T } ⊢ { _ ns_T } 
						$ { mmv mev ns_m ns_e il } ⊢ env0
						slv_type.args_T { { env0 mtv ns_t as } y } ⊢ { { { mmv mev ns_m ns_e il } mtv ns_t } k } 
						$ mfv ⊢ apv 
						AP.new k ⊢ c 
						$ apv ⊢ mfv 
						add_e { ns_e w c } ⊢ { ns_e _ } 
						iso_file { { mmv mev mtv mfv mv_n } { ns_T ns_m ns_e ns_t } { tav } { el dd ep0 } } ⊢ { MV NS LCV EC }
						slv_file_lp { i il SC  MV  LCV tx_n NS gel EC } ⊢|	
					∐ ast.lc_ap◂{ n c } .
						$ mfv ⊢ apv 
						slv_n.slv { apv n { mmv mev } { ns_m ns_e } il } ⊢ { apv { mmv mev } { ns_m ns_e } il k }
						slv_n.ct_ptn { { apv { SC mmv mev mtv ns_m ns_e ns_t il } } c } ⊢ { { apv { SC mmv mev mtv ns_m ns_e ns_t il } } c } 
						slv.ct_ptn { { ⟦⟧ %[ 1r ] apv } c } ⊢ { { al lv apv } c yx } 
						$ apv ⊢ mfv
						_dec lv ⊢ lv 
						
						gen { lv yx } ⊢ {  _ yx } 
						gen_dlt_lst { %[ 0r ] al } ⊢ _
						$ mfv ⊢ apv 
						$ RP.atm◂k ⊢ k 
						AP.add { k c yx } ⊢ {} 
						$ apv ⊢ mfv 
						iso_file { { mmv mev mtv mfv mv_n } { ns_T ns_m ns_e ns_t } { tav } { el dd ep0 } } ⊢ { MV NS LCV EC }
						slv_file_lp { i il SC  MV  LCV tx_n NS gel  EC } ⊢|	
					∐ ast.lc_etr◂{ { w_T w } e } .
						is_ge { w_T ns_T } ⊢ { _ ns_T } 
						$ e ⊢
						∐ ast.lc_def◂{ o_t d if lc } .
							slv_n.RE.ini {} ⊢ ns_r_e 
							$ %[ 1r ] ⊢ r_n 
							∐ o_t ⊢ _none◂{} . 
								$ %[ 1r ] ⊢ lv 
								$ mfv ⊢ apv 
								slv_n.crt_mtc_ptn_al { { { apv { SC mmv mev mtv ns_m ns_e ns_t il } } r_n ns_r_e ⟦⟧ ⟦⟧ ⟦⟧ } d } ⊢ { { { apv { SC mmv mev mtv ns_m ns_e ns_t il } } rv_n_e ns_r_e dl al adl } d } 
								slv_n.iso_rl { ns_r_e adl al } ⊢ { ns_r_e o }  
								slv_n.r { { { apv { SC mmv mev mtv ns_m ns_e ns_t il } } rv_n_e ns_r_e } lc } ⊢ { { { apv { SC mmv mev mtv ns_m ns_e ns_t il } } rv_n_e _ } lc } 
								slv_n.iso { o lc } ⊢ lc 
								slv_n.dlt { dlt_ap_k◂{} dl lc } ⊢ lc 
								slv_gl.r { { id_k◂{} d } lc } ⊢ lc
								_inc lv ⊢ lv 
								slv.ct_ptn { { ⟦⟧ lv apv } lc } ⊢ { { al lv apv } lc y0 } 
								$ apv ⊢ mfv 
								_dec lv ⊢ lv 
								gen { lv y0 } ⊢ {  _ y0 }
								gen_dlt_lst { %[ 0r ] al } ⊢ _
								$ y0 ⊢ yx,yx0 
								T.pnt_type_k yx0 ⊢ syx 
								^ dd,w,syx ⊢ dd,w,_,ep1 
									0'*"\t" "§ " 1' " : " 2' "\n" // 
								eml ep1 ⊢ ep1 
								$ _cns◂{ ep1 ep0 } ⊢ ep0 
								T.newvar_ln yx ⊢ iy0
								$ w ⊢ w,w0 
								inl_op { mfv w0 lc if iy0 } ⊢ { mfv c } 
								add_e { ns_e w c } ⊢ { ns_e _ }
								iso_file { { mmv mev mtv mfv mv_n } { ns_T ns_m ns_e ns_t } { tav } { el dd ep0 } } ⊢ {  MV NS LCV EC }
								slv_file_lp { i il SC  MV LCV tx_n NS gel EC } ⊢|
							∐. o_t ⊢ _some◂p . 
								of_tpl_ptn { {} p } ⊢ { {} p } 
								$ %[ 1r ] ⊢ lv 
								tpl_ptn { { _nil◂{} lv  } p } ⊢ { { wl lv  } p y_c } 
								$ mfv ⊢ apv 
								tpl_push { ns_e wl } ⊢ { ns_e wl } 
								slv_n.crt_mtc_ptn_al { { { apv { SC mmv mev mtv ns_m ns_e ns_t il } } r_n ns_r_e ⟦⟧ ⟦⟧ ⟦⟧ } d } ⊢ { { { apv { SC mmv mev mtv ns_m ns_e ns_t il } } rv_n_e ns_r_e dl al adl } d } 
								slv_n.iso_rl { ns_r_e adl al } ⊢ { ns_r_e o }
								slv_n.r { { { apv { SC mmv mev mtv ns_m ns_e ns_t il } } rv_n_e ns_r_e } lc } ⊢ { { { apv { SC mmv mev mtv ns_m ns_e ns_t il } } rv_n_e _ } lc } 
								tpl_pop { ns_e wl } ⊢ ns_e 
								slv_n.iso { o lc } ⊢ lc 
								slv_n.dlt { dlt_ap_k◂{} dl lc } ⊢ lc 
								slv_gl.r { { id_k◂{} d } lc } ⊢ lc
								_inc lv ⊢ lv 
								slv.ct_ptn { { ⟦⟧ lv apv } lc } ⊢ { { al lv apv } lc y0 } 
								$ apv ⊢ mfv
								_dec lv ⊢ lv 
								gen { lv y0 } ⊢ {  lv y0 }
								_dec lv ⊢ lv 
								gen { lv y_c } ⊢ {  _ y_c } 
								gen_dlt_lst { %[ 0r ] al } ⊢ _
								$ y_c ⊢ y_c,y_c0 
								$ y0 ⊢ y0,y00 
								T.pnt_type_k ct_imp◂{ y_c0 y00 } ⊢ syx 
								^ dd,w,syx ⊢ dd,w,_,ep1 
									0'*"\t" "§ " 1' " : " 2' "\n" // 
								eml ep1 ⊢ ep1 
								$ _cns◂{ ep1 ep0 } ⊢ ep0 
								$ w ⊢ w,w0 
								inl_op_gnr { mfv w0 p lc if { y_c y0 } } ⊢ { mfv c } 
								add_e { ns_e w c } ⊢ {   ns_e _ }
								iso_file { { mmv mev mtv mfv mv_n } { ns_T ns_m ns_e ns_t } {    tav } { el dd ep0 } } ⊢ {  MV NS LCV EC }
								slv_file_lp { i il SC  MV LCV tx_n NS gel EC } ⊢|	
						∐ ast.lc_neg◂{} . 
							NS_E.get { ns_e w } ⊢ { ns_e { _ o } } 
							smt o ⊢ _ 
							iso_file { { mmv mev mtv mfv mv_n } { ns_T ns_m ns_e ns_t } {    tav } { el dd ep0 } } ⊢ {  MV NS LCV EC }
							slv_file_lp { i il SC  MV  LCV tx_n NS gel  EC } ⊢|
						∐ ast.lc_ln◂c . 
							$ mfv ⊢ apv 
							slv_n.ct_ptn { { apv { SC mmv mev mtv ns_m ns_e ns_t il } } c } ⊢ { { apv { SC mmv mev mtv ns_m ns_e ns_t il } } c } 
							slv.ct_ptn { { ⟦⟧ %[ 1r ] apv } c } ⊢ { { al lv apv } c yx } 
							$ apv ⊢ mfv 
							_dec lv ⊢ lv 
							gen_dlt { lv yx } ⊢ _ 
							gen_dlt_lst { %[ 0r ] al } ⊢ _
							add_e { ns_e w c } ⊢ {   ns_e _ } 
							iso_file { { mmv mev mtv mfv mv_n } { ns_T ns_m ns_e ns_t } { tav } { el dd ep0 } } ⊢ {  MV NS LCV EC }
							slv_file_lp { i il SC  MV LCV tx_n NS gel EC } ⊢|
						∐. ast.lc_grm◂{ o_g g } . 
							_emt_im◂◂33r {} ⊢ {} 
							∎| 
					∐ ast.lc_qlq_etr◂q . 
						ip.grm.f_clq { %[ 0r ] %[ 0r ] q } ⊢ { _ _ q }
						slv_lc_clq.f { ns_T mfv { SC mmv mev mtv ns_m ns_e ns_t il } tav q { dd ep0 } } ⊢ { ns_T mfv { SC mmv mev mtv ns_m ns_e ns_t il } tav { dd ep0 } gl }
						iso_file { { mmv mev mtv mfv mv_n } { ns_T ns_m ns_e ns_t } { tav } { el dd ep0 } } ⊢ {  MV NS LCV EC }
						slv_file_lp { i il SC  MV LCV tx_n NS gel EC } ⊢|
					∐ ast.dt_etr◂{ { w_T w } e } .
						is_ge { w_T ns_T } ⊢ { _ ns_T } 
						$ e ⊢ 
						∐ ast.dt_def◂{ as cn dl } .
							$ tx_n ⊢ tx_n,x,x0
							_inc tx_n ⊢ tx_n
							$ w ⊢ w,w0 
							slv_args_def { as x } ⊢ { al yk yx ql } 
							add_t { ns_t w yk } ⊢ ns_t
							slv_dt_def { cn ⟦⟧ ⟦⟧ { mmv mev ns_m il } %[ 0r ] mtv al yx ns_t ns_e dl { dd ep0 } } ⊢ { cl { mmv mev ns_m il } an mtv al yx ns_t ns_e { dd ep0 } ac kl }
							set_tv { tav x0 { ac ql kl } } ⊢ { tav x } 
							$ cl ⊢ cl,cl0,cl1 
							mk_ap.emt.f_gl cl ⊢ { e0 e1 } 
							$ ⟦ e0 e1 < gel ⟧ ⊢ gel
							mk_ap.dlt.f_gl cl0 ⊢ { e0 e1 } 
							$ ⟦ e0 e1 < gel ⟧ ⊢ gel
							mk_ap.rpc.f_gl cl1 ⊢ { e0 e1 } 
							$ ⟦ e0 e1 < gel ⟧ ⊢ gel
							iso_file { { mmv mev mtv mfv mv_n } { ns_T ns_m ns_e ns_t } {    tav } { el dd ep0 } } ⊢ {  MV NS LCV EC }
							slv_file_lp { i il SC MV LCV tx_n NS gel  EC } ⊢|
						∐. ast.dt_ln◂{ as y } . 
							$ { mmv mev ns_m ns_e il } ⊢ env0
							BST_s8.ini {} ⊢ al
							BST_s8.ini {} ⊢ l2
							slv_type.args_ln { { env0 mtv ns_t as al l2 } y } ⊢ { { { mmv mev ns_m ns_e il } mtv ns_t _ _ } k } 
							$ k ⊢ k,k0 
							T.pnt_type_k k0 ⊢ sk 
							^ dd,w,sk ⊢ dd,w,_,ep1 
								0'*"\t" "¶ " 1' " ~ " 2' // 
							$ _cns◂{ ep1 ep0 } ⊢ ep0 
							add_t { ns_t w k } ⊢ ns_t 
							iso_file { { mmv mev mtv mfv mv_n } { ns_T ns_m ns_e ns_t } {    tav } { el dd ep0 } } ⊢ {  MV NS LCV EC }
							slv_file_lp { i il SC  MV LCV tx_n NS gel EC } ⊢|
						
					∐. ast.dt_qlq_etr◂q .
						slv_dt_clq.f { ns_T q { mmv mev ns_m ns_e il } tx_n tav mtv ns_t { dd ep0 } } ⊢ { cll ns_T { mmv mev ns_m ns_e il } tx_n tav mtv ns_t { dd ep0 } }
						$ cll ⊢ cll,cll0,cll1
						mk_ap.emt.lp_gl { gel cll } ⊢ gel 
						mk_ap.dlt.lp_gl { gel cll0 } ⊢ gel 
						mk_ap.rpc.lp_gl { gel cll1 } ⊢ gel 
						iso_file { { mmv mev mtv mfv mv_n } { ns_T ns_m ns_e ns_t } { tav } { el dd ep0 } } ⊢ {  MV NS LCV EC }
						slv_file_lp { i il SC  MV LCV tx_n NS gel EC } ⊢|
				∐. _nil◂{} . 
					iso_file { { mmv mev mtv mfv mv_n } { ns_T ns_m ns_e ns_t } { tav } { el dd ep0 } } ⊢ {  MV NS LCV EC }
					∎ { i il SC  MV LCV tx_n NS EC }
			§ slv_file { ael gel }
				$ %[ TX.N0 ] ⊢ tx_n 
    		--_A tx_n ⊢ tx_n 
				NS_M.ini {} ⊢ ns_m 
				NS_T.ini {} ⊢ ns_t 
				NS_E.ini {} ⊢ ns_e 
    		--C◂◂4r {} ⊢ {}
				MMV.ini {} ⊢ mmv 
    		--D◂◂5r {} ⊢ {}
				MTV.ini {} ⊢ mtv 
				--D◂◂0r {} ⊢ {}
				MEV.ini {} ⊢ mev 
				$ %[ 1r ] ⊢ mv_n
				$ %[ 0r ] ⊢ i 
				$ %[ 0r ] ⊢ lv 

				ini_tv_n %[ 800r ] ⊢ { _ tav }
				
				T.ini_q {} ⊢ t0  
				$ t0 ⊢ ia0,t0_0 
				$ T.var◂T.p◂t0_0 ⊢ v 
				$ v ⊢ v,v0 
				set_tv { tav %[ TX.adt.lst ] { %[ 2r ] ⟦ ia0 ⟧ ⟦ TX.cns2◂{ v0 TX.lst◂v } TX.cns0◂{} ⟧ } } ⊢ { tav _ }

				T.ini_q {} ⊢ t0 
				$ t0 ⊢ ia0,t0_0 
				$ T.var◂T.p◂t0_0 ⊢ v 
				set_tv { tav %[ TX.adt.opn ] { %[ 2r ] ⟦ ia0 ⟧ ⟦ v TX.cns0◂{} ⟧ } } ⊢ { tav _ }
				
				-- apv 
				-- emt 
				T.newvar_q {} ⊢  t0  
				$ t0 ⊢ t0,t1  
				AP.new TX.t_imp◂{ t0 t1 } ⊢ c0
				
				_mk_arr_x { %[ 1r ] c0 } ⊢ { _ _ apv } 
				-- emt_mo 
				T.newvar_q {} ⊢  t0    
				T.newvar_q {} ⊢  s0  
				$ s0 ⊢ s0,s1
				$ t0 ⊢ t0,t1 
				$ TX.t_ct_imp◂{ TX.cns2◂{ TX.s8◂{} TX.t_ctr◂{ t0 s0 } } TX.t_mtc◂{ t1 s1 } }	⊢ tx 
				AP.new tx ⊢ c1
				_push { c1 apv } ⊢ apv
				-- dlt 
				T.newvar_q {} ⊢  t0  
				AP.new TX.t_imp◂{ t0 TX.cns0◂{} } ⊢ c0
				_push { c0 apv } ⊢ apv
				-- dlt_mo 
				T.newvar_q {} ⊢  t0    
				T.newvar_q {} ⊢  s0  
				$ s0 ⊢ s0,s1,s2
				$ TX.t_ct_imp◂{ TX.cns3◂{ TX.s8◂{} TX.t_ctr◂{ t0 s0 } TX.t_mtc◂{ s1 TX.cns0◂{} } } TX.t_mtc◂{ s2 TX.cns0◂{} } }	⊢ tx 
				AP.new tx ⊢ c1
				_push { c1 apv } ⊢ apv
				-- rpc 
				T.newvar_q {} ⊢  t0 
				$ t0 ⊢ t0,t1,t2 
				AP.new TX.t_imp◂{ t0 TX.cns2◂{ t1 t2 } } ⊢ c0
				_push { c0 apv } ⊢ apv
				-- rpc_mo 
				T.newvar_q {} ⊢  t0    
				T.newvar_q {} ⊢  s0  
				$ s0 ⊢ s0,s1,s2
				$ t0 ⊢ t0,t1,t2,t3,t4 
				$ TX.t_ct_imp◂{ TX.cns3◂{ TX.s8◂{} TX.t_ctr◂{ t0 s0 } TX.t_mtc◂{ s1 TX.cns2◂{ t1 t2 } } } TX.t_mtc◂{ s2 TX.cns2◂{ t3 t4 } } }	⊢ tx 
				AP.new tx ⊢ c1
				_push { c1 apv } ⊢ apv
				-- emt_adt 
				T.newvar_q {} ⊢  t0 
				$ t0 ⊢ t0,t1 
				AP.new TX.t_imp◂{ TX.t_adt◂t0 TX.t_adt◂t1 } ⊢ c0
				_push { c0 apv } ⊢ apv
				-- dlt_adt 
				T.newvar_q {} ⊢  t0  
				AP.new TX.t_imp◂{ TX.t_adt◂t0 TX.cns0◂{} } ⊢ c0
				_push { c0 apv } ⊢ apv
				-- rpc_adt 
				T.newvar_q {} ⊢  t0 
				$ TX.t_adt◂t0 ⊢ t0,t1,t2
				AP.new TX.t_imp◂{ t0 TX.cns2◂{ t1 t2 } } ⊢ c0
				_push { c0 apv } ⊢ apv
				-- mt_e 
				T.newvar_q {} ⊢  t0 
				AP.new TX.mt◂t0 ⊢ c0
				_push { c0 apv } ⊢ apv
				-- mt_ne 
				T.newvar_q {} ⊢  t0 
				AP.new TX.mt◂t0 ⊢ c0
				_push { c0 apv } ⊢ apv
				-- mt_le 
				T.newvar_q {} ⊢  t0 
				AP.new TX.mt◂t0 ⊢ c0
				_push { c0 apv } ⊢ apv
				-- mt_g
				T.newvar_q {} ⊢  t0 
				AP.new TX.mt◂t0 ⊢ c0
				_push { c0 apv } ⊢ apv
				-- line
				AP.new TX.grm◂TX.cns0◂{} ⊢ c0
				_push { c0 apv } ⊢ apv
				-- synt
				AP.new TX.grm◂TX.cns0◂{} ⊢ c0
				_push { c0 apv } ⊢ apv
				-- psc
				AP.new TX.t_ct_imp◂{ TX.s8◂{} TX.grm◂TX.cns0◂{} } ⊢ c0
				_push { c0 apv } ⊢ apv

				$ apv ⊢ mfv 
				$ _nil◂{} ⊢ il 
				$ { mmv mev mtv mfv mv_n } ⊢ MV 
				$ { %[ 0r ] ns_m ns_e ns_t } ⊢ NS
				$ { tav } ⊢ LCV 
				$ { log.ini◂{} %[ 0r ] ⟦⟧ } ⊢ EC
				SCM.ini {} ⊢ SCM
				$ SCM ⊢ SC 
				slv_file_lp { i il SC MV LCV tx_n NS ael EC } ⊢ { i il SC  MV LCV tx_n NS EC } 				
				$ NS ⊢ { _ ns_m ns_e ns_t } 
				$ { %[ 1r ] ns_m ns_e ns_t } ⊢ NS
				slv_file_lp { i il SC MV LCV tx_n NS gel EC } ⊢| 
				
  §§ asm 
    § BUF_SIZE = 40000000r
    ¶ lb = _r64

    §§ rx 
			¶ t = _r64 
			§ r13 = 0r  
			§ r14 = 1r 
			§ r8 = 2r 
			§ r9 = 3r 
			§ r10 = 4r 
			§ r11 = 5r 
			§ rcx = 6r 
			§ rdx = 7r
			§ rax = 8r 
			§ rdi = 9r 
			§ rsi = 10r
			§ rbx = 11r 
			§ r12 = 12r
			§ r15 = 13r 
			§ rbp = 14r 
			§ rsp = 15r  
			§ pnt { r b i } 
				=+ r' 
				∐
					blt_im◂◂"r13" { b i } ⊢|
				∐
					blt_im◂◂"r14" { b i } ⊢|
				∐
					blt_im◂◂"r8" { b i } ⊢|
				∐
					blt_im◂◂"r9" { b i } ⊢|
				∐
					blt_im◂◂"r10" { b i } ⊢|
				∐
					blt_im◂◂"r11" { b i } ⊢|
				∐
					blt_im◂◂"rcx" { b i } ⊢|
				∐
					blt_im◂◂"rdx" { b i } ⊢|
				∐
					blt_im◂◂"rax" { b i } ⊢|
				∐
					blt_im◂◂"rdi" { b i } ⊢|
				∐  
					blt_im◂◂"rsi" { b i } ⊢|
				∐  
					blt_im◂◂"rbx" { b i } ⊢|
				∐.  
					∎|
			∎∎
		§§ pf 
      	§ d =^ 
					0d' // 
				§ s8 =^ 
        0' //
      § st_s8 =^ 
				0st' // 
			§ ret =^
        ` ret 
        //
			§ db =^
				0d' "," //
			§ rsp_n =^ 
				"QWORD [rsp+8*0x" 0x' "]" // 
			§ dx =^ 
				"DX(0x" 0x' ")" // 
			§ sx =^ 
				"SX(0x" 0x' ")" // 
			§ glx =^ 
				"GLX(0x" 0x' ")" // 
			§ db_h =^ 
				"LB_" 0d' "_H: dq 0x" 1x' "\n" //
			§ db_etr =^
				"LB_" 0d' ": db " // 
			§ mov_lt_lt =^ 
				"\tMOV_RBX " 0' "," 1' "\n" //
			§ mov_st_st =^ 
				"\tMOV_RBX " 0st' "," 1st' "\n" //
			§ mov_lt_glx =^ 
				"\tmov " 0' ",GLX(0x" 1x' ")\n" //
			§ mov_glx_lt =^ 
				"\tmov GLX(0x" 0x' ")," 1' "\n" //
			§ mov_glx_im =^ 
				"\tmov GLX(0x" 0x' "),0x" 1x' "\n" //
			§ mov_glx =^ 	
				"\tMOV_RBX GLX(0x" 0x' "),GLX(0x" 1x' ")\n" //
      § mov_dx_glx =^ 
				"\tMOV_RDI DX(0x" 0x' "),GLX(0x" 1x' ")\n" //
			§ mov_glx_sx =^ 
				"\tMOV_RDI GLX(0x" 0x' "),SX(0x" 1x' ")\n" //
			§ mov_rsp_n_glx =^
				"\tMOV_RDI QWORD [rsp+8*0x" 0x' "],GLX(0x" 1x' ")\n" //
			§ mov_glx_rsp_n =^
				"\tMOV_RDI GLX(0x" 0x' "),QWORD [rsp+8*0x" 1x' "]\n" //
			§ call_lb =^
        "\tcall LB_" 0d' "\n" //
      § call_lb =^
        "\tcall LB_" 0d' "\n" //
      § etr_lb =^
        "LB_" 0d' ":\n" //
      § jmp_lb =^
        "\tjmp LB_" 0d' "\n" //
      § jz_lb =^
        "\tjz LB_" 0d' "\n" //
      § jnz_lb =^
        "\tjnz LB_" 0d' "\n" //
      § jl_lb =^
        "\tjl LB_" 0d' "\n" //
      § jle_lb =^
        "\tjle LB_" 0d' "\n" //
			§ jg_lb =^
        "\tjg LB_" 0d' "\n" //
      § alc_rcd =^
        "\tALC_RCD " 0d' "," 1st' "\n" //
      § free_rcd =^
        "\tFREE_RCD " 0d' "," 1st' "\n" //
      ∎∎   
		§§ op
			¶ t 
				∐ lt : _s8
				∐ im : _r64 
				∐ rx : rx.t
				∐ rsp_n : _r64 
				∐ dx : _r64 
				∐ sx : _r64 
			
			§ pnt { o b i } 
				$ o ⊢ 
				∐ lt◂s . 
					_pf_x◂◂pf.s8 { b i { s } } ⊢ { b i _ } 
					∎ { b i }
				∐ im◂x . 
					_pf_x◂◂pf.d { b i { x } } ⊢ { b i _ } 
					∎ { b i }					
				∐ rx◂r . 
					rx.pnt { r b i } ⊢| 
				∐ rsp_n◂n . 
					_pf_x◂◂pf.rsp_n { b i { n } } ⊢ { b i _ } 
					∎ { b i }
				∐ dx◂n . 
					_pf_x◂◂pf.dx { b i { n } } ⊢ { b i _ } 
					∎ { b i }
				∐. sx◂n . 
					_pf_x◂◂pf.sx { b i { n } } ⊢ { b i _ } 
					∎ { b i }
			∎∎ 
		¶ a
      ∐ s8 : _s8  
			∐ st_s8 : _st◂_s8 
			∐ mov_op_op : { op.t op.t }
			∐ mov_glx_op : { _r64 op.t }
			∐ mov_op_glx : { op.t _r64 }
      ∐ mov_glx : { _r64 _r64 } 
			∐ db : { _r64 _s8 } 
			∐ ret : {} 
      ∐ call_lb : lb
      ∐ etr_lb : lb 
      ∐ jmp_lb : lb 
      ∐ jz_lb : lb 
      ∐ jnz_lb : lb 
      ∐ jz_bl_lb : { bl.t lb } 
      ∐ jl_lb : lb
			∐ jle_lb : lb  
      ∐ jg_lb : lb 
      ∐ alc_rcd : { _r64 _st◂_s8 }
      ∐ free_rcd : { _r64 _st◂_s8 }
    § mov_op_sx◂{ o i } = mov_op_op◂{ o op.sx◂i } 
		§ mov_glx_sx◂{ i0 i1 } = mov_glx_op◂{ i0 op.sx◂i1 }
		§ mov_dx_glx◂{ i0 i1 } = mov_op_glx◂{ op.dx◂i0 i1 }
		§ mov_glx_rsp_n◂{ i0 i1 } = mov_glx_op◂{ i0 op.rsp_n◂i1 }
		§ mov_rsp_n_glx◂{ i0 i1 } = mov_op_glx◂{ op.rsp_n◂i0 i1 }
		§ mov_glx_im◂{ i x } = mov_glx_op◂{ i op.im◂x }
		§ mov_rx_glx◂{ i j } = mov_op_glx◂{ op.rx◂i j } 
		§ mov_glx_rx◂{ i j } = mov_glx_op◂{ i op.rx◂j } 
		§ mov_rax_glx◂i = mov_op_glx◂{ op.rx◂%[ rx.rax ] i } 
		§ mov_rdi_glx◂i = mov_op_glx◂{ op.rx◂%[ rx.rdi ] i } 
		§ mov_glx_rax◂i = mov_glx_op◂{ i op.rx◂%[ rx.rax ] } 
		§ mov_glx_rdi◂i = mov_glx_op◂{ i op.rx◂%[ rx.rdi ] } 
		¶ @.t 
      ∐ nd : { t t }
      ∐ e : {} 
      ∐ lf : a 
    
    § cct # { a0 a1 } 
      ∎ nd◂{ a0 a1 }
    § of_s8◂s = lf◂s8◂s
    § add_s8 # { e s }
      ∎ nd◂{ e of_s8◂s }
		§ of_st_s8◂s = lf◂st_s8◂s 
		§ add_st_s8 # { e s } 
			∎ nd◂{ e of_st_s8◂s }
		§ add_st_s8_im◂◂S # e 
			_st◂◂S {} ⊢ st 
			∎ nd◂{ e of_st_s8◂st }
		
		§ add_nd # { e a } 
			∎ nd◂{ e lf◂a }
    § pfx_s8 # { s e }
      ∎ nd◂{ of_s8◂s e }
		§ @.mk_db_lp { { S I } s i l } 
			∐ i'=l' . 
      	blt_im◂◂"0,0,0,0,0,0,0,0,0\n" { S I } ⊢ { S I }
				∎ { { S I } s } 
			∐. . 
				_lds { s i } ⊢ { s i b } 
				_inc i ⊢ i 
				_pf_x◂◂pf.db { S I { b } } ⊢ { S I _ }
				mk_db_lp { { S I } s i l } ⊢|
		§ @.to_s8_a { a b i } 
      $ a ⊢ 
      ∐ s8◂s . 
        _pf_x◂◂pf.s8 { b i { s } } ⊢ { b i _ }
        ∎ { b i }  
			∐ st_s8◂s . 
				_pf_x◂◂pf.st_s8 { b i { s } } ⊢ { b i _ } 
				∎ { b i }
			∐ mov_op_op◂{ o0 o1 } . 
				blt_im◂◂"\tMOV_RBX " { b i } ⊢ { b i } 
				op.pnt { o0 b i } ⊢ { b i } 
				blt_im◂◂"," { b i } ⊢ { b i } 
				op.pnt { o1 b i } ⊢ { b i } 
				blt_im◂◂"\n" { b i } ⊢|
			∐ mov_glx◂{ r0 r1 } .
				_pf_x◂◂pf.mov_glx { b i { r0 r1 } } ⊢ { b i _ } 
				∎ { b i }
			∐ mov_op_glx◂{ o r1 } . 
				$ o ⊢ 
				∐ op.lt◂l . 
					_pf_x◂◂pf.mov_lt_glx { b i { l r1 } } ⊢ { b i _ } 
					∎ { b i }
				∐ op.im◂x . 
					∎| 
				∐ op.rx◂r . 
					blt_im◂◂"\tMOV_RBX " { b i } ⊢ { b i } 
					rx.pnt { r b i } ⊢ { b i } 
					blt_im◂◂"," { b i } ⊢ { b i } 
					_pf_x◂◂pf.glx { b i { r1 } } ⊢ { b i _ } 
					blt_im◂◂"\n" { b i } ⊢|
				∐ op.rsp_n◂n . 
					_pf_x◂◂pf.mov_rsp_n_glx { b i { n r1 } } ⊢ { b i _ } 
					∎ { b i }
				∐ op.dx◂r0 . 
					_pf_x◂◂pf.mov_dx_glx { b i { r0 r1 } } ⊢ { b i _ } 
					∎ { b i }
				∐. op.sx◂_ . 
					∎| 
			∐ mov_glx_op◂{ r0 o } . 
				$ o ⊢ 
				∐ op.lt◂l . 
					_pf_x◂◂pf.mov_glx_lt { b i { r0 l } } ⊢ { b i _ } 
					∎ { b i }
				∐ op.im◂x . 
					_pf_x◂◂pf.mov_glx_im { b i { r0 x } } ⊢ { b i _ } 
					∎ { b i }
				∐ op.rx◂r . 
					blt_im◂◂"\tMOV_RBX " { b i } ⊢ { b i } 
					_pf_x◂◂pf.glx { b i { r0 } } ⊢ { b i _ } 
					blt_im◂◂"," { b i } ⊢ { b i } 
					rx.pnt { r b i } ⊢ { b i } 
					blt_im◂◂"\n" { b i } ⊢|
				∐ op.rsp_n◂n . 
					_pf_x◂◂pf.mov_glx_rsp_n { b i { r0 n } } ⊢ { b i _ } 
					∎ { b i }
				∐ op.dx◂_ . 
					∎| 
				∐. op.sx◂r1 . 
					_pf_x◂◂pf.mov_glx_sx { b i { r0 r1 } } ⊢ { b i _ } 
					∎ { b i }
			∐ db◂{ lb s } . 
				_s8_len s ⊢ { s l } 
				_pf_x◂◂pf.db_h { b i { lb l } } ⊢ { b i { lb l } } 
				_pf_x◂◂pf.db_etr { b i { lb } } ⊢ { b i _ }
				mk_db_lp { { b i } s %[ 0r ] l } ⊢ { { b i } _ } 
				∎ { b i }
			∐ ret◂{} . 
        _pf_x◂◂pf.ret { b i {} } ⊢ { b i _ }
        ∎ { b i } 
      ∐ call_lb◂lb . 
        _pf_x◂◂pf.call_lb { b i { lb } } ⊢ { b i _ }
        ∎ { b i } 
      ∐ etr_lb◂lb . 
        _pf_x◂◂pf.etr_lb { b i { lb } } ⊢ { b i _ }
        ∎ { b i }  
      ∐ jmp_lb◂lb . 
        _pf_x◂◂pf.jmp_lb { b i { lb } } ⊢ { b i _ }
        ∎ { b i }  
      ∐ jz_lb◂lb . 
        _pf_x◂◂pf.jz_lb { b i { lb } } ⊢ { b i _ }
        ∎ { b i }  
      ∐ jnz_lb◂lb . 
        _pf_x◂◂pf.jnz_lb { b i { lb } } ⊢ { b i _ }
        ∎ { b i }  
      ∐ jz_bl_lb◂{ f lb } .
        $ f ⊢ 
        ∐ bl.t◂{} . 
          _pf_x◂◂pf.jz_lb { b i { lb } } ⊢ { b i _ }
          ∎ { b i }  
        ∐. bl.f◂{} . 
          _pf_x◂◂pf.jnz_lb { b i { lb } } ⊢ { b i _ }
          ∎ { b i }  
      ∐ jl_lb◂lb . 
        _pf_x◂◂pf.jl_lb { b i { lb } } ⊢ { b i _ }
        ∎ { b i }  
			∐ jle_lb◂lb . 
        _pf_x◂◂pf.jle_lb { b i { lb } } ⊢ { b i _ }
        ∎ { b i }  
      ∐ jg_lb◂lb . 
        _pf_x◂◂pf.jg_lb { b i { lb } } ⊢ { b i _ }
        ∎ { b i }  
      ∐ alc_rcd◂{ c r } . 
        _pf_x◂◂pf.alc_rcd { b i { c r } } ⊢ { b i _ }
        ∎ { b i }  
      ∐. free_rcd◂{ c r } .
        _pf_x◂◂pf.free_rcd { b i { c r } } ⊢ { b i _ }
        ∎ { b i }  
    § @.to_s8_i { e b i } 
      $ e ⊢ 
      ∐ e◂{} . 
        ∎ { b i }
      ∐ nd◂{ e0 e1 } .
        to_s8_i { e0 b i } ⊢ { b i } 
        to_s8_i { e1 b i } ⊢| 
      ∐. lf◂a . 
        to_s8_a { a b i } ⊢| 
    § mlc_buf L 
			_mlc_s8 L ⊢ { _ B } 
			∎ B 
		§ to_s8 # e
			mlc_buf %[ BUF_SIZE ] ⊢ b
      to_s8_i { e b %[ 0r ] } ⊢ { b l }
      _rsz { b l } ⊢ { b _ } 
      ∎ b
		§ ini_buf # {} 
			mlc_buf %[ BUF_SIZE ] ⊢ b 
			∎ { b %[ 0r ] }
		§ blt_buf # { { b i } e }
			to_s8_i { e b i } ⊢| 
		§ of_buf # { b i } 
			_rsz { b i } ⊢ { b _ }
			∎ of_s8◂b 			
		§ flt # e 
			mlc_buf %[ BUF_SIZE ] ⊢ b
      to_s8_i { e b %[ 0r ] } ⊢ { b l }
      _rsz { b l } ⊢ { b _ } 
      ∎ of_s8◂b
    § main _
			$ e◂{} ⊢ B 
      add_s8 { B %[ "JIOJ\n" ] } ⊢ B 
      cct { B lf◂jmp_lb◂%[ 45r ] } ⊢ B 
			cct { B lf◂ret◂{} } ⊢ B 
			cct { B lf◂s8◂%[ "\tpop rbx\n" ] } ⊢ B
      --to_s8 B ⊢ s 
			mlc_buf %[ BUF_SIZE ] ⊢ s
  		to_s8_i { B s %[ 0r ] } ⊢ { s l }
      ∎ {}
    ∎∎
  
	§§ GV 
			§ v_i = ast.v_i 
			§ v_l = ast.v_l 
			§ v_ln = ast.v_ln 
			
			§ ix # gn 
				inc_x gn ⊢ { i gn } 
				∎ { gn i }
			
			§ new # gn
				inc_x gn ⊢ { i gn } 
				_ref.mk v_i◂i ⊢ p 
				∎ { gn p } 
			§ new_i # gn
				inc_x gn ⊢ { i gn } 
				$ i ⊢ i,i0 
				_ref.mk v_i◂i ⊢ p 
				∎ { gn p i0 }
			§ @.lod p 
				_ref.lod p ⊢ { p i }
				∐ i ⊢ v_i◂i . 
					∎ { p i }
				∐ i ⊢ v_ln◂r . 
					lod r ⊢|
				∐. . 
					∎|
			§ rpc_i p
				lod p ⊢ { p i } 
				$ i ⊢ i,i0
				_ref.mk v_i◂i ⊢ p1
				∎ { p p1 } 
			§ rpc = _rpc 
			§ 
				@.rpc_d_atm { {} a }
					$ a ⊢ 
					∐ ast.hp◂r .
						rpc_i r ⊢ { r r1 }
						∎ { {} ast.hp◂r RP.atm◂ast.hp◂r1 }
					∐ ast.hp_im◂c . 
						$ c ⊢ c,c0 
						∎ { {} ast.hp_im◂c RP.atm◂ast.hp_im◂c0 }
					∐ ast.btm◂{} . 
						∎ { {} ast.btm◂{} RP.atm◂ast.btm◂{} } 
					∐ ast.stt_adt◂{ i n p } . 
						rpc_d p ⊢ { p p1 } 
						$ i ⊢ i,i1 
						$ n ⊢ n,n1
						∎ { {} ast.stt_adt◂{ i n p } RP.atm◂ast.stt_adt◂{ i1 n1 p1 } } 
					∐. ast.dyn_adt◂{ la ri rd } . 
						rpc_i ri ⊢ { ri ri1 } 
						rpc_i rd ⊢ { rd rd1 } 
						$ la ⊢ la,la1 
						∎ { {} ast.dyn_adt◂{ la ri rd } RP.atm◂ast.dyn_adt◂{ la1 ri1 rd1 } }
					
				@.rpc_d # p 
					RP.map_l_x◂◂rpc_d_atm { {} p } ⊢ { {} p p0 }
					∎ { p p0 }

			§ @.imv { L e r0 r1 }
				_ref.lod r0 ⊢ { r0 v0 }
				$ v0 ⊢
				∐ v_i◂i0 . 
					lod r1 ⊢ { _ i1 } 
					∐ i0'=i1' . 
						∎ { L e } 
					∐. . 
						$ ⟦ { i0 i1 } < L ⟧ ⊢ L 
						∎ { L e } 
				∐ v_ln◂r2 . 
					imv { L e r2 r1 } ⊢| 
				∐. v_l◂{} . 
					_ref.u { r0 v_ln◂r1 } ⊢ _ 
					∎ { L e } 
			
			§ @.gen_v { GV r } 
				$ GV ⊢ gn 
				_ref.o r ⊢ { R v } 
				$ v ⊢ 
				∐ v_l◂{} . 
					inc_x gn ⊢ { i gn } 
					_ref.i { R v_i◂i } ⊢ r 
					∎ { gn r } 
				∐ v_i◂i . 
					_ref.i { R v_i◂i } ⊢ r 
					∎ { gn r } 
				∐. v_ln◂r1 . 
					$ r1 ⊢ r1,r2 
					_ref.i { R v_ln◂r1 } ⊢ _
					gen_v { gn r2 } ⊢|
			§ 
				@.gen_atm { GV a } 
					$ a ⊢ 
					∐ ast.hp◂r .
						gen_v { GV r } ⊢ { GV r }
						∎ { GV ast.hp◂r }
					∐ ast.hp_im◂c . 
						∎ { GV ast.hp_im◂c }
					∐ ast.btm◂{} . 
						∎ { GV ast.btm◂{} } 
					∐ ast.stt_adt◂{ i n p } . 
						gen { GV p } ⊢ { GV p } 
						∎ { GV ast.stt_adt◂{ i n p } } 
					∐. ast.dyn_adt◂{ la ri rd } . 
						gen_v { GV ri } ⊢ { GV ri } 
						gen_v { GV rd } ⊢ { GV rd } 
						∎ { GV ast.dyn_adt◂{ la ri rd } }
				@.gen = RP.map_l◂◂gen_atm
			∎∎
		
		§§ alc_type_k 
			§ alc_i # GV
				GV.new GV ⊢| 
			§	 
				@.rcd◂◂ALC { V t0 }
					∐ t0 ⊢ dta◂{ a l }; 
						∐ a'=TX.id.prd; l ⊢ _cns◂{ y0 _cns◂{ y1 _nil◂{} } } . 
							f_T◂◂ALC { V y0 } ⊢ { V p0 }
							rcd◂◂ALC { V y1 } ⊢ { V l } 
							∎ { V ⟦ p0 < l ⟧ }  
						∐. a'=TX.id.unt; l ⊢ _nil◂{} .
							∎ { V ⟦⟧ }
					∐ t0 ⊢ var◂T.p◂i . 
						$ V ⊢ { tav s0 b } 
						_ref.lod i ⊢ { i v }
						$ { tav s0 b } ⊢ V 
						∐ v ⊢ var_ln◂k . 
							rcd◂◂ALC { V k } ⊢| 
						∐. .
							∎| 
					∐. . 
						∎| 
				@.f_T_adt◂◂ALC { { tav s0 b } t }
					$ t ⊢ 
					∐ dta◂{ a l } . 			
						_and_im◂◂0x0000ffffffffffffr a ⊢ a 
						dta_n_1 { tav a } ⊢ { tav a o } 
						∐ o ⊢ _some◂{ v k } . 
							T.iug_axm { v k l } ⊢ l
							∐ l ⊢ _cns◂{ t _nil◂{} } . 
								f_T◂◂ALC { { tav s0 b } t } ⊢ { { tav s0 b } p } 
								∎ { { tav s0 b } RP.atm◂ast.stt_adt◂{ %[ 0r ] %[ 1r ] p } } 
							∐. . 
								∎| 
						∐. . 
							ALC s0 ⊢ { s0 j0 }
							ALC s0 ⊢ { s0 j1 } 
							∎ { { tav s0 b } RP.atm◂ast.dyn_adt◂{ { a l } j0 j1 } } 								
					∐ var◂T.p◂i . 
						_ref.lod i ⊢ { i v }
						∐ v ⊢ var_ln◂k . 
							f_T_adt◂◂ALC { {  tav s0 b } k } ⊢| 
						∐. .
							∎ { { tav s0 %[ 0r ] } RP.atm◂ast.btm◂{} }
					∐ abs◂{ a k0 } . 
						∎|  
					∐ ct_imp◂{ k0 k1 } .
						∎|
					∐. imp◂{ k0 k1 } .
						∎|
				@.f_T◂◂ALC { { tav s0 b } t0 }
					$ t0 ⊢ 
					∐ dta◂{ a l } . 			
						=+ a' 
						∐ 
							ALC s0 ⊢ { s0 j0 }
							∎ { { tav s0 b } stt_v.r64_reg◂j0 }     
						∐ 
							∎| 
						-- arr 
						∐ 
							ALC s0 ⊢ { s0 j0 }
							∐ l ⊢ _cns◂{ y _cns◂{ yt _nil◂{} } } . 
								∎ { { tav s0 b } RP.atm◂ast.hp◂j0 }
							∐. . 
								∎| 
							-- Clr 
							∐ 
								ALC s0 ⊢ { s0 j0 }
								∐ l ⊢ _cns◂{ y l }; l ⊢ _nil◂{} . 
									∎ { { tav s0 b } RP.atm◂ast.hp◂j0 }
								∐. . 
									∎|  
							-- pt 
							∐ 	
								ALC s0 ⊢ { s0 j0 }
								∐ l ⊢ _cns◂{ y l }; l ⊢ _nil◂{} . 
									∎ { { tav s0 b } RP.atm◂ast.hp◂j0 }
								∐. . 
									∎| 
							-- prd 
							∐ 
								∎| 		
							-- grm 
							∐
								∎| 
							-- pf 
							∐
								∎| 
							-- Clr_lc 
							∐ 
								∎| 
							-- arr_lc 
							∐ 
								∎| 
							-- r8 
							∐ 
								∎| 
							-- arr_x 
							∐ 
								∎| 
							-- ctr 
							∐ 
								∎| 
							-- mtc 
							∐ 
								∎| 
							-- mop 
							∐ 
								∎| 
							-- tj 
							∐ 
								∎| 
							-- st 
							∐ 
								ALC s0 ⊢ { s0 j0 }
								∐ l ⊢ _cns◂{ y _nil◂{} } . 
									∎ { { tav s0 b } RP.atm◂ast.hp◂j0 }
								∐. . 
									∎|  
							∐. 
								∐ a'=TX.id.rcd; l ⊢ _cns◂{ y _nil◂{} } .
									rcd◂◂ALC { { tav s0 b } y } ⊢ { V l }
									∎ { V RP.rcd◂l }
								-- adt  
								∐ a'=TX.id.adt; l ⊢ _cns◂{ y _nil◂{} }. 
									f_T_adt◂◂ALC { { tav s0 b } y } ⊢| 
								-- hp 
								∐ a'=TX.id.hp . 
									∎ { { tav s0 b } RP.unt◂{} }
								∐. . 
									∎| 
					∐ var◂T.p◂i . 
						_ref.lod i ⊢ { i v }
						∐ v ⊢ var_ln◂k . 
							f_T◂◂ALC { {  tav s0 b } k } ⊢| 
						∐. .
							∎ { { tav s0 %[ 0r ] } RP.atm◂ast.btm◂{} }
					∐ abs◂{ a k0 } . 
						∎|  
					∐ ct_imp◂{ k0 k1 } .
						∎|
					∐. imp◂{ k0 k1 } .
						∎| 
			§ f_i # { tav GV p } 
				f_T◂◂alc_i { { tav GV %[ 1r ] } p } ⊢ { { tav GV b } p } 
				∎ { tav GV p }
			§ f_o { tav GV p } 
				f_T◂◂alc_i { { tav GV %[ 1r ] } p } ⊢ { { tav GV b } p } 
				∐ b'=0r . 
					∎ { tav GV ‹› } 
				∐. . 
					∎ { tav GV ‹ p › }
			§ f_x { tav GV p } 
				f_T◂◂alc_i { { tav GV %[ 1r ] } p } ⊢ { { tav GV b } p } 
				∐ b'<>0r . 
					∎ { tav GV p }
				∐. . 
					∎|
			
		∎∎
	
	§§ gnr
		§ call_lb # { lb e } 
			$ lb ⊢ lb,lb0 
      asm.cct { e asm.lf◂asm.call_lb◂lb0 } ⊢ e 
			∎ { lb e }
		§ lb_etr # { lb e } 
			$ lb ⊢ lb,lb0 
			asm.cct { e asm.lf◂asm.etr_lb◂lb0 } ⊢ e 
			∎ { lb e }
		§ inc_lb # { lb_n e } 
			inc_x lb_n ⊢ { lb lb_n } 
			lb_etr { lb e } ⊢ { lb e } 
			∎ { lb { lb_n e } }
		§ lc_lb_etr◂◂N # e 
			$~ _^ ⊢ s 
				".LB_" (_ct.pf_d◂◂N) ":\n" // 
			asm.add_st_s8 { e s } ⊢|
		§ lb_i_etr # { lb i e } 
			^ lb,i ⊢ lb,i,s 
				"LB_" 0d' "_" 1d' ":\n" //
			asm.add_s8 { e s } ⊢ e 
			∎ { lb i e }
		§ jmp_lb # { lb e } 
			$ lb ⊢ lb,lb0 
			asm.cct { e asm.lf◂asm.jmp_lb◂lb0 } ⊢ e 
			∎ { lb e }
		§ jg_lb # { lb e } 
			$ lb ⊢ lb,lb0 
			asm.cct { e asm.lf◂asm.jg_lb◂lb0 } ⊢ e 
			∎ { lb e }
		§ jnz_lb # { lb e } 
			$ lb ⊢ lb,lb0 
			asm.cct { e asm.lf◂asm.jnz_lb◂lb0 } ⊢ e 
			∎ { lb e } 
		§ jz_lb # { lb e } 
			$ lb ⊢ lb,lb0 
			asm.cct { e asm.lf◂asm.jz_lb◂lb0 } ⊢ e 
			∎ { lb e } 
		§ jz_bl_lb # { b lb e }
			$ b ⊢ 
			∐ bl.t◂{} . 
				jz_lb { lb e } ⊢| 
			∐. bl.f◂{} . 
				jnz_lb { lb e } ⊢|  
		§ jl_lb # { lb e } 
			$ lb ⊢ lb,lb0 
			asm.cct { e asm.lf◂asm.jl_lb◂lb0 } ⊢ e 
			∎ { lb e } 
		§ jle_lb # { lb e } 
			$ lb ⊢ lb,lb0 
			asm.cct { e asm.lf◂asm.jle_lb◂lb0 } ⊢ e 
			∎ { lb e } 
		§ alc_rcd◂◂R # { i e }
			∐ i'<>0r . 
				_dec i ⊢ i 
				_bsr i ⊢ { i j }
  			_inc i ⊢ i 
				_inc j ⊢ j 
				_bts { %[ 0r ] j } ⊢ { i0 _ }
				_st◂◂R {} ⊢ r 
				asm.cct { e asm.lf◂asm.alc_rcd◂{ i0 r } } ⊢ e 
				∎ { i e }
			∐. .
				∎|
		§ free_rcd◂◂R # { c e } 
			_dec c ⊢ c 
			_bsr c ⊢ { c j } 
			_inc c ⊢ c 
			_shl { %[ 2r ] j } ⊢ { c0 _ }
			_st◂◂R {} ⊢ r 
			asm.cct { e asm.lf◂asm.free_rcd◂{ c0 r } } ⊢ e 
			∎ { c e }
		§ ret # e 
			asm.cct { e asm.lf◂asm.ret◂{} } ⊢ e 
			∎ e  
		§ rt_err◂◂X # e 
			asm.add_st_s8_im◂◂(_ccs◂◂{ _ccs◂◂{ "\tRT_ERR 0x" (_ct.pf_x◂◂X) } "\n" }) e ⊢| 			

		§ @.mk_jmp_tbl { lb_n n e } 			 
			∐ n'=0r .
				∎| 
			∐ n'=1r .
				^ lb_n ⊢ lb_n,s
					"LB_" 0d' // 
				inc_x lb_n ⊢ { lb0 lb_n } 
				rp8.add_s8 { e s } ⊢ e 
				rp8.to_s8 e ⊢ s 
				∎ { lb_n s p_end◂lb0 }
			∐. . 
				inc_x lb_n ⊢ { lb0 lb_n } 
				^ lb0 ⊢ lb0,s 
					"LB_" 0d' "," //
				rp8.add_s8 { e s } ⊢ e 
				_dec n ⊢ n 
				mk_jmp_tbl { lb_n n e } ⊢ { lb_n s lbl } 
				∎ { lb_n s p_cns◂{ lb0 lbl } }
		§ mk_jmp_tbl # { lb_n n }
			mk_jmp_tbl { lb_n n rp8.e◂{} } ⊢| 
		§ REG_N = 8r 
		§ push_c_regs = "\tC_PUSH_REGS\n" 
		§ pop_c_regs = "\tC_POP_REGS\n" 
		
		§ mlc_s8 l 
			$ l ⊢ l,l0 
			_shr_im◂◂3r l0 ⊢ l0 
			_inc l0 ⊢ l0  
			$ l0 ⊢ l0,l1 
			_inc l0 ⊢ l0 
			_shl_im◂◂3r l0 ⊢ l0  
			^ l,l0 ⊢ l,_,e 
				`	mov rsi,1  
				"\tmov rdi,0x" 1x' "\n" 
				`	xor rax,rax 
				`	CALLOC_SF
				"\tmov QWORD [rax],0x" 0x' "\n"
				//
			∎ { l e }   
		§ @.mk_s8_64_lp { s l i e } 
			∐ i'=l' . 
				∎ { s l e } 
			∐. . 
				_lds64 { s i } ⊢ { s i b } 
				^ i,b ⊢ i,_,eb 
					"\tmov rbx,0x" 1x' "\n"
					"\tmov QWORD [rdi],rbx\n" 
					`	add rdi,8 
					// 
				$ asm.of_s8◂eb ⊢ eb 
				asm.cct { e eb } ⊢ e 
				_add_im◂◂8r i ⊢ i
				mk_s8_64_lp { s l i e } ⊢| 
		§ @.mk_s8_64_m { s l i e } 
			∐ i'=l' . 
				∎ { s l e } 
			∐. . 
				_lds { s i } ⊢ { s i b } 
				^ i,b ⊢ i,_,eb 
					"\tmov BYTE [rdi],0x" 1x' "\n" 
					`	add rdi,1 
					// 
				$ asm.of_s8◂eb ⊢ eb 
				asm.cct { e eb } ⊢ e 
				_inc i ⊢ i
				mk_s8_64_m { s l i e } ⊢| 
		§ mk_s8_64 s 
			_s8_len s ⊢ { s l } 
			mlc_s8 l ⊢ { l e0 } 
			$ l ⊢ l,l0 
			_shr_im◂◂3r l ⊢ l  
			_shl_im◂◂3r l ⊢ l
			_st◂◂"\tlea rdi,[rax+8]\n" {} ⊢ sc0
			asm.add_st_s8 { asm.of_s8◂e0 sc0 } ⊢ e0
			mk_s8_64_lp { s l %[ 0r ] e0 } ⊢ { s l e0 } 
			mk_s8_64_m { s l0 l e0 } ⊢ { s _ e0 }
			∎ { s e0 }
		§ @.mk_db_lp { eds s i l } 
			∐ i'=l' . 
				_st◂◂"0,0,0,0,0,0,0,0,0\n" {} ⊢ s0
				asm.add_st_s8 { eds s0 } ⊢ eds
				∎ { eds s } 
			∐. . 
				_lds { s i } ⊢ { s i b } 
				^ b ⊢ b,eb 
					0d' "," // 
				asm.add_s8 { eds eb } ⊢ eds 
				_inc i ⊢ i 
				mk_db_lp { eds s i l } ⊢|
		§ mov_e # { r0 r1 e } 
			∐ r0'=r1' . 
				∎ { r0 r1 e } 
			∐. . 
				$ r0 ⊢ r0,r00 
				$ r1 ⊢ r1,r10 
				asm.cct { e asm.lf◂asm.mov_glx◂{ r10 r00 } } ⊢ e 
				∎ { r0 r1 e } 
			
			§ r64_to_rax { GV p e0 }
				∐ p ⊢ RP.atm◂a; 
					∐ a ⊢ ast.hp◂r0 . 
						GV.lod r0 ⊢ { r0 i0 } 
						asm.add_nd { e0 asm.mov_op_glx◂{ asm.op.rx◂%[ asm.rx.rax ] i0 } } ⊢ e0 
						∎ { GV e0 }	
					∐ a ⊢ ast.hp_im◂iv . 
						ast.r64_of_k iv ⊢ x 
						^ x ⊢ _,sc0 
							"\tmov rax,0x" 0x' "\n" //
						asm.add_s8 { e0 sc0 } ⊢ e0 
						∎ { GV e0 }
					∐. a ⊢ ast.btm◂{} . 
						∎|
				∐. . 
					∎| 
			§ r64_to_hp { GV p e0 }
				∐ p ⊢ RP.atm◂a; 
					∐ a ⊢ ast.hp◂r . 
						∎ { GV r e0 }	
					∐ a ⊢ ast.hp_im◂iv . 
						ast.r64_of_k iv ⊢ x 
						^ x ⊢ _,sc0 
							"\tmov rbx,0x" 0x' "\n" //
						asm.add_s8 { e0 sc0 } ⊢ e0 
						GV.new_i GV ⊢ { GV r i } 
						asm.add_nd { e0 asm.mov_glx_op◂{ i asm.op.rx◂%[ asm.rx.rbx ] } } ⊢ e0 
						∎ { GV r e0 }
					∐. a ⊢ ast.btm◂{} . 
						_emt_im◂◂0xbb4r {} ⊢ {} 
						∎|
				∐. .
					_emt_im◂◂0xbb5r {} ⊢ {} 
					∎|
			§ s8_to_hp { GV a0 e } 
				ast.s8_of_rt a0 ⊢ s 
				$ s ⊢ 
				∐ ast.im_of◂s . 
					_ref.o s ⊢ { P { s ol } }
					mk_s8_64 s ⊢ { s e1 }
					_ref.i { P { s ol } } ⊢ _
					asm.cct { e e1 } ⊢ e 
					GV.new_i GV ⊢ { GV r i } 
					asm.add_nd { e asm.mov_glx_op◂{ i asm.op.rx◂%[ asm.rx.rax ] } } ⊢ e 
					∎ { GV r e }
				∐. ast.hp_of◂r . 
					∎ { GV r e }	
		§ sx # { e o i } 
			asm.add_nd { e asm.mov_op_sx◂{ o i } } ⊢ e 
			∎ e
		§ glx # { e o i } 
			asm.add_nd { e asm.mov_op_glx◂{ o i } } ⊢ e 
			∎ e
		§ r8 # { e o _ } 
			asm.add_nd { e asm.mov_op_op◂{ o asm.op.rx◂%[ asm.rx.r8 ] } } ⊢ e 
			∎ e 

		§ rax_idx # { r e }
			$ r ⊢ r,r0 
			asm.add_nd { e asm.mov_op_glx◂{ asm.op.rx◂%[ asm.rx.rax ] r0 } } ⊢ e 
			∎ { r e }
		§ rdi_idx # { r e }
			$ r ⊢ r,r0 
			asm.add_nd { e asm.mov_op_glx◂{ asm.op.rx◂%[ asm.rx.rdi ] r0 } } ⊢ e 
			∎ { r e }
		§ rax_im # { x e } 
			^ x ⊢ x,s
				"\tmov rax,0x" 0x' "\n" // 
			asm.add_s8 { e s } ⊢ e 
			∎ { x e }
		§ imul_im◂◂R { x e }
			=+ x' 
			-- x=0 
			∐ 
				_st◂◂(_ccs◂◂{ "\tmov " _ccs◂◂{ R ",0\n" } }) {} ⊢ s 
				asm.add_st_s8 { e s } ⊢ e 
				∎ { x e }
			-- x=1 
			∐ 
				∎ { x e }
			-- x=2 
			∐ 
				_st◂◂(_ccs◂◂{ "\tadd " _ccs◂◂{ R _ccs◂◂{ "," _ccs◂◂{ R "\n" } } } }) {} ⊢ s 
				asm.add_st_s8 { e s } ⊢ e 
				∎ { x e }
			-- x=3 
			∐ 
				$~ _^ ⊢ s 
					"\tlea " R ",[" R "+2*" R "]\n" // 
				asm.add_st_s8 { e s } ⊢ e 
				∎ { x e }
			-- x=4 
			∐ 
				$~ _^ ⊢ s 
					"\tlea " R ",[" "4*" R "]\n" // 
				asm.add_st_s8 { e s } ⊢ e 
				∎ { x e }
			-- x=5 
			∐ 
				$~ _^ ⊢ s 
					"\tlea " R ",[" R "+4*" R "]\n" // 
				asm.add_st_s8 { e s } ⊢ e 
				∎ { x e }
			-- x=6 ; 6=2*3 
			∐ 
				$~ _^ ⊢ s 
					"\tadd " R "," R "\n" 
					"\tlea " R ",[" R "+2*" R "]\n" // 
				asm.add_st_s8 { e s } ⊢ e 
				∎ { x e }
			-- x=7 
			∐ 
				$~ _^ ⊢ s 
					"\tlea MCR_REG,[8*" R "]\n" 
					"\tsub MCR_REG," R "\n" 
					"\tmov " R ",MCR_REG\n" //
				asm.add_st_s8 { e s } ⊢ e 
				∎ { x e }
			-- x=8 
			∐ 
				$~ _^ ⊢ s 
					"\tlea " R ",[8*" R "]\n" // 
				asm.add_st_s8 { e s } ⊢ e 
				∎ { x e }
			-- x=9 
			∐ 
				$~ _^ ⊢ s 
					"\tlea MCR_REG,[8*" R "]\n" 
					"\tadd " R ",MCR_REG\n" //
				asm.add_st_s8 { e s } ⊢ e 
				∎ { x e }
			∐. 
				^ x ⊢ x,s 
					"\tmov MCR_REG,0x" 0x' "\n" 
					"\timul " R ",MCR_REG\n" //
				asm.add_s8 { e s } ⊢ e 
				∎ { x e }
		
		§§ cmp 
			§ idx_idx # { r0 r1 e }
				rdi_idx { r1 e } ⊢ { r1 e } 
				rax_idx { r0 e } ⊢ { r0 e } 
				_st◂◂"\tcmp rax,rdi\n" {} ⊢ s0 
				asm.add_st_s8 { e s0 } ⊢ e 
				∎ { r0 r1 e }
			§ idx_im # { r0 x e }
				rdi_idx { r0 e } ⊢ { r0 e } 
				^ x ⊢ x,sc 
					"\tcmp rdi,0x" 0x' "\n" //
				asm.add_s8 { e sc } ⊢ e
				∎ { r0 x e }   
			∎∎
			§§ EDS 
				§ lod_p { p lb_n { SCM eds } }
					_ref.o p ⊢ { P { s l } }
					_s8_len s ⊢ { s ls } 
					$ l ⊢ 
					∐ _some◂l . 
						$ l ⊢ l,l0 
						_ref.i { P { s ‹ l › } } ⊢ p
						∎ { p lb_n { SCM eds } { ls l0 } } 
					∐. _none◂{} . 
						inc_x lb_n ⊢ { l lb_n }
						$ s ⊢ s,s0 
						$ l ⊢ l,l0,l1 
						asm.add_nd { eds asm.db◂{ l1 s0 } } ⊢ eds 
						_ref.i { P { s ‹ l › } } ⊢ p
						∎ { p lb_n { SCM eds } { ls l0 } } 
				§ lod_ps # p
					_ref.o p ⊢ { P { s l } }
					$ s ⊢ s,s0 
					_ref.i { P { s l } } ⊢ p
					∎ { p s0 } 
				§ set_s # { s { SCM eds } } 
					SCM.set_s { SCM s } ⊢ { SCM p } 
					∎ { p { SCM eds } }
				§ to_rax # { p { SCM eds } e0 }
					_ref.o p ⊢ { P { s0 o } }
					mk_s8_64 s0 ⊢ { s0 es }
					_ref.i { P { s0 o } } ⊢ p
					asm.cct { e0 es } ⊢ e0 
					∎ { p { SCM eds } e0 }
				∎∎
			§§ lod_sgm 
				§ 
					@.atm { { e0 GV } a0 }
						$ a0 ⊢ 
						∐ ast.hp◂r0 . 
							GV.lod r0 ⊢ { r0 i0 } 
							GV.new_i GV ⊢ { GV i ii } 
							asm.add_nd { e0 asm.mov_glx_sx◂{ ii i0 } } ⊢ e0 
							∎ { { e0 GV } ast.hp◂i }
						∐ ast.stt_adt◂{ ia na p0 } . 
							ptn { { e0 GV } p0 } ⊢ { { e0 GV } p0 } 
							∎ { { e0 GV } ast.stt_adt◂{ ia na p0 } }
						∐ ast.dyn_adt◂{ { ax al } ri rd } .
							GV.lod ri ⊢ { _ ri } 
							GV.lod rd ⊢ { _ rd } 
							GV.new_i GV ⊢ { GV i ii }
							GV.new_i GV ⊢ { GV d id }
							asm.add_nd { e0 asm.mov_glx_sx◂{ ii ri } } ⊢ e0 
							asm.add_nd { e0 asm.mov_glx_sx◂{ id rd } } ⊢ e0 
							∎ { { e0 GV } ast.dyn_adt◂{ { ax al } i d } }
						∐ ast.btm◂{} . 
							∎ { { e0 GV } ast.btm◂{} }
						∐. ast.hp_im◂v .
							∎ { { e0 GV } ast.hp_im◂v }
					@.ptn = RP.map_l◂◂atm
				§ 
					@.atm_1 { { e0 r } a0 }
						$ a0 ⊢ 
						∐ ast.hp◂_ . 
							GV.rpc_i r ⊢ { r r0 } 
							∎ { { e0 r } ast.hp◂r0 }
						∐ ast.stt_adt◂{ ia na p0 } . 
							ptn_1 { { e0 r } p0 } ⊢ { { e0 r } p0 } 
							∎ { { e0 r } ast.stt_adt◂{ ia na p0 } }
						∐ ast.dyn_adt◂_ .
							∎|
						∐ ast.btm◂{} . 
							∎ { { e0 r } ast.btm◂{} }
						∐. ast.hp_im◂v .
							∎ { { e0 r } ast.hp_im◂v }
					@.ptn_1 = RP.map_l◂◂atm_1
				∎∎
			
	§§ idx 
		§ ini_n # n 
			_mk_arr { n RP.atm◂ast.btm◂{} } ⊢ { n _ v } 
			∎ { n v }
		§ get # { v i } 
			exc_q { v i RP.atm◂ast.btm◂{} } ⊢| 
		§ set # { v i a } 
			exc_q { v i a } ⊢ { v i _ } 
			∎ { v i }
		§ rpc = _rpc 
		§ get_2 { L i } 
			∐ L ⊢ _cns◂{ { i0 p0 } L }; 
				∐ i'=i0' . 
					∎ { L i p0 }
				∐. L ⊢ _cns◂{ { i1 p1 } _nil◂{} }; i'=i1' . 
					∎ { ⟦ { i0 p0 } ⟧ i p1 }
			∐. . 
				∎|
		§ @.asc_2 { L { xp sp } }
			$ xp ⊢ 
			∐ RP.atm◂ix .  
				$ L ⊢	{ i0 p0 i1 p1 }
				∐ i0'=ix' . 
					$ sp ⊢ sp,sp0 
					∎ { { i0 sp0 i1 p1 } sp }
				∐ i1'=ix' . 
					$ sp ⊢ sp,sp0 
					∎ { { i0 p0 i1 sp0 } sp }
				∐. . 
					∎ { { i0 p0 i1 p1 } sp }
			∐. RP.rcd◂l0 . 
				∐ sp ⊢ RP.rcd◂l1 . 
					asc_2_lst { L { l0 l1 } } ⊢ { L l1 } 
					∎ { L RP.rcd◂l1 }
				∐ sp ⊢ RP.atm◂ast.btm◂{} . 
					∎ { L RP.atm◂ast.btm◂{} } 
				∐. . 
					∎| 
			@.asc_2_lst { V { l0 l1 } }
				∐ l0 ⊢ _cns◂{ xp l0 }; l1 ⊢ _cns◂{ sp l1 } . 
					asc_2 { V { xp sp } } ⊢ { V sp }
					asc_2_lst { V { l0 l1 } } ⊢ { V l1 }
					∎ { V ⟦ sp < l1 ⟧ } 
				∐ l0 ⊢ _nil◂{}; l1 ⊢ _nil◂{} . 
					∎ { V ⟦⟧ }
				∐. . 
					∎| 	 
		§
			@.asc_ply { av { xp sp } } 
				$ xp ⊢ 
				∐ RP.atm◂i0 .  
					set { av i0 sp } ⊢ { av i0 } 
					∎ av 
				∐. RP.rcd◂l0 . 
					∐ sp ⊢ RP.rcd◂l1 . 
						asc_ply_lst { av { l0 l1 } } ⊢|
					∐ sp ⊢ RP.atm◂ast.btm◂{} . 
						∎ av
					∐. . 
						∎| 
			@.asc_ply_lst { av { l0 l1 } }
				∐ l0 ⊢ _cns◂{ xp l0 }; l1 ⊢ _cns◂{ sp l1 } . 
					asc_ply { av { xp sp } } ⊢ av
					asc_ply_lst { av { l0 l1 } } ⊢| 
				∐ l0 ⊢ _nil◂{}; l1 ⊢ _nil◂{} . 
					∎ av
				∐. . 
					∎| 
		§
			@.lod_ply { i { xp sp } } 
				$ xp ⊢ 
				∐ RP.atm◂i0 .  
					∐ i'=i0' . 
						$ sp ⊢ sp,sp0 
						∎ { i sp ‹ sp0 › }
					∐. . 
						∎ { i sp ‹› } 
				∐. RP.rcd◂l0 . 
					∐ sp ⊢ RP.rcd◂l1 . 
						lod_ply_lst { i { l0 l1 } } ⊢ { i l1 o } 
						∎ { i RP.rcd◂l1 o }
					∐ sp ⊢ RP.atm◂ast.btm◂{} . 
						∎ { i RP.atm◂ast.btm◂{} ‹ RP.atm◂ast.btm◂{} › } 
					∐. . 
						∎| 
			@.lod_ply_lst { i { l0 l1 } }
				∐ l0 ⊢ _cns◂{ xp l0 }; l1 ⊢ _cns◂{ sp l1 } . 
					lod_ply { i { xp sp } } ⊢ { i sp o }
					$ o ⊢ 
					∐ _some◂p . 
						∎ { i ⟦ sp < l1 ⟧ ‹ p › }
					∐. _none◂{} . 
						lod_ply_lst { i { l0 l1 } } ⊢ { i l1 o }
						∎ { i ⟦ sp < l1 ⟧ o } 
				∐ l0 ⊢ _nil◂{}; l1 ⊢ _nil◂{} . 
					∎ { i ⟦⟧ ‹› }
				∐. . 
					∎| 
		§ 
			@.subst_ply = RP.map_l_atm◂◂subst_ply_atm
			@.subst_ply_atm { av a }
				$ a ⊢ 
				∐ ast.re_reg◂i . 
					get { av i } ⊢ { av i p } 
					∎ { av p } 
				∐ ast.re_agl◂{ e sp } . 
					subst_ply { av sp } ⊢ { av p } 
					RP.atm_a e ⊢ e 
					app_ctr { e p } ⊢ p 
					∎ { av p } 
				∐. ast.re_v◂c . 
					∎ { av RP.atm◂ast.hp_im◂c }
			@.app_ctr_stk # { { _ _ av } { xp yp p } }
				asc_ply { av { xp p } } ⊢ av
				subst_ply { av yp } ⊢ { _ p }
				∎ p
			@.app_ctr { k p } 
				∐ k ⊢ ast.k_ctr◂{ ia na _ } . 
					∎ RP.atm◂ast.stt_adt◂{ ia na p }
				∐ k ⊢ ast.k_name◂i . 
					EVV.lod_evv i ⊢ { _ c } 
					RP.atm_a c ⊢ c 
					app_ctr { c p } ⊢| 
				∐ k ⊢ ast.k_ply◂{ nc xp yp } . 
					_mk_stk◂◂app_ctr_stk { { nc RP.atm◂ast.btm◂{} } { xp yp p } } ⊢| 
				∐ k ⊢ ast.k_op_axm◂{ a l _ }; a'=EX.sqc; l ⊢ _cns◂{ RP.rcd◂_cns◂{ RP.atm◂c0 _cns◂{ RP.atm◂c1 _nil◂{} } } _nil◂{} } . 
					app_ctr { c0 p } ⊢ p 
					app_ctr { c1 p } ⊢| 
				∐. . 
					∎|
		§ csm_tpl # { V r } 
			get { V r } ⊢ { V _ ip } 
			∎ { V ip } 
		§ csm_tpl_ptn = RP.map_l_atm◂◂csm_tpl
		∎∎
		§§ mov_ptn2  
				§  	
					@.im_to_rax { e0 { tav eds } c0 }
						$ c0 ⊢ 
						∐ ast.k_name◂i . 
							EVV.lod_evv i ⊢ { _ c0 } 
							RP.atm_a c0 ⊢ c0 
							im_to_rax { e0 { tav eds } c0 } ⊢|
						∐ ast.k_s8◂s0 . 
							EDS.to_rax { s0 eds e0 } ⊢ { s0 eds e0 } 
							∎ { e0 { tav eds } }
						∐ ast.k_r64◂x0 . 
							rax_im { x0 e0 } ⊢ { _ e0 }
							∎ { e0 { tav eds } }  
						∐ ast.k_op_gnr◂_ . 
							∎| 
						∐ ast.k_unv◂_ .
							∎| 
						∐ ast.k_ap◂_ .
							∎| 
						∐ ast.k_btm◂_ .
							∎| 
						∐ ast.k_op◂_ . 
							∎| 
						∐ ast.k_fnc◂_ . 
							∎| 
						∐ ast.k_app◂_ . 
							∎| 
						∐ ast.k_op_axm◂_ .
							∎|
						∐ ast.k_pf◂_ .
							∎|
						∐ ast.k_arr◂_ . 
							∎|
						∐ ast.k_ctr◂_ . 
							∎| 
						∐ ast.k_t◂_ .
							∎| 
						∐. ast.k_ply◂_ . 
							∎| 
				§
					@.im_to_atm { L e0 { tav eds } GV c0 a1 }
						$ a1 ⊢ 
						∐ ast.hp◂r1 . 
							im_to_rax { e0 { tav eds } c0 } ⊢ { e0 { tav eds } }
							GV.ix GV ⊢ { GV i } 
							GV.lod r1 ⊢ { _ r1 } 
							$ i ⊢ i,i0 
							asm.add_nd { e0 asm.mov_glx_op◂{ i0 asm.op.rx◂%[ asm.rx.rax ] } } ⊢ e0 
							$ ⟦ { i r1 } < L ⟧ ⊢ L 
							∎ { L e0 {  tav eds } GV }
						∐ ast.btm◂{} . 
							∎| 
						∐ ast.hp_im◂ _ . 
							∎|
						∐ ast.stt_adt◂{ ia1 na1 pa1 } . 
							∎|
						∐. ast.dyn_adt◂{ { ax al } ri rd } .
							
								∎| 
				§	
					@.im_to_sgm_atm { e0 {  tav eds } c0 a1 }
						$ a1 ⊢ 
						∐ ast.hp◂r1 . 
							im_to_rax { e0 { tav eds } c0 } ⊢ { e0 { tav eds } }
							GV.lod r1 ⊢ { _ r1 } 
							^ r1 ⊢ _,sc0 
								"\tmov DX(0x" 0x' "),rax\n" // 
							asm.add_s8 { e0 sc0 } ⊢ e0 
							∎ { e0 {  tav eds } }
						∐ ast.hp_im◂ _ . 
							∎|
						∐ ast.btm◂{} . 
							∎| 
						∐ ast.stt_adt◂{ ia1 na1 pa1 } . 
							∎|
						∐. ast.dyn_adt◂{ { ax al } ri rd } .
							∎|
				§
					@.to_sgm_ptn { e0 { tav eds } p0 p1 } 
						∐ p0 ⊢ RP.rcd◂l0; p1 ⊢ RP.rcd◂l1 . 
							to_sgm_ptn_lst { e0 {  tav eds } l0 l1 } ⊢| 								
						∐ p0 ⊢ RP.atm◂a0; p1 ⊢ RP.atm◂a1 .
							∐ a0 ⊢ ast.hp_im◂c0 . 
								RP.atm_a c0 ⊢ c0 
								im_to_sgm_atm { e0 {  tav eds } c0 a1 } ⊢|
							∐ a0 ⊢ ast.btm◂{} . 	
								_st◂◂"\tRT_ERR 0xffff_b137\n" {} ⊢ s0
								asm.add_st_s8 { e0 s0 } ⊢ e0 
								∎ { e0 {  tav eds } }
							∐ a0 ⊢ ast.hp◂r0; a1 ⊢ ast.hp◂r1 . 
								GV.lod r0 ⊢ { _ r0 } 
								GV.lod r1 ⊢ { _ r1 } 
								asm.add_nd { e0 asm.mov_dx_glx◂{ r1 r0 } } ⊢ e0 
								∎ { e0 {  tav eds } }
							∐ a0 ⊢ ast.stt_adt◂{ ia0 na0 pa0 }; a1 ⊢ ast.stt_adt◂{ ia1 na1 pa1 }; ia0'=ia1' .
								to_sgm_ptn { e0 {  tav eds } pa0 pa1 } ⊢| 			 								
							∐ a0 ⊢ ast.stt_adt◂{ ia na pa }; a1 ⊢ ast.dyn_adt◂{ { ax al } ri rd } .
								dta_n { tav ax } ⊢ { tav ax { _ vl1 kl1 } } 
								$ ia ⊢ ia0,ia00
								lst.prj { kl1 ia00 } ⊢ k1 
								T.iug_axm_i { vl1 k1 al } ⊢ k1  
								GV.lod ri ⊢ { _ ri } 
								GV.lod rd ⊢ { _ rd } 
								^ ri,ia0 ⊢ _,_,sc0 
									"\tmov DX(0x" 0x' "),0x" 1x' "\n" //
								asm.add_s8 { e0 sc0 } ⊢ e0 
								$ k1 ⊢ y0 
								alc_type_k.f_o { tav %[ 0r ] y0 } ⊢ { tav c_n pa1 }							
								$ pa1 ⊢ 
								∐ _some◂pa1 .
									∐ c_n'=0r .
										∎ { e0 {  tav eds } }									
									∐ c_n'=1r .
										_shl_im◂◂3r rd ⊢ rd 
										^ rd ⊢ rd,ec1 
											"\tadd DST_REG,0x" 0x' "\n" //
										asm.add_s8 { e0 ec1 } ⊢ e0 
										to_sgm_ptn { e0 {  tav eds } pa pa1 } ⊢ { e0 { tav eds } }
										^ rd ⊢ _,ec1 
											"\tsub DST_REG,0x" 0x' "\n" //
										asm.add_s8 { e0 ec1 } ⊢ e0 
										∎ { e0 {  tav eds } }
									∐. . 
    								alc_rcd◂◂"rax" { c_n e0 } ⊢ { _ e0 } 
										^ rd ⊢ _,ec1 
											"\tmov DX(0x" 0x' "),rax\n" 
											`	push DST_REG 
											`	lea DST_REG,[rax+8]
											//
										asm.add_s8 { e0 ec1 } ⊢ e0 
										to_sgm_ptn { e0 {  tav eds } pa pa1 } ⊢ { e0 { tav eds } }
										_st◂◂"\tpop DST_REG\n" {} ⊢ s0 
										asm.add_st_s8 { e0 s0 } ⊢ e0 
										∎ { e0 { tav eds } }
								∐. _none◂{} .	
									rt_err◂◂0xeeeef0f0r e0 ⊢ e0 
									∎ { e0 { tav eds } }
							∐ a0 ⊢ ast.dyn_adt◂{ _ ri0 rd0 }; a1 ⊢ ast.dyn_adt◂{ _ ri1 rd1 } .
								GV.lod ri0 ⊢ { _ ri0 } 
								GV.lod rd0 ⊢ { _ rd0 } 
								GV.lod ri1 ⊢ { _ ri1 } 
								GV.lod rd1 ⊢ { _ rd1 } 
								asm.add_nd { e0 asm.mov_dx_glx◂{ ri1 ri0 } } ⊢ e0 
								asm.add_nd { e0 asm.mov_dx_glx◂{ rd1 rd0 } } ⊢ e0 
								∎ { e0 {  tav eds } }
							∐ a1 ⊢ ast.btm◂{} . 
								∎| 
							∐. .
								∎|
						∐. . 
							∎|
					@.to_sgm_ptn_lst { e0 { tav eds } l0 l1 }
						∐ l0 ⊢ _cns◂{ p0 l0 }; l1 ⊢ _cns◂{ p1 l1 } . 
							to_sgm_ptn { e0 {  tav eds } p0 p1 } ⊢ { e0 {  tav eds } }
							to_sgm_ptn_lst { e0 {  tav eds } l0 l1 } ⊢|			
						∐ l0 ⊢ _nil◂{}; l1 ⊢ _nil◂{} . 
							∎ { e0 {  tav eds } } 
						∐. . 
							∎|  
				§ 
					@.ptn { L e0 {  tav eds } GV p0 p1 } 
						∐ p0 ⊢ RP.rcd◂l0; p1 ⊢ RP.rcd◂l1 . 
							ptn_lst { L e0 { tav eds } GV l0 l1 } ⊢| 								
						∐ p0 ⊢ RP.atm◂a0; p1 ⊢ RP.atm◂a1;
							∐ a0 ⊢ ast.hp_im◂c0 . 
								$ c0 ⊢ 
								∐ RP.atm◂c0 .
									im_to_atm { L e0 { tav eds } GV c0 a1 } ⊢|  								
								∐. RP.rcd◂l0 .
									∎|	
							∐ a0 ⊢ ast.hp◂r0; a1 ⊢ ast.hp◂r1 . 
								GV.imv { L e0 r0 r1 } ⊢ { L e0 } 
								∎ { L e0 {  tav eds } GV }
							∐ a0 ⊢ ast.stt_adt◂{ ia0 na0 pa0 }; a1 ⊢ ast.stt_adt◂{ ia1 na1 pa1 }; ia0'=ia1' .
								ptn { L e0 {  tav eds } GV pa0 pa1 } ⊢| 			 								
							∐ a0 ⊢ ast.stt_adt◂{ ia0 na0 pa0 }; a1 ⊢ ast.dyn_adt◂{ { ax al } ri rd } .
								dta_n { tav ax } ⊢ { tav ax { _ vl1 kl1 } } 
								$ ia0 ⊢ ia0,ia00
								lst.prj { kl1 ia00 } ⊢ k1 
								T.iug_axm_i { vl1 k1 al } ⊢ k1 
								GV.lod ri ⊢ { _ ri } 
								GV.lod rd ⊢ { _ rd } 
								GV.ix GV ⊢ { GV i0 } 
								$ i0 ⊢ i0,i00
								asm.add_nd { e0 asm.mov_glx_im◂{ i00 ia0 } } ⊢ e0 
								$ ⟦ { i0 ri } < L ⟧ ⊢ L 
								$ k1 ⊢ y0 
								$ y0 ⊢ y0,y0_0 
								$ GV ⊢ glv_n 
								alc_type_k.f_o { tav %[ 0r ] y0 } ⊢ { tav c_n pa1 }							
								$ glv_n ⊢ GV 
								$ pa1 ⊢ 
								∐ _some◂pa1 .
									∐ c_n'=0r .
										∎ { L e0 { tav eds } GV }									
									∐ c_n'=1r . 
										_st◂◂"\tsub rsp,8\n\tmov DST_REG,rsp\n" {} ⊢ s0
										asm.add_st_s8 { e0 s0 } ⊢ e0 
										GV.gen { GV pa0 } ⊢ { GV pa0 }  
										to_sgm_ptn { e0 {  tav eds } pa0 pa1 } ⊢ { e0 {  tav eds } } 
										_st◂◂"\tpop rax\n" {} ⊢ s0 
										asm.add_st_s8 { e0 s0 } ⊢ e0 
										GV.ix GV ⊢ { GV i1 } 
										$ i1 ⊢ i1,i10 
										asm.add_nd { e0 asm.mov_glx_rx◂{ i10 %[ asm.rx.rax ] } } ⊢ e0 
										$ ⟦ { i1 rd } < L ⟧ ⊢ L 
										∎ { L e0 {  tav eds } GV }
									∐. . 
    								alc_rcd◂◂"rax" { c_n e0 } ⊢ { _ e0 } 
										GV.ix GV ⊢ { GV i1 } 
										$ i1 ⊢ i1,i10 
										asm.add_nd { e0 asm.mov_glx_op◂{ i10 asm.op.rx◂%[ asm.rx.rax ] } } ⊢ e0 
										$~ _^ ⊢ ec1 
											`	lea DST_REG,[rax+8]
											//
										asm.add_st_s8 { e0 ec1 } ⊢ e0 
										GV.gen { GV pa0 } ⊢ { GV pa0 }  
										to_sgm_ptn { e0 {  tav eds } pa0 pa1 } ⊢ { e0 {  tav eds } } 
										$ ⟦ { i1 rd } < L ⟧ ⊢ L 
										∎ { L e0 {  tav eds } GV }
									∐. _none◂{} .
										rt_err◂◂0xefef0f0er e0 ⊢ e0 
										∎ { L e0 { tav eds } GV }
							∐. a0 ⊢ ast.dyn_adt◂{ _ ri0 rd0 }; a1 ⊢ ast.dyn_adt◂{ _ ri1 rd1 } .
								GV.imv { L e0 ri0 ri1 } ⊢ { L e0 } 
								GV.imv { L e0 rd0 rd1 } ⊢ { L e0 } 
								∎ { L e0 {  tav eds } GV }
						∐. . 
							_st◂◂"\tRT_ERR 0xffff_c137\n" {} ⊢ sts0
							asm.add_st_s8 { e0 sts0 } ⊢ e0 
							∎ { L e0 {  tav eds } GV }
					
					@.ptn_lst { L e0 E GV l0 l1 }
						∐ l0 ⊢ _cns◂{ p0 l0 }; l1 ⊢ _cns◂{ p1 l1 } . 
							ptn { L e0 E GV p0 p1 } ⊢ { L e0 E GV }
							ptn_lst { L e0 E GV l0 l1 } ⊢|			
						∐ l0 ⊢ _nil◂{}; l1 ⊢ _nil◂{} . 
							∎ { L e0 E GV } 
						∐. . 
							∎| 							
				§§ A = BST_r64 
				§ @.ptn_A1 { A0 A1 e i0 } 
					A.get { A1 i0 } ⊢ { A1 { i0 o } }
					∐ o ⊢ _some◂i1 .
						A.get { A0 i1 } ⊢ { A0 { i1 _ } }
						ptn_A1 { A0 A1 e i1 } ⊢ { A0 A1 e i1 } 
						mov_e { i0 i1 e } ⊢ { i0 _ e }
						∎ { A0 A1 e i0 }
					∐. . 
						∎ { A0 A1 e i0 }
				§ @.ptn_lp { A0 A1 e0 GV i0 i1 }
					A.get { A0 i1 } ⊢ { A0 { i1 o } } 
					∐ o ⊢ _some◂i2 . 
						∐ i2'=i0' . 
							$ i2 ⊢ _ 
							GV.ix GV ⊢ { GV i3 } 
							mov_e { i0 i3 asm.e◂{} } ⊢ { i0 i3 e1 }
							asm.cct { e1 e0 } ⊢ e0 
							mov_e { i3 i1 e0 } ⊢ { _ _ e0 }
							∎ { A0 A1 e0 GV }
						∐. . 
							mov_e { i2 i1 e0 } ⊢ { i2 _ e0 } 
							ptn_lp { A0 A1 e0 GV i0 i2 } ⊢| 
					∐. . 
						ptn_A1 { A0 A1 asm.e◂{} i0 } ⊢ { A0 A1 e1 _ }
						asm.cct { e1 e0 } ⊢ e0 
						∎ { A0 A1 e0 GV }
				§ @.ptn_L { L A0 A1 e0 GV }
					$ L ⊢ 
					∐ _cns◂{ { i0 i1 } L } . 
						$ i1 ⊢ i1,i10
						A.set { A1 { i0 i10 } } ⊢ { A1 { i0 _ } } 
						A.set { A0 { i1 i0 } } ⊢ { A0 { i1 _ } } 
						ptn_L { L A0 A1 e0 GV } ⊢ { A0 A1 e0 GV } 
						A.get { A0 i1 } ⊢ { A0 { i1 o } }
						∐ o ⊢ _some◂i0 . 
							∐ i0'=i1' . 
								∎ { A0 A1 e0 GV } 
							∐. . 
								mov_e { i0 i1 asm.e◂{} } ⊢ { i0 i1 e1 } 
								ptn_lp { A0 A1 e1 GV i1 i0 } ⊢ { A0 A1 e1 GV }
								asm.cct { e0 e1 } ⊢ e0 
								∎ { A0 A1 e0 GV }  
						∐. . 
							∎ { A0 A1 e0 GV }
					∐. _nil◂{} . 
						∎ { A0 A1 e0 GV }
						
				§ ptn # { e0 E GV p0 p1 } 
					$ asm.e◂{} ⊢ e1 
					ptn { ⟦⟧ e1 E GV p0 p1 } ⊢ { L e1 E GV } 
					asm.cct { e0 e1 } ⊢ e0
					A.ini {} ⊢ A0 
					A.ini {} ⊢ A1 
					ptn_L { L A0 A1 e0 GV } ⊢ { _ _ e0 GV }
					∎ { e0 E GV } 
				∎∎
		
			§§ pop_regs 
				§ exh_i # { { i e } j }
					GV.lod j ⊢ { j ij } 
					mov_e { i ij e } ⊢ { i ij e } 
					_inc i ⊢ i 
					∎ { i e }
				§ exh # { n l } 
					lst.fld_l◂◂exh_i { { n asm.e◂{} } l } ⊢| 
				∎∎
			
			§§ cmp_s8
				§ 
					@.lp { lb0 s ls i e0 } 
						∐ ls'=i' . 
							∎ { lb0 s e0 } 
						∐. . 
							_lds { s i } ⊢ { s i c } 
							^ i,c,lb0 ⊢ i,c,lb0,s0 
								"\tcmp BYTE [rdi+0x" 0x' "],0x" 1x' "\n" 
								"\tjnz LB_" 2d' "\n" 
								// 
							_inc i ⊢ i 
							asm.add_s8 { e0 s0 } ⊢ e0 
							lp { lb0 s ls i e0 } ⊢|
				§ f # { lb0 s }  
					_s8_len s ⊢ { s ls } 
					lp { lb0 s ls %[ 0r ] asm.e◂{} } ⊢|
						
				∎∎ 
			§§ lc_code 
				
				§§ exp_s8 
					¶ t s'
						∐ cst : s' 
						∐ idx : { ast.fmt _r64 }
						∐ for : { _r64 s' }
					§ @.lp0_c { i sl } 
						$ sl ⊢ 
						∐ _cns◂{ ip sl } .
							_inc i ⊢ i 
							lp0_c { i sl } ⊢ { i ar } 
							_dec i ⊢ i 
							set_tv { ar i ip } ⊢ { ar i } 
							∎ { i ar } 
						∐. _nil◂{} .  
							ini_tv_n i ⊢| 
							
					§ 
						@.ip2 { eds l e0 } 
							$ l ⊢ 
							∐ _cns◂{ p1 l } . 
								$ p1 ⊢ 
								∐ ast.exp_s8_cst◂s1 . 
									ast.s8_of_k s1 ⊢ s1 
									EDS.lod_ps s1 ⊢ { _ sr } 
									rp8.add_s8 { e0 sr } ⊢ e0 
									ip2 { eds l e0 } ⊢| 
								∐ ast.exp_s8_idx◂I . 
									rp8.to_s8 e0 ⊢ s0
									EDS.set_s { s0 eds } ⊢ { s0 eds } 
									ip0 { eds l } ⊢ { eds l } 
									∎ { eds ⟦ cst◂s0 idx◂I < l ⟧ } 
								∐. ast.exp_s8_for◂{ i s } . 
									ast.s8_of_k s ⊢ s 
									rp8.to_s8 e0 ⊢ s0
									EDS.set_s { s0 eds } ⊢ { s0 eds } 
									ip0 { eds l } ⊢ { eds l } 
									∎ { eds ⟦ cst◂s0 for◂{ i s } < l ⟧ } 
							∐. _nil◂{} . 
								rp8.to_s8 e0 ⊢ s0
								EDS.set_s { s0 eds } ⊢ { s0 eds } 
								∎ { eds ⟦ cst◂s0 ⟧ }
						@.ip0 { eds l }  
							$ l ⊢ 
							∐ _cns◂{ p0 l } . 
								$ p0 ⊢ 
								∐ ast.exp_s8_cst◂s0 . 
									ast.s8_of_k s0 ⊢ s0 
									$ l ⊢ 
									∐ _cns◂{ p1 l } . 
										$ p1 ⊢ 
										∐ ast.exp_s8_cst◂s1 . 
											ast.s8_of_k s1 ⊢ s1 
											EDS.lod_ps s0 ⊢ { _ sr } 
											EDS.lod_ps s1 ⊢ { _ s1 }
											rp8.cct { rp8.of_s8◂sr rp8.of_s8◂s1 } ⊢ sr  
											ip2 { eds l sr } ⊢|
										∐ ast.exp_s8_idx◂I . 
											ip0 { eds l } ⊢ { eds l } 
											∎ { eds ⟦ cst◂s0 idx◂I < l ⟧ }
										∐. ast.exp_s8_for◂{ i s } . 
											ast.s8_of_k s ⊢ s 
											ip0 { eds l } ⊢ { eds l } 
											∎ { eds ⟦ cst◂s0 for◂{ i s } < l ⟧ }		 
									∐. _nil◂{} . 
										∎ { eds ⟦ cst◂s0 ⟧ }
								∐ ast.exp_s8_idx◂I . 
									ip0 { eds l } ⊢ { eds l } 
									∎ { eds ⟦ idx◂I < l ⟧ }
								∐. ast.exp_s8_for◂{ i s } . 
									ast.s8_of_k s ⊢ s 
									ip0 { eds l } ⊢ { eds l } 
									∎ { eds ⟦ for◂{ i s } < l ⟧ }
							∐. _nil◂{} . 
								∎ { eds ⟦⟧ } 
					§ 
						@.s8 # { GV { eds e0 } ld lb_n  ar s0 rr pl }
							EDS.lod_p { s0 lb_n eds } ⊢ { _ lb_n eds { l0 lb0 } } 
							_add { ld l0 } ⊢ { ld l0 } 
							lp1 { GV { eds e0 } ld lb_n  ar rr pl } ⊢ { GV { eds e0 } ld lb_n  ar }
							_sub { ld l0 } ⊢ { ld l0 }
							^ lb0,l0 ⊢ _,_,sr 
								"\tlea rsi,[LB_" 0d' "+0x" 1x' "-1]\n" 
								"\tmov rcx,0x" 1x' "\n" 
								`	rep movsb
								//
							asm.add_s8 { e0 sr } ⊢ e0 
							∎ { GV { eds e0 } ld lb_n ar }
					@.lp1 { GV { eds e0 } ld lb_n  ar rr pl }
						$ pl ⊢ 
						∐ _cns◂{ ps pl } . 
							$ ps ⊢ 
							∐ cst◂s0 . 
								s8 { GV { eds e0 } ld lb_n  ar s0 rr pl } ⊢|									
							∐ idx◂{ f0 j0 } . 
								lod_tv { ar j0 } ⊢ { ar j0 p0 }
								$ f0 ⊢ 
								∐ ast.fmt_s◂{} . 
									ast.s8_of_rt p0 ⊢ s0 
									$ s0 ⊢ 
									∐ ast.im_of◂s0 . 
										s8 { GV { eds e0 } ld lb_n  ar s0 rr pl } ⊢|									
									∐. ast.hp_of◂r0 . 
											GV.lod r0 ⊢ { r0 i0 } 
											asm.add_nd { e0 asm.mov_rx_glx◂{ %[ asm.rx.rsi ] i0 } } ⊢ e0 
											_st◂◂"\tmov rax,0x0000_ffff_ffff_ffff\n\tand rax,QWORD [rsi]\n\tadd rdi,rax\n\tpush rsi\n\tpush rax\n" {} ⊢ s1 
											asm.add_st_s8 { e0 s1 } ⊢ e0
											lp1 { GV { eds e0 } ld lb_n  ar rr pl } ⊢ { GV { eds e0 } ld lb_n  ar }
											$~ _^ ⊢ sr 
												`	pop rcx 
												`	pop rsi
												`	lea rsi,[rsi+7+rcx]
												`	rep movsb
												//
											asm.add_st_s8 { e0 sr } ⊢ e0 
											∎ { GV { eds e0 } ld lb_n  ar } 					
								∐ ast.fmt_st_s◂{} . 
									ast.st_of_rt p0 ⊢ r0 
									GV.lod r0 ⊢ { r0 i0 } 
									asm.add_nd { e0 asm.mov_rx_glx◂{ %[ asm.rx.rsi ] i0 } } ⊢ e0 
									$~ _^ ⊢ s1 
										`	mov rax,QWORD [rsi-8] 
										`	add rdi,rax 
										`	push rsi
										`	push rax 
											// 
									asm.add_st_s8 { e0 s1 } ⊢ e0
									lp1 { GV { eds e0 } ld lb_n  ar rr pl } ⊢ { GV { eds e0 } ld lb_n  ar }
									$~ _^ ⊢ sr 
										`	pop rcx 
										`	pop rsi
										`	lea rsi,[rsi+rcx-1]
										`	rep movsb
										//
									asm.add_st_s8 { e0 sr } ⊢ e0 
									∎ { GV { eds e0 } ld lb_n ar } 					
								∐ ast.fmt_d◂{} .
									r64_to_rax { GV p0 e0 } ⊢ { GV e0 }
									$~ _^ ⊢ s1 
										`	mov rsi,rdi  
										`	sub rsp,32 
										`	lea rdi,[rsp+31]
										`	push rsi 
										`	call pf_d_rv 
										`	pop rdi
										`	add rdi,rax 
										`	push rax 
										// 
									asm.add_st_s8 { e0 s1 } ⊢ e0
									lp1 { GV { eds e0 } ld lb_n ar rr pl } ⊢ { GV { eds e0 } ld lb_n  ar }
									$~ _^ ⊢ sr 
										`	pop rcx 
										`	lea rsi,[rsp+31] 
										`	rep movsb
										`	add rsp,32
										//
									asm.add_st_s8 { e0 sr } ⊢ e0 
									∎ { GV { eds e0 } ld lb_n ar } 	 
								∐ ast.fmt_x◂{} .
									r64_to_rax { GV p0 e0 } ⊢ { GV e0 }
									asm.add_st_s8_im◂◂"\tpush rax\n\tcall pf_x_n\n" e0 ⊢ e0
									lp1 { GV { eds e0 } ld lb_n  ar rr pl } ⊢ { GV { eds e0 } ld lb_n  ar }
									asm.add_st_s8_im◂◂"\tpop rax\n\tcall pf_x_rv\n" e0 ⊢ e0 
									∎ { GV { eds e0 } ld lb_n ar } 	
								∐. ast.fmt_p◂{} .
									∎| 
							∐. for◂{ j0 s0 } . 
								lod_tv { ar j0 } ⊢ { ar j0 p0 }
								r64_to_rax { GV p0 e0 } ⊢ { GV e0 }
								EDS.lod_p { s0 lb_n eds } ⊢ { _ lb_n eds { l0 lb1 } } 
								asm.add_st_s8_im◂◂"\tmov rsi,rdi\n\tmov rdi,rax\n\tpush rax\n" e0 ⊢ e0 
								imul_im◂◂"rdi" { l0 e0 } ⊢ { l0 e0 } 
								asm.add_st_s8_im◂◂"\tadd rdi,rsi\n" e0 ⊢ e0 
								lp1 { GV { eds e0 } ld lb_n  ar rr pl } ⊢ { GV { eds e0 } ld lb_n  ar }
								inc_lb { lb_n e0 } ⊢ { _ { lb_n e0 } }
								^ lb1,l0 ⊢ _,_,sr 
									`	pop rax 
									`.LB0:
									`	cmp rax,0
									`	jz .LB1
									`	sub rax,1
									"\tlea rsi,[LB_" 0d' "+0x" 1x' "-1]\n" 
									"\tmov rcx,0x" 1x' "\n" 
									`	rep movsb 
									`	jmp .LB0 
									`.LB1:
									//
								asm.add_s8 { e0 sr } ⊢ e0 
								∎ { GV { eds e0 } ld lb_n ar } 	 
						∐. _nil◂{} . 
							$ rr ⊢ 
							∐ in0◂rr . 
								GV.lod rr ⊢ { rr irr } 
								^ ld ⊢ ld,s1 
									"\tadd rdi,0x" 0x' "\n" 
									`	push rdi 
									`	call mlc_s8 
									`	pop rdi
									`	lea rdi,[rax+7+rdi]
									`	std 
									//
								asm.add_s8 { e0 s1 } ⊢ e0 
								asm.add_nd { e0 asm.mov_glx_rx◂{ irr %[ asm.rx.rax ] } } ⊢ e0 
								∎ { GV { eds e0 } ld lb_n  ar }
							∐. in1◂{ rm rx } . 
								GV.lod rm ⊢ { _ rm } 
								GV.lod rx ⊢ { _ rx } 
								$ rx ⊢ rx,rx0 
								asm.add_nd { e0 asm.mov_rx_glx◂{ %[ asm.rx.rax ] rm } } ⊢ e0 
								asm.add_nd { e0 asm.mov_rx_glx◂{ %[ asm.rx.rsi ] rx0 } } ⊢ e0 
								^ ld ⊢ ld,sc0 
									"\tadd rdi,0x" 0x' "\n" 
									//
								asm.add_s8 { e0 sc0 } ⊢ e0 
								$~ _^ ⊢ sc0 
									`	call pf_x_bc
									// 
								asm.add_st_s8 { e0 sc0 } ⊢ e0 
								asm.add_nd { e0 asm.mov_glx_rx◂{ rx %[ asm.rx.rsi ] } } ⊢ e0 
								∎ { GV { eds e0 } ld lb_n ar }
					∎∎ 

				
				§ suw { lb_w rsp } 
					$ rsp ⊢ rsp,x 
					_inc x ⊢ x 
					_shl_im◂◂3r x ⊢ x
					^ lb_w,x ⊢ lb_w,_,s 
						"EXH_" 0d' ":\n" 
						"\tadd rsp,0x" 1x' "\n" 
						"\tpop rax\n" 
						"\tjmp rax\n" // 
					$ asm.of_s8◂s ⊢ e 
					∎ { lb_w rsp e }
				§ exh { ox lb_w nb l } 
					$ ox ⊢ 
					∐ _some◂lb_x . 
						^ lb_w ⊢ _,sc0 
							"EXH_" 0d' ":\n" // 
						$ asm.of_s8◂sc0 ⊢ e  
						pop_regs.exh { nb l } ⊢ { _ e1 }
						asm.cct { e e1 } ⊢ e 
						^ lb_x ⊢ _,s 
							"\tjmp LB_" 0d' "\n" // 
						asm.add_s8 { e s } ⊢ e 
						∎ e
					∐. _none◂{} . 
						_shl_im◂◂3r nb ⊢ nb 
						suw { lb_w nb } ⊢ { _ _ e } 
						∎ e 
				
				§ alc_gl_i { { GV e } r }
					$ GV ⊢ gn 
					_ref.o r ⊢ { R i }
					∐ i'=<126r . 
						inc_x gn ⊢ { j gn } 
						mov_e { i j e } ⊢ { _ j e } 
						_ref.i { R j } ⊢ r 
						∎ { { gn e } r }
					∐. . 
						_ref.i { R i } ⊢ r 
						∎ { { gn e } r }
				§ alc_gl = lst.map_l◂◂alc_gl_i
				§§ push_gl 
					§ alc { GV l c r e } 
						GV.lod r ⊢ { r i } 
						inc_x c ⊢ { c0 c } 
						∐ i'=<126r . 
							$ r ⊢ _ 
							asm.add_nd { e asm.mov_rsp_n_glx◂{ c0 i } } ⊢ e 
							GV.new GV ⊢ { GV r }
							$ r ⊢ r,r0 
							∎ { GV ⟦ r0 < l ⟧ c r e }														
						∐. . 
							asm.add_nd { e asm.mov_rsp_n_glx◂{ c0 i } } ⊢ e 
							$ r ⊢ r,r0 
							∎ { GV ⟦ r0 < l ⟧ c r e } 
					§ 
						@.atm { { e0 GV l c } a0 }
							$ a0 ⊢ 
							∐ ast.hp◂r0 . 
								alc { GV l c r0 e0 } ⊢ { GV l c r0 e0 } 
								∎ { { e0 GV l c } ast.hp◂r0 }								
							∐ ast.stt_adt◂{ ia na p0 } . 
								RP.map_l◂◂atm { { e0 GV l c } p0 } ⊢ { { e0 GV l c } p0 } 
								∎ { { e0 GV l c } ast.stt_adt◂{ ia na p0 } }
							∐ ast.dyn_adt◂{ { ax al } ri rd } . 
								alc { GV l c ri e0 } ⊢ { GV l c ri e0 } 
								alc { GV l c rd e0 } ⊢ { GV l c rd e0 } 
								∎ { { e0 GV l c } ast.dyn_adt◂{ { ax al } ri rd } }									
							∐ ast.btm◂{} . 
								∎ { { e0 GV l c } ast.btm◂{} }
							∐. ast.hp_im◂v .
								∎ { { e0 GV l c } ast.hp_im◂v }
					§ ptn = RP.map_l◂◂atm 
					§ f # { { e GV } vl } 
						lst.map_l◂◂ptn { { asm.e◂{} GV ⟦⟧ %[ 0r ] } vl } ⊢ { { e0 GV l c } vl }
						^ c ⊢ c,s 
							"\tlea rsp,[rsp-(8*0x" 0x' ")]\n" // 
						asm.pfx_s8 { s e0 } ⊢ e0 
						asm.cct { e e0 } ⊢ e 
						∎ { { e GV l c } vl }
					∎∎
				
				§§ pop_gl 
					§ f_i # { { e c } r } 
						$ c ⊢ c,c0 
						_dec c ⊢ c
						GV.lod r ⊢ { _ r }
						asm.add_nd { e asm.mov_glx_rsp_n◂{ r c0 } } ⊢ e 
						∎ { e c } 
					§ f { e l c }
						^ c ⊢ c,s 
							"\tlea rsp,[rsp+(8*0x" 0x' ")]\n" // 
						_dec c ⊢ c 
						lst.fld_l◂◂f_i { { e c } l } ⊢ { e _ } 
						asm.add_s8 { e s } ⊢ e 
						∎ e
					∎∎	
				
				§§ alc_gl 
					§ alc { { GV e } r }
						GV.lod r ⊢ { r i } 
						∐ i'=<126r . 
							$ r ⊢ _ 
							GV.new_i GV ⊢ { GV r j }
							mov_e { i j e } ⊢ { _ j e } 
							∎ { { GV e } r }													
						∐. . 
							∎ { { GV e } r } 
					§ 
						@.atm { { GV e } a0 }
							$ a0 ⊢ 
							∐ ast.hp◂r0 . 
								alc { { GV e } r0 } ⊢ { { GV e } r0 } 
								∎ { { GV e } ast.hp◂r0 }								
							∐ ast.stt_adt◂{ ia na p0 } . 
								RP.map_l◂◂atm { { GV e } p0 } ⊢ { { GV e } p0 } 
								∎ { { GV e } ast.stt_adt◂{ ia na p0 } }
							∐ ast.dyn_adt◂{ { ax al } ri rd } . 
								alc { { GV e } ri } ⊢ { { GV e } ri } 
								alc { { GV e } rd } ⊢ { { GV e } rd } 
								∎ { { GV e } ast.dyn_adt◂{ { ax al } ri rd } }									
							∐ ast.btm◂{} . 
								∎ { { GV e } ast.btm◂{} }
							∐. ast.hp_im◂v .
								∎ { { GV e } ast.hp_im◂v }
					§ ptn = RP.map_l◂◂atm 
					§ f = lst.map_l◂◂ptn 
					∎∎
			§ @.mk_id_ptn { vl p } 
					$ vl ⊢ 
					∐ _cns◂{ q vl } . 
						mk_id_ptn { vl RP.cns2◂{ q p } } ⊢|
					∐. _nil◂{} . 
						∎ p 
				§ stt_f_c {  EE FE vl p1 f_c }   	
					mk_id_ptn { vl p1 } ⊢ p1
					$ f_c ⊢ 
					∐ f_seq◂{} . 
						∎ {  FE EE ‹ p1 › } 
					∐ f_seq_mtc◂{ LBR pr } . 
						$ EE ⊢ { GV lb_n tav e }
						$ FE ⊢ { mfv  eg0 eds ew0 }
						GV.rpc pr ⊢ { pr pr0 } 
						mov_ptn2.ptn { e { tav eds } GV p1 pr0 } ⊢ { e { tav eds } GV } 
						$ pr ⊢ p1 
						jmp_lb { LBR e } ⊢ { LBR e } 
						$ { GV lb_n tav e } ⊢ EE
						$ { mfv eg0 eds ew0 } ⊢ FE
						∎ {  FE EE ‹ p1 › } 
					∐ f_ret_mtc◂{ _ pr } . 
						$ EE ⊢ { GV lb_n tav e }
						$ FE ⊢ { mfv eg0 eds ew0 }
						GV.rpc pr ⊢ { pr pr0 } 
						mov_ptn2.ptn { e { tav eds } GV p1 pr0 } ⊢ { e { tav eds } GV } 
						$ pr ⊢ p1 
						ret e ⊢ e 
						$ { GV lb_n tav e } ⊢ EE
						$ { mfv eg0 eds ew0 } ⊢ FE
						∎ {  FE EE ‹ p1 › } 
					∐. f_ret◂pr . 
						$ EE ⊢ { GV lb_n tav e }
						$ FE ⊢ { mfv eg0 eds ew0 }
						$ pr ⊢ 
						∐ _some◂pr .
							GV.rpc pr ⊢ { pr pr0 } 
							mov_ptn2.ptn { e { tav eds } GV p1 pr0 } ⊢ { e { tav eds } GV } 
							$ pr ⊢ p1 
							ret e ⊢ e
							$ { GV lb_n tav e } ⊢ EE
							$ { mfv eg0 eds ew0 } ⊢ FE
							∎ {  FE EE ‹ p1 › } 
						∐. _none◂{} .
							asm.add_st_s8_im◂◂"\tRT_ERR 0xffff_ec37\n" e ⊢ e 			
							$ { GV lb_n tav e } ⊢ EE
							$ { mfv  eg0 eds ew0 } ⊢ FE
							∎ {  FE EE ‹› }
				§ stt_alc_hp { tav GV e0 r h } 
				$ GV ⊢ gn 
				alc_type_k.f_o { tav %[ 0r ] h } ⊢ { tav c_n pa0 }
				$ gn ⊢ GV 				
				∐ pa0 ⊢ _some◂pa0 .
				  ∐ c_n'=0r . 
				  	∎ { tav GV e0 ‹ pa0 › }  
			  	∐ c_n'=1r . 
			  		lod_sgm.ptn_1 { { e0 r } pa0 } ⊢ { { e0 _ } pa1 } 
			  		∎ { tav GV e0 ‹ pa1 › }  
			  	∐. . 
						GV.lod r ⊢ { r i } 
						asm.add_nd { e0 asm.mov_op_glx◂{ asm.op.rx◂%[ asm.rx.rdi ] i } } ⊢ e0 
			  		$~ _^ ⊢ sc0
			  			`	push SRC_REG 
			  			`	mov SRC_REG,rdi 
			  			`	add SRC_REG,8
			  			//
			  		asm.add_st_s8 { e0 sc0 } ⊢ e0
			  		lod_sgm.ptn { { e0 GV } pa0 } ⊢ { { e0 GV } pa1 } 
			  		$~ _^ ⊢ sc0 
			  			`	sub SRC_REG,8 
			  			`	mov rdi,SRC_REG  
			  			`	pop SRC_REG 
			  			//
			  		asm.add_st_s8 { e0 sc0 } ⊢ e0 
						free_rcd◂◂"rdi" { c_n e0 } ⊢ { _ e0 } 
			  		∎ { tav GV e0 ‹ pa1 › }  
		  	∐. . 
		  		∎ { tav GV e0 ‹› }
			§ stt_jmp_axm # {  EE FE p1 fc }
				$ fc ⊢ { _ { _ vl _ } f_c } 
				stt_f_c {  EE FE vl p1 f_c } ⊢| 
			§§ ila 
				§ rx i 
					=+ i' 
					∐ 
						∎ %[ asm.rx.rax ]
					∐ 
						∎ %[ asm.rx.rdi ]
					∐ 
						∎ %[ asm.rx.rsi ]
					∐ 
						∎ %[ asm.rx.rdx ]
					∐ 
						∎ %[ asm.rx.rcx ]
					∐ 
						∎ %[ asm.rx.r8 ]
					∐ 
						∎ %[ asm.rx.r9 ]
					∐ 
						∎ %[ asm.rx.r10 ]
					∐. 
						∎|					
				§ @.n { t n } 
					∐ t ⊢ RP.atm◂ast.k_op_axm◂{ a al _ }; 
						∐ a'=EX.ila_n . 
							∎ n 
						∐. a'=EX.ila_i; al ⊢ _cns◂{ t _nil◂{} } . 
							_inc n ⊢ n 
							n { t n } ⊢| 
					∐. . 
						∎|
				§ @.s { { GV l0 l1 n_s e0 e1 } i } 
					∐ i'<>n_s' .
						∐ l0 ⊢ _cns◂{ p l0 } . 
							r64_to_hp { GV p e0 } ⊢ { GV r e0 }
							GV.lod r ⊢ { r j }
							$ j ⊢ j,j0
							$ i ⊢ i,i0
							rx i0 ⊢ i0 
							asm.add_nd { e0 asm.mov_op_glx◂{ asm.op.rx◂i0 j0 } } ⊢ e0 
							_inc i ⊢ i 
							s { { GV l0 l1 n_s e0 e1 } i } ⊢|  	
						∐. . 
							∎| 
					∐. .
						rev l1 ⊢ l1 
						∎ { GV RP.rcd◂l1 e0 e1 }
						
				§ @.sd { { GV l0 l1 n_s d e0 e1 } i } 
					∐ i'=<n_s'; i'<>n_s' .
						∐ l0 ⊢ _cns◂{ p l0 } . 
							r64_to_hp { GV p e0 } ⊢ { GV r e0 }
							GV.lod r ⊢ { r j }
							$ j ⊢ j,j0
							$ i ⊢ i,i0
							rx i0 ⊢ i0 
							asm.add_nd { e0 asm.mov_op_glx◂{ asm.op.rx◂i0 j0 } } ⊢ e0 
							∐ d ⊢ RP.atm◂ast.k_op_axm◂{ a al _ }; 
								∐ a'=EX.ila_n . 
									_inc i ⊢ i 
									s { { GV l0 l1 n_s e0 e1 } i } ⊢|  
								∐ a'=EX.ila_c; al ⊢ _cns◂{ d _nil◂{} } . 
									_inc i ⊢ i 
									sd { { GV l0 ⟦ stt_v.r64_reg◂r < l1 ⟧ n_s d e0 e1 } i } ⊢| 
								∐. a'=EX.ila_i; al ⊢ _cns◂{ d _nil◂{} } . 
									$ j ⊢ j,j0
									$ i ⊢ i,i0
									rx i0 ⊢ i0 
									asm.add_nd { e1 asm.mov_glx_op◂{ j0 asm.op.rx◂i0 } } ⊢ e1 
									_inc i ⊢ i 
									sd { { GV l0 ⟦ stt_v.r64_reg◂r < l1 ⟧ n_s d e0 e1 } i } ⊢| 
							∐. . 
								∎|
						∐. . 
							∎| 
					∐. .
						∐ d ⊢ RP.atm◂ast.k_op_axm◂{ a al _ }; 
							∐ a'=EX.ila_n . 
								rev l1 ⊢ l1 
								∎ { GV RP.rcd◂l1 e0 e1 }
							∐ a'=EX.ila_c; al ⊢ _cns◂{ d _nil◂{} } . 
								∎| 
							∐. a'=EX.ila_i; al ⊢ _cns◂{ d _nil◂{} } . 
								GV.new_i GV ⊢ { GV r j } 
								$ j ⊢ j,j0
								$ i ⊢ i,i0
								rx i0 ⊢ i0 
								asm.add_nd { e1 asm.mov_glx_op◂{ j0 asm.op.rx◂i0 } } ⊢ e1 
								_inc i ⊢ i 
								sd { { GV l0 ⟦ stt_v.r64_reg◂r < l1 ⟧ n_s d e0 e1 } i } ⊢| 
						∐. .
							∎|
				∎∎	 

					§ @.mk_vyl { vyl yd } 
						$ vyl ⊢ 
						∐ _cns◂{ y vyl } .
							mk_vyl { vyl TX.cns2◂{ y yd } } ⊢| 
						∐. _nil◂{} . 
							∎ yd 
					§ stt_oom { GV tav lb_n yd f_c e } 
						$ f_c ⊢ 
						∐ { lbi { vn vl vyl } f_seq◂{} } .
							inc_x lb_n ⊢ { LBR lb_n } 
							lb_etr { LBR e } ⊢ { LBR e } 
							$ LBR ⊢ LBR,L0 
							$ GV ⊢ gn 
							$ vyl ⊢ vyl,vyl0
							mk_vyl { vyl0 yd } ⊢ yd 
							alc_type_k.f_i { tav %[ 0r ] yd } ⊢ { tav _ pa0 }	
							$ gn ⊢ GV 
							GV.rpc_d pa0 ⊢ { pa0 pr } 
							∎ { GV tav lb_n { lbi { vn vl vyl } f_seq_mtc◂{ LBR pa0 } } L0 pr e } 
						∐ { lbi vl f_seq_mtc◂{ LBR pr } } . 
							$ LBR ⊢ LBR,L0 
							GV.rpc_d pr ⊢ { pr pr0 } 
							∎ { GV tav lb_n { lbi vl f_seq_mtc◂{ LBR pr } } L0 pr0 e } 
						∐ { lbi vl f_ret_mtc◂{ LBR pr } } . 
							$ LBR ⊢ LBR,L0 
							GV.rpc_d pr ⊢ { pr pr0 } 
							∎ { GV tav lb_n { lbi vl f_ret_mtc◂{ LBR pr } } L0 pr0 e } 
						∐. { lbi vl f_ret◂pr } . 
							inc_x lb_n ⊢ { LBR lb_n } 
							$ LBR ⊢ LBR,L0 
							lb_etr { LBR e } ⊢ { LBR e } 
							$ pr ⊢ 
							∐ _some◂pr .
								GV.rpc_d pr ⊢ { pr pr0 } 
								∎ { GV tav lb_n { lbi vl f_ret_mtc◂{ LBR pr } } L0 pr0 e } 
							∐. _none◂{} .
								$ RP.atm◂ast.btm◂{} ⊢ pr,pr0
								∎ { GV tav lb_n { lbi vl f_ret_mtc◂{ LBR pr } } L0 pr0 e }
					
			
			§§ RV = ast.RV 
			§ 
				@.rt_of_m { RV m } 
					$ m ⊢ 
					∐ stt_a◂{ i n mp } . 
						rt_of_mp { RV mp } ⊢ { RV p } 
						∎ {  RV RP.atm◂ast.stt_adt◂{ i n p } }
					∐ stt_v◂c . 
						∎ { RV RP.atm◂ast.hp_im◂c } 
					∐. stt_r◂i . 
						RV.get { RV i } ⊢ { RV { _ p } } 
						smt_err◂◂10r p ⊢ p 
						∎ { RV p }

				@.rt_of_mp = RP.map_l_atm◂◂rt_of_m 	
			§ 
				@.rt_of_m_T◂◂GET { RV m } 
					$ m ⊢ 
					∐ stt_a◂{ i n mp } . 
						rt_of_mp_T◂◂GET { RV mp } ⊢ { RV p } 
						∎ { RV RP.atm◂ast.stt_adt◂{ i n p } }
					∐ stt_v◂c . 
						∎ { RV RP.atm◂ast.hp_im◂c } 
					∐. stt_r◂i . 
						GET { RV i } ⊢ { RV _ p } 
						∎ { RV p }
				@.rt_of_mp_T◂◂GET # x 
					RP.map_l_atm◂◂(rt_of_m_T◂◂GET) x ⊢|
				
				
				¶ K l',a'
				∐ K_l : l' 
				∐ K_a : a'
				§
					@.stt_test_hp { t r0 r1 lb_f ec0 }
					=+ t' 
					-- e 
					∐
						∎|
					-- ne 
					∐
						∎|
					-- le 
					∐ 
						∎|
					-- g 
					∐ 
						∎| 
					-- e_r64 
					∐ 
						cmp.idx_idx { r0 r1 ec0 } ⊢ { _ _ ec0 }
						jnz_lb { lb_f ec0 } ⊢ { lb_f ec0 }
						∎ { lb_f ec0 }	
					-- e_pt 
					∐
						cmp.idx_idx { r0 r1 ec0 } ⊢ { _ _ ec0 }
						jnz_lb { lb_f ec0 } ⊢ { lb_f ec0 }
						∎ { lb_f ec0 }		
					-- e_s8 
					∐ 
						asm.add_nd { ec0 asm.mov_op_glx◂{ asm.op.rx◂%[ asm.rx.rsi ] r0 } } ⊢ ec0 
						asm.add_nd { ec0 asm.mov_op_glx◂{ asm.op.rx◂%[ asm.rx.rdi ] r1 } } ⊢ ec0 
						$~ _^ ⊢ e0 
							`	call eq_s8_q  
							"\tcmp rax,1\n" // 
						asm.add_st_s8 { ec0 e0 } ⊢ ec0 
						jnz_lb { lb_f ec0 } ⊢ { lb_f ec0 }								 							
						∎ { lb_f ec0 }		
					-- ne_r64 
					∐
						cmp.idx_idx { r0 r1 ec0 } ⊢ { _ _ ec0 }
						jz_lb { lb_f ec0 } ⊢ { lb_f ec0 }		
						∎ { lb_f ec0 }
					-- ne_pt 
					∐
						cmp.idx_idx { r0 r1 ec0 } ⊢ { _ _ ec0 }
						jz_lb { lb_f ec0 } ⊢ { lb_f ec0 } 
						∎ { lb_f ec0 }
					-- ne_s8 
					∐
						asm.add_nd { ec0 asm.mov_op_glx◂{ asm.op.rx◂%[ asm.rx.rdi ] r0 } } ⊢ ec0 
						asm.add_nd { ec0 asm.mov_op_glx◂{ asm.op.rx◂%[ asm.rx.rsi ] r1 } } ⊢ ec0 
						$~ _^ ⊢ e0 
							`	call eq_s8_q  
							"\tcmp rax,1\n" // 
						asm.add_st_s8 { ec0 e0 } ⊢ ec0 
						jz_lb { lb_f ec0 } ⊢ { lb_f ec0 }
						∎ { lb_f ec0 }	
						
				-- le_r64 
					∐
						cmp.idx_idx { r0 r1 ec0 } ⊢ { _ _ ec0 }
						jg_lb { lb_f ec0 } ⊢ { lb_f ec0 }
						∎ { lb_f ec0 }
					-- le_s8 
					∐
						∎| 
					∐.
						∎|
			§	stt_test_im { b t c r lb_f ec0 }
					=+ t' 
					-- e 
					∐ 
						∎|
					-- ne 
					∐  
						∎|
					-- le 
					∐ 
						∎|
					-- g 
					∐ 
						∎| 
					-- e_r64 
					∐ 
						ast.r64_of_k c ⊢ x 
						cmp.idx_im { r x ec0 } ⊢ { _ _ ec0 }
						jnz_lb { lb_f ec0 } ⊢ { lb_f ec0 }
						∎ { lb_f ec0 }	
					-- e_pt 
					∐
						∎|	
					-- e_s8 
					∐ 
						∎|		
					-- ne_r64 
					∐
						ast.r64_of_k c ⊢ x 
						cmp.idx_im { r x ec0 } ⊢ { _ _ ec0 }
						jz_lb { lb_f ec0 } ⊢ { lb_f ec0 }		
						∎ { lb_f ec0 }	
					-- ne_pt 
					∐
						∎|
					-- ne_s8 
					∐
						∎|						 							
				-- le_r64 
					∐
						ast.r64_of_k c ⊢ x 
						cmp.idx_im { r x ec0 } ⊢ { _ _ ec0 }
						∐ b ⊢ bl.t◂{} . 
							jg_lb { lb_f ec0 } ⊢ { lb_f ec0 }
							∎ { lb_f ec0 }
						∐. . 
							jl_lb { lb_f ec0 } ⊢ { lb_f ec0 }
							∎ { lb_f ec0 }
					-- le_s8 
					∐
						∎| 
					∐. 
						∎|
				§ stt_test_ct { t c0 c1 lb_f e0 } 
					=+ t' 
					-- e 
					∐ 
						ast.eq_ct_ptn { c0 c1 } ⊢ { c0 c1 b } 
						∐ b ⊢ bl.f◂{} . 
							jmp_lb { lb_f e0 } ⊢ { lb_f e0 } 
							∎ { lb_f e0 }
						∐. . 
							∎ { lb_f e0 }
					-- ne 
					∐ 
						ast.eq_ct_ptn { c0 c1 } ⊢ { c0 c1 b } 
						∐ b ⊢ bl.t◂{} . 
							jmp_lb { lb_f e0 } ⊢ { lb_f e0 } 
							∎ { lb_f e0 }
						∐. . 
							∎ { lb_f e0 }
					-- le 
					∐ 
						ast.r64_of_k c0 ⊢ x0 
						ast.r64_of_k c1 ⊢ x1 
						∐ x0'=<x1' . 
							∎ { lb_f e0 } 
						∐. . 
							jmp_lb { lb_f e0 } ⊢ { lb_f e0 }
							∎ { lb_f e0 }
					∐. 
						∎|
						
			§	stt_mtc_test { GV t lb_n lb_f v0 v1 e0 }
					∐ v0 ⊢ RP.rcd◂l0; v1 ⊢ RP.rcd◂l1 . 
						∎| 
					∐ v0 ⊢ RP.atm◂a0; v1 ⊢ RP.atm◂a1 . 
						$ a0 ⊢ 
						∐ ast.hp◂r0 . 
							GV.lod r0 ⊢ { _ r0 } 
							∐ a1 ⊢ ast.hp◂r1 . 
								GV.lod r1 ⊢ { _ r1 } 
								stt_test_hp { t r0 r1 lb_f e0 } ⊢ { lb_f e0 }
								∎ { GV lb_n lb_f e0 }
							∐ a1 ⊢ ast.hp_im◂c1 . 
								stt_test_im { bl.t◂{} t c1 r0 lb_f e0 } ⊢ { lb_f e0 } 
								∎ { GV lb_n lb_f e0 }
							∐. . 
								∎|
						∐ ast.hp_im◂c0 . 
							∐ a1 ⊢ ast.hp◂r1 . 
								GV.lod r1 ⊢ { _ r1 } 
								stt_test_im { bl.f◂{} t c0 r1 lb_f e0 } ⊢ { lb_f e0 } 
								∎ { GV lb_n lb_f e0 }
							∐ a1 ⊢ ast.hp_im◂c1 . 
								stt_test_ct { t c0 c1 lb_f e0 } ⊢ { lb_f e0 } 
								∎ { GV lb_n lb_f e0 }
							∐. . 
								∎|
						∐ ast.btm◂{} . 
							∎|
						∐ ast.stt_adt◂_ . 
							∎|
						∐. ast.dyn_adt◂_ . 
							∎|
					∐. . 
						∎| 
				§ mk_rl_i # { rl p } 
					ast.mk_lst { rl p } ⊢| 
				§ @.mk_vl { { vn vl } p } 
					∐ vn'=0r . 
						∎ { vl p } 
					∐. . 
						_dec vn ⊢ vn 
						∐ p ⊢ RP.rcd◂_cns◂{ p0 _cns◂{ p1 _nil◂{} } } . 
							mk_vl { { vn ⟦ p0 < vl ⟧ } p1 } ⊢| 
						∐. . 
							∎|
				§ mk_vl # { vn p } 
					mk_vl { { vn ⟦⟧ } p } ⊢|
				§	@.stt_mtc_RV # { { n _ RV } { x0 y0 is } }
						idx.asc_ply { RV { x0 is } } ⊢ RV 
						rt_of_mp_T◂◂idx.get { RV y0 } ⊢ { _ is }
						∎ { n is } 
					@.stt_mtc_mt # { { n _ RV } { x is0 v0 v1 } } 
						idx.asc_ply { RV { x is0 } } ⊢ RV 
						rt_of_mp_T◂◂idx.get { RV v0 } ⊢ { RV v0 }
						rt_of_mp_T◂◂idx.get { RV v1 } ⊢ { _ v1 }		
						∎ { v0 v1 }
				§ @.stt_mtc_mt_0 { v0 v1 x is }
						∐ v0 ⊢ RP.atm◂stt_v◂c0 . 
							∐ v1 ⊢ RP.atm◂stt_v◂c1 . 
								∎|
							∐ v1 ⊢ RP.atm◂stt_r◂i1 .
								idx.lod_ply { i1 { x is } } ⊢ { yx is o } 
								smt_err◂◂14r o ⊢ v1
								∎ { RP.atm◂ast.hp_im◂c0 v1 is }
							∐. . 
								∎| 
						∐ v0 ⊢ RP.atm◂stt_r◂i0 . 
							∐ v1 ⊢ RP.atm◂stt_v◂c1 . 
								idx.lod_ply { i0 { x is } } ⊢ { yx is o } 
								smt_err◂◂13r o ⊢ v0
								∎ { v0 RP.atm◂ast.hp_im◂c1 is }
							∐ v1 ⊢ RP.atm◂stt_r◂i1 .
								idx.asc_2 { { i0 RP.unt◂{} i1 RP.unt◂{} } { x is } } ⊢ { { _ v0 _ v1 } is }
								∎ { v0 v1 is }									
							∐. . 
								∎|
						∐. . 
							∎|
							
				§ stt_bf { b GV is } 
						∐ b ⊢ bl.t◂{} . 
							GV.gen { GV is } ⊢ { GV is } 
							∎ { GV is } 
						∐. . 
							∎ { GV is } 
				§ 
					@.stt_etr { { f of } v apv GV lb_n tav { eg0 eds } } 
						_ref.o of ⊢ { OF of } 
						$ of ⊢ 
						∐ _some◂L . 
							$ L ⊢ L,L0
							_ref.i { OF ‹ L › } ⊢ _
							∎ { L0 apv GV lb_n tav { eg0 eds } } 
						∐. _none◂{} . 
							inc_x lb_n ⊢ { lbg lb_n } 
							T.of_imp v ⊢ { ys yd }
							$ ys ⊢ ys,ys0 
							alc_type_k.f_x { tav GV ys0 } ⊢ { tav GV p0 } 
							$ yd ⊢ yd,yd0
							alc_type_k.f_o { tav %[ 0r ] yd0 } ⊢ { tav d_n pr0 } 
							^ lbg ⊢ lbg,ec1 
								"LB_" 0d' ": ;; "  "\n" // 
							--_emt ec1 ⊢ ec1 
							asm.add_s8 { asm.e◂{} ec1 } ⊢ ee0 
							$ lbg ⊢ lbg,lbg0
							$ pr0 ⊢ pr0,pr00
							$ { lbg0 { %[ 0r ] ⟦⟧ ⟦⟧ } f_ret◂pr00 } ⊢ f_c 
							_ref.lod f ⊢ { _ f }
							$ p0 ⊢ p0,p0_f 
							$ { lbg p0 pr0 } ⊢ R0
							$ R0 ⊢ R0,R1 
							_ref.i { OF ‹ R1 › } ⊢ _
							stt_ir { { apv eg0 eds asm.e◂{} } { GV lb_n tav ee0 } ‹› f_c f p0_f } ⊢ { FE EE _ }
							$ FE ⊢ { apv eg0 eds ew0 }		
							$ EE ⊢ { GV lb_n tav ee0 }
							asm.cct { ee0 ew0 } ⊢ ee0 
							asm.blt_buf { eg0 ee0 } ⊢ eg0 
							∎ { R0 apv GV lb_n tav { eg0 eds } } 
					@.stt_jmp { ox f_c apv GV lb_n tav { eg0 eds ec0 ew0 } { is o } } 
						$ o ⊢ 
						∐ RP.rcd◂_ . 
							∎|  
						∐. RP.atm◂k . 
							∐ k ⊢ ast.k_t◂{ o _ } .
								stt_jmp { ox f_c apv GV lb_n tav { eg0 eds ec0 ew0 } { is o } } ⊢|
							∐ k ⊢ ast.k_ap◂{ p t } .
								∎|
							∐ k ⊢ ast.k_ctr◂{ ia na _ } . 
								∎|
							∐ k ⊢ ast.k_btm◂t . 
								ast.is_btm_ptn { %[ 0r ] is } ⊢ b 
								=+ b' 
								-- not btm 
								∐
									--T.pnt_type_k t ⊢ s 
									--_emt s ⊢ _
									∎| 
								-- btm 
								∐. 
									asm.add_st_s8_im◂◂"\tRT_ERR 0xfbbb_ec37\n" ec0 ⊢ ec0 			
									$ { GV lb_n tav ec0 } ⊢ EE
									$ { apv eg0 eds ew0 } ⊢ FE
									∎ { FE EE ‹› }
							∐ k ⊢ ast.k_fnc◂_ . 
								∎|
							∐ k ⊢ ast.k_ply◂{ _ p0 p1 } . 
								∎|
							∐ k ⊢ ast.k_op◂{ ibg ie v } . 
								∎| 
							∐ k ⊢ ast.k_app◂{ k0 k1 } . 
								_emt_im◂◂"SJ0" {} ⊢ {} 
								∎|  
							∐ k ⊢ ast.k_op_axm◂{ a la ya } . 
								∎| 
							∐. . 
								∎|
					
					@.stt_jt { lb0 n i e }
						∐ n'=i' . 
							_st◂◂"0\n" {} ⊢ sts0
							asm.add_st_s8 { e sts0 } ⊢ e 
							∎ { lb0 n e }
						∐. . 
							^ lb0,i ⊢ lb0,i,s 
								"LB_" 0d' "_" 1d' "," // 
							asm.add_s8 { e s } ⊢ e 
							_inc i ⊢ i 
							stt_jt { lb0 n i e } ⊢| 
					@.stt_ir { FE EE ox f_c o is } 
						$ o ⊢ 
						∐ ast.cn_e◂o .
							$ FE ⊢ { apv eg0 eds ew0 }
							$ EE ⊢ { GV lb_n tav ec0 }
							stt_jmp { ox f_c  apv  GV lb_n  tav { eg0 eds ec0 ew0 } { is o } } ⊢|
						∐ ast.cn_m◂{ _ { m b } yd } .
							∐ b'=<1r . 
								stt_mtc { {  ⟦⟧ m } ox f_c FE EE is } ⊢|
							∐. .
								$ EE ⊢ { GV lb_n tav ec0 }
								stt_oom { GV tav lb_n yd f_c asm.e◂{} } ⊢ { GV tav lb_n f_c LBR pr e1 }
								$ { GV lb_n tav ec0 } ⊢ EE 
								stt_mtc { {  ⟦⟧ m } ox f_c FE EE is } ⊢ {  FE EE _ }
								$ EE ⊢ { GV lb_n tav ec0 }
								asm.cct { ec0 e1 } ⊢ ec0 
								$ ‹ pr › ⊢ iy
								$ { GV lb_n tav ec0 } ⊢ EE
								∎ { FE EE iy }		
						∐ ast.cn_id◂{ yi o } .
							∐ is ⊢ RP.rcd◂_cns◂{ p0 _cns◂{ p1 _nil◂{} } } .
								$ f_c ⊢ { lbi { vn vl vyl } f_c }
								_inc vn ⊢ vn 
								$ ⟦ p0 < vl ⟧ ⊢ vl 
								$ ⟦ yi < vyl ⟧ ⊢ vyl
								stt_ir { FE EE ox { lbi { vn vl vyl } f_c } o p1 } ⊢|	
							∐. . 
								∎|						
						∐ ast.cn_p◂{ o0 o1 } .
							$ ox ⊢ ox,ox0 
							$ f_c ⊢ { lbi { vn vl vyl } f_c } 
							$ lbi ⊢ lbi,lbi0 
							$ vn ⊢ vn,vn0 
							$ vyl ⊢ vyl,vyl0
							_ref.lod o0 ⊢ { _ o0 }
							$ f_seq◂{} ⊢ fc0
							stt_ir {  FE EE ox0 { lbi0 { vn vl vyl } fc0 } o0 is } ⊢ {  FE EE is }
							$ is ⊢ 
							∐ _some◂is . 
								$ vn0 ⊢ vn,vn0 
								mk_vl { vn0 is } ⊢ { vl is } 
								_ref.lod o1 ⊢ { _ o1 } 
								stt_ir { FE EE ox { lbi { vn vl vyl0 } f_c } o1 is } ⊢|
							∐. _none◂{} . 
								∎ {  FE EE ‹› }	
						∐ ast.cn_o◂{ f bf tf of } .
							$ FE ⊢ { apv eg0 eds ew0 }
							$ EE ⊢ { GV lb_n tav ec0 }
							
							stt_etr { { f of } tf apv GV lb_n tav { eg0 eds } } ⊢ { R apv GV lb_n tav { eg0 eds } } 
							$ R ⊢ { lb p0 p1 } 
							$ f_c ⊢ { lb_i { _ vl _ } f_c } 
							∐ vl ⊢ _nil◂{} . 
								$ asm.e◂{} ⊢ er 
								inc_x lb_n ⊢ { lb_w lb_n } 
								stt_bf { bf GV p0 } ⊢ { GV p0 } 
								∐ f_c ⊢ f_seq◂{} . 
									^ lb_w ⊢ lb_w,s0 
										"\tpush EXH_" 0d' "\n" // 
									asm.add_s8 { er s0 } ⊢ er 
									exh { ox lb_w %[ 0r ] ⟦⟧ } ⊢ ew1
									asm.cct { ew0 ew1 } ⊢ ew0 
									mov_ptn2.ptn { er { tav eds } GV is p0 } ⊢ { er { tav eds } GV }
									call_lb { lb er } ⊢ { _ er } 
									asm.cct { ec0 er } ⊢ ec0 
									_st◂◂"\tadd rsp,8\n" {} ⊢ s0 
									asm.add_st_s8 { ec0 s0 } ⊢ ec0 
									$ { apv eg0 eds ew0 } ⊢ FE
									$ { GV lb_n tav ec0 } ⊢ EE			
									∎ {  FE EE p1 }
								∐ f_c ⊢ f_seq_mtc◂{ LBR _ } . 
									^ lb_w ⊢ lb_w,s0 
										"\tpush EXH_" 0d' "\n" // 
									asm.add_s8 { er s0 } ⊢ er 
									exh { ox lb_w %[ 0r ] ⟦⟧ } ⊢ ew1
									asm.cct { ew0 ew1 } ⊢ ew0 
									mov_ptn2.ptn { er { tav eds } GV is p0 } ⊢ { er { tav eds } GV }
									call_lb { lb er } ⊢ { _ er } 
									asm.cct { ec0 er } ⊢ ec0 
									_st◂◂"\tadd rsp,8\n" {} ⊢ sts0
									asm.add_st_s8 { ec0 sts0 } ⊢ ec0 
									jmp_lb { LBR ec0 } ⊢ { LBR ec0 } 
									$ { apv eg0 eds ew0 } ⊢ FE
									$ { GV lb_n tav  ec0 } ⊢ EE			
									∎ {  FE EE p1 }
								∐. .
									$ f_c ⊢ _ 
									mov_ptn2.ptn { ec0 { tav eds } GV is p0 } ⊢ { ec0 { tav eds } GV }
									^ lb ⊢ lb,sc0 
										"\tjmp LB_" 0d' "\n" // 
									asm.add_s8 { ec0 sc0 } ⊢ ec0 
									$ { apv eg0 eds ew0 } ⊢ FE
									$ { GV lb_n tav ec0 } ⊢ EE			
									∎ { FE EE p1 }
								
							∐. .
								inc_x lb_n ⊢ { lb_w lb_n } 
								∐ bf ⊢ bl.t◂{} .
									lst.map_l◂◂GV.gen { GV vl } ⊢ { GV vl }
									GV.gen { GV p0 } ⊢ { GV p0 } 
									push_gl.f { { ec0 GV } vl } ⊢ { { ec0 GV l c } vl }  
									^ lb_w ⊢ lb_w,s0 
										"\tpush EXH_" 0d' "\n" // 
									asm.add_s8 { ec0 s0 } ⊢ ec0 
									$ l ⊢ l,l0 
									exh { ox lb_w %[ 0r ] l0 } ⊢ ew1
									asm.cct { ew0 ew1 } ⊢ ew0 
									mov_ptn2.ptn { ec0 { tav eds } GV is p0 } ⊢ { ec0 { tav eds } GV }
									call_lb { lb ec0 } ⊢ { _ ec0 } 
									_st◂◂"\tadd rsp,8\n" {} ⊢ sts0
									asm.add_st_s8 { ec0 sts0 } ⊢ ec0 
									pop_gl.f { ec0 l c } ⊢ ec0 
									$ p1 ⊢ 
									∐ _some◂p1 .
										$ { GV lb_n tav ec0 } ⊢ EE
										$ { apv eg0 eds ew0 } ⊢ FE
										stt_f_c {  EE FE vl p1 f_c } ⊢| 
									∐. _none◂{} . 
										asm.add_st_s8_im◂◂"\tRT_ERR 0xefff_ec37\n" ec0 ⊢ ec0 			
										$ { GV lb_n tav ec0 } ⊢ EE
										$ { apv eg0 eds ew0 } ⊢ FE
										∎ {  FE EE ‹› }
								∐. .
									$ asm.e◂{} ⊢ er 
									alc_gl.f { { GV er } vl } ⊢ { { GV er } vl } 
									^ lb_w ⊢ lb_w,s0 
										"\tpush EXH_" 0d' "\n" // 
										asm.add_s8 { er s0 } ⊢ er 
										exh { ox lb_w %[ 0r ] ⟦⟧ } ⊢ ew1
										asm.cct { ew0 ew1 } ⊢ ew0 
										mov_ptn2.ptn { er { tav eds } GV is p0 } ⊢ { er { tav eds } GV }
										call_lb { lb er } ⊢ { _ er } 
										asm.cct { ec0 er } ⊢ ec0 
										_st◂◂"\tadd rsp,8\n" {} ⊢ sts0
										asm.add_st_s8 { ec0 sts0 } ⊢ ec0 
										$ p1 ⊢ 
										∐ _some◂p1 .
											$ { GV lb_n tav ec0 } ⊢ EE
											$ { apv eg0 eds ew0 } ⊢ FE
											stt_f_c {  EE FE vl p1 f_c } ⊢| 
										∐. _none◂{} . 
											asm.add_st_s8_im◂◂"\tRT_ERR 0xeeff_ec37\n" ec0 ⊢ ec0 			
											$ { GV lb_n tav ec0 } ⊢ EE
											$ { apv eg0 eds ew0 } ⊢ FE
											∎ {  FE EE ‹› }
						
						∐ ast.cn_b◂{} .
							ast.is_btm_ptn { %[ 0r ] is } ⊢ b 
							=+ b' 
							-- not btm 
							∐
								∎| 
							-- btm 
							∐. 
								$ EE ⊢ { GV lb_n tav ec0 }
								asm.add_st_s8_im◂◂"\tRT_ERR 0xfbbc_ec37\n" ec0 ⊢ ec0 			
								$ { GV lb_n tav ec0 } ⊢ EE
								∎ { FE EE ‹› }
						∐. ast.cn_a◂{ a la ya } .
							$ FE ⊢ { apv eg0 eds ew0 }
							$ EE ⊢ { GV lb_n tav ec0 }
							=+ a' 
								-- mk_arr 
								∐ 
									∎| 
								-- emt 
								∐ 
									∎| 
								-- ila2 
								∐ 
									∎| 
								-- rpc 
								∐ 
									∎| 
								-- app 
								∐ 
									∎| 
								-- prs 
								∐ 
									∎|
								-- id 
								∐ 
									$ is ⊢ iy 
									stt_jmp_axm {  { GV lb_n tav ec0 } { apv  eg0 eds ew0 } iy f_c } ⊢|
								-- dlt 
								∐ 
									∎| 
											-- cst 
								∐ 
									∎| 
								-- psc 
								∐ 
									∎| 
								-- synt 
								∐ 
									∎| 
								-- line 
								∐ 
									∎|
								-- grm 
								∐ 
									∎| 
								-- grm_ftr 
								∐ 
									∎| 
								-- ftr 
								∐ 
									∎| 
								-- inl 
								∐ 
									∎| 
								-- tj 
								∐ 
									∐ la ⊢ _cns◂{ k1 la }; la ⊢ _nil◂{} . 
										∐ k1 ⊢ RP.rcd◂l1; l1 ⊢ _cns◂{ kv l1 }; l1 ⊢ _cns◂{ ke l1 }; l1 ⊢ _nil◂{}; kv ⊢ RP.atm◂ast.k_arr◂kv . 
											∎| 
										∐. . 
											∎|
									∐. . 
										∎|
								-- clp 
								∐ 
									∎|
								-- cln 
								∐ 
									∎| 
								-- cls 
								∐ 
									∎| 
								-- cld 
								∐ 
									∎| 
								-- pf 
								∐ 
									GV.rpc is ⊢ { is id } 
									∐ la ⊢ _cns◂{ RP.atm◂ast.k_pf◂lf _nil◂{} }; is ⊢ RP.rcd◂sl . 
										exp_s8.ip0 { eds lf } ⊢ { eds pl } 
										GV.new GV ⊢ { GV rr } 
										$ rr ⊢ rr,rr0 
										$ RP.cns2◂{ id stt_v.s8_reg◂rr0 } ⊢ iy 
										exp_s8.lp0_c { %[ 0r ] sl } ⊢ { _ ar }
										_st◂◂"\tmov rdi,0\n" {} ⊢ sts0
										asm.add_st_s8 { ec0 sts0 } ⊢ ec0 
										exp_s8.lp1 { GV { eds ec0 } %[ 0r ] lb_n ar in0◂rr pl } ⊢ { GV { eds ec0 } ld lb_n _ }
										stt_jmp_axm { { GV lb_n tav  ec0 } { apv  eg0 eds ew0 } iy f_c } ⊢|
									∐. . 
										∎| 
								-- pf_x
								∐ 
									∐ la ⊢ _cns◂{ k0 la }; la ⊢ _nil◂{}; k0 ⊢ RP.atm◂a0; a0 ⊢ ast.k_pf◂lf; is ⊢ RP.rcd◂_cns◂{ m0 _cns◂{ x0 _cns◂{ RP.rcd◂sl _nil◂{} } } } . 
										exp_s8.ip0 { eds lf } ⊢ { eds pl } 
										$ eds ⊢ { SCM eds } 
										s8_to_hp { GV m0 ec0 } ⊢ { GV rm0 ec0 } 
										$ { SCM eds } ⊢ eds 
										r64_to_hp { GV x0 ec0 } ⊢ { GV rx0 ec0 }
										$ sl ⊢ sl,sl0 
										exp_s8.lp0_c { %[ 0r ] sl0 } ⊢ { _ ar }
										_st◂◂"\tmov rdi,0\n" {} ⊢ sts0
										asm.add_st_s8 { ec0 sts0 } ⊢ ec0 
										$ rm0 ⊢ rm0,rm00 
										$ rx0 ⊢ rx0,rx00 
										$ RP.cns3◂{ stt_v.s8_reg◂rm0 stt_v.r64_reg◂rx0 RP.rcd◂sl } ⊢ iy 
										exp_s8.lp1 { GV { eds ec0 } %[ 0r ] lb_n ar in1◂{ rm00 rx00 } pl } ⊢ { GV { eds ec0 } ld lb_n _ }
										stt_jmp_axm {  { GV lb_n tav ec0 } { apv  eg0 eds ew0 } iy f_c } ⊢|
									∐. . 
										∎|  
								-- clc_i 
								∐ 	
									∎|
								-- clc_o 
								∐ 
									∎|  
								-- clc_d 
								∐ 
									∎|  
								-- seq 
								∐ 
									∎| 
								-- alc_i 
								∐ 	
									∎|
								-- alc_o 
								∐ 
									∎|  
								-- mk_arr_x 
								∐ 
									∎| 
								-- push 
								∐ 
									ast.smt_ap ya ⊢ ya
									inst { %[ 1r ] ya } ⊢ { lv ya }
									newvar_l lv  ⊢ { lv v0 } 
									$ v0 ⊢ v0,v0_0,v0_1,v02
									T.unify.f { TX.t_imp◂{ TX.cns2◂{ v0_0 TX.arr_x◂v0_1 } TX.arr_x◂v02 } ya } ⊢ {} 
									_dec lv ⊢ lv 
									gen { lv v0 } ⊢ { lv yk } 	
									∐ is ⊢ RP.rcd◂_cns◂{ pk _cns◂{ RP.atm◂ast.hp◂r0 _nil◂{} } } . 
										$ GV ⊢ gn 
										alc_type_k.f_i { tav %[ 0r ] yk } ⊢ { tav c_n pa0 }
										$ gn ⊢ GV 
										GV.lod r0 ⊢ { r0 i0 } 
										$ i0 ⊢ i0,i00 
										asm.add_nd { ec0 asm.mov_op_glx◂{ asm.op.rx◂%[ asm.rx.rax ] i00 } } ⊢ ec0 
										inc_lb { lb_n ec0 } ⊢ { _ { lb_n ec0 } }
										$~ _^ ⊢ sc0 
											`	movzx rsi,BYTE [rax+7]
											`	mov rdi,0x0000_ffff_ffff_ffff 
											`	and rdi,QWORD [rax]
											`	add rdi,1
											`	bt rdi,rsi 
											` jnc .LB0 
											`	push rdi 
											`	add rsi,1 
											`	push rsi 
											`	xor rdi,rdi
											`	bts rdi,rsi 
											//
										asm.add_st_s8 { ec0 sc0 } ⊢ ec0 
										imul_im◂◂"rdi" { c_n ec0 } ⊢ { c_n ec0 }
										$~ _^ ⊢ sc0 
											`	lea rsi,[8+8*rdi]
											`	mov rdi,rax 
											` C_CALL_SF realloc
											`	mov rsi,QWORD [rax] 
											`	pop rsi 
											`	pop rdi 
											//
										asm.add_st_s8 { ec0 sc0 } ⊢ ec0 
										asm.add_nd { ec0 asm.mov_glx_op◂{ i0 asm.op.rx◂%[ asm.rx.rax ] } } ⊢ ec0 
										$~ _^ ⊢ sc0 
											`.LB0:
											`	mov QWORD [rax],rdi 
											`	mov BYTE [rax+7],sil
											`	sub rdi,1
											//
										asm.add_st_s8 { ec0 sc0 } ⊢ ec0 
										imul_im◂◂"rdi" { c_n ec0 } ⊢ { _ ec0 }
										asm.add_st_s8_im◂◂"\tlea DST_REG,[rax+8+8*rdi]\n" ec0 ⊢ ec0										
										mov_ptn2.to_sgm_ptn { ec0 { tav eds } pk pa0 } ⊢ { ec0 { tav eds } } 
										$ RP.atm◂ast.hp◂r0 ⊢ iy 
										stt_jmp_axm {  { GV lb_n tav  ec0 } { apv  eg0 eds ew0 } iy f_c } ⊢|
									∐. . 
										∎|
								-- pop 
								∐ 
									∎| 
									-- id_par 
								∐ 
									∎| 
										-- ctr 
								∐ 
									∐ la ⊢ _cns◂{ RP.atm◂o _nil◂{} } . 
										idx.app_ctr { o is } ⊢ iy 
										stt_jmp_axm {  { GV lb_n tav  ec0 } { apv  eg0 eds ew0 } iy f_c } ⊢|
									∐. . 
										∎|
								-- oom 
								∐
									∎| 
								-- moo 
								∐ 
									∎| 
								-- mcp 
								∐ 
									∎| 
								-- mcn 
								∐ 
									∎|
								-- mop 
								∐ 
									∎| 
								-- mt_e 
								∐ 
									∎| 
								-- mt_ne 
								∐ 
									∎| 
								-- mt_le 
								∐ 
									∎| 
								-- exn 
								∐ 
									∐ la ⊢ _cns◂{ RP.atm◂ast.k_r64◂ne _nil◂{} } . 
										$ is ⊢ _ 
										^ ne ⊢ _,ec1 
											`	add rsp,8 
											`	pop rdi 
											"\tmov rsi,0x" 0x' "\n" 
											`	jmp exn 
											// 
										asm.add_s8 { ec0 ec1 } ⊢ ec0 
										$ { apv eg0 eds ew0 } ⊢ FE
										$ { GV lb_n tav ec0 } ⊢ EE			
										∎ { FE EE ‹› }
									∐. . 
										∎|
								-- tj 
								∐ 
									∎| 
								-- tjn 
								∐ 
									∎| 
								-- tjc 
								∐ 
									∎|
								-- sqc 
								∐ 
									∎| 
								-- st 
								∐
									$ is ⊢ _ 
									∐ la ⊢ _cns◂{ k _nil◂{} } . 
										ast.s8_of_k k ⊢ s 
										EDS.lod_p { s lb_n eds } ⊢ { s lb_n eds { ls lb } } 
										^ lb ⊢ _,sc0 
											"LB_" 0d' //
										GV.new_i GV ⊢ { GV r i } 
										asm.add_nd { ec0 asm.mov_glx_op◂{ i asm.op.lt◂sc0 } } ⊢ ec0 
										$ stt_v.hp◂r ⊢ iy 
										stt_jmp_axm {  { GV lb_n tav  ec0 } { apv  eg0 eds ew0 } iy f_c } ⊢|										 	
									∐. . 
										∎|
								-- ccs 
								∐ 
									∎| 
								-- mk_stk 
								∐ 
									∎|
								-- ila 
								∐ 
									∐ is ⊢ RP.rcd◂l0; la ⊢ _cns◂{ RP.rcd◂_cns◂{ t_s _cns◂{ t_d  _cns◂{ c0 _nil◂{} } } } _nil◂{} } . 
										ila.n { t_s %[ 0r ] } ⊢ n_s
										ast.s8_of_k c0 ⊢ s0
										ila.sd { { GV l0 ⟦⟧ n_s t_d ec0 asm.e◂{} } %[ 0r ] } ⊢ { GV iy ec0 ec1 }
										$ eds ⊢ { SCM eds } 
										_ref.o s0 ⊢ { P { s0 lb } }
										$ s0 ⊢ s0,s00 
										_ref.i { P { s0 lb } } ⊢ _
										$ { SCM eds } ⊢ eds
										inc_x lb_n ⊢ { lb lb_n } 
										lb_etr { lb ec0 } ⊢ { _ ec0 } 
										asm.add_s8 { ec0 s00 } ⊢ ec0
										inc_x lb_n ⊢ { lb lb_n } 
										lb_etr { lb ec0 } ⊢ { _ ec0 } 
										asm.cct { ec0 ec1 } ⊢ ec0 
										stt_jmp_axm {  { GV lb_n tav ec0 } { apv  eg0 eds ew0 } iy f_c } ⊢|										 	
									∐. . 
										∎|	
								-- ila_n 
								∐ 
									∎|
								-- ila_i 
								∐ 
									∎|
								-- ila_c 
								∐ 
									∎| 
								-- ct 
								∐ 
									∎|
								-- ct_scf_d 
								∐ 
									∎|
								-- ct_scf_x 
								∐ 
									∎|
								-- hp_of 
								∐ 
									∐ is ⊢ RP.atm◂ast.hp◂r . 
										$ RP.cns2◂{ stt_v.r64_reg◂r RP.unt◂{} } ⊢ iy 
										stt_jmp_axm {  { GV lb_n tav ec0 } { apv  eg0 eds ew0 } iy f_c } ⊢|										 											
									∐ is ⊢ RP.atm◂ast.hp_im◂c . 
										RP.atm_a c ⊢ c 
										mov_ptn2.im_to_rax { ec0 { tav eds } c } ⊢ { ec0 { tav eds } }
										GV.new_i GV ⊢ { GV r i } 
										asm.add_nd { ec0 asm.mov_glx_op◂{ i asm.op.rx◂%[ asm.rx.rax ] } } ⊢ ec0 
										$ RP.cns2◂{ stt_v.r64_reg◂r RP.unt◂{} } ⊢ iy 
										stt_jmp_axm {  { GV lb_n tav ec0 } { apv  eg0 eds ew0 } iy f_c } ⊢|										 											
									∐ is ⊢ RP.atm◂ast.btm◂{} . 
										asm.add_st_s8_im◂◂"\tRT_ERR 0xffff_eb37\n" ec0 ⊢ ec0 
										$ { apv eg0 eds ew0 } ⊢ FE
										$ { GV lb_n tav ec0 } ⊢ EE
										∎ {  FE EE ‹› }			
									∐. . 
										∎| 
								-- hp_to 
								∐ 
									∐ is ⊢ RP.rcd◂_cns◂{ RP.atm◂ast.hp◂r _cns◂{ RP.rcd◂_nil◂{} _nil◂{} } } .
										ast.smt_ap ya ⊢ ya 
										inst { %[ 1r ] ya } ⊢ { lv ya }
										newvar_l lv  ⊢ {  lv v0 } 
										$ v0 ⊢ v0,v0_0,v1
										T.unify.f { TX.t_imp◂{ TX.cns2◂{ TX.r64◂{} TX.hp◂v0_0 } v1 } ya } ⊢ {} 
										_dec lv ⊢ lv 
										gen { lv v0 } ⊢ { lv v0 } 	
										$ GV ⊢ gn 
										$ v0 ⊢ v0,v00 
										alc_type_k.f_o { tav %[ 0r ] v00 } ⊢ { tav c_n pa0 } 
										$ gn ⊢ GV 
										∐ pa0 ⊢ _some◂RP.atm◂ast.hp◂_ .
											$ RP.atm◂ast.hp◂r ⊢ iy 
											stt_jmp_axm { { GV lb_n tav ec0 } { apv  eg0 eds ew0 } iy f_c } ⊢|										 																						
										∐. .
											∎|
									∐. .
										∎|
								-- hp_ini 
								∐ 
									$ RP.unt◂{} ⊢ iy 
									stt_jmp_axm { { GV lb_n tav  ec0 } { apv eg0 eds ew0 } iy f_c } ⊢|									
								-- id_T 
								∐ 
									∎| 
								-- prd 
								∐ 
									∐ is ⊢ RP.rcd◂_cns◂{ h _cns◂{ RP.rcd◂l _nil◂{} } } .
										$ RP.rcd◂_cns◂{ h l } ⊢ iy
										stt_jmp_axm { { GV lb_n tav  ec0 } { apv eg0 eds ew0 } iy f_c } ⊢|
									∐. .
										∎|
								-- ipr 
								∐ 
									∐ is ⊢ RP.rcd◂_cns◂{ h l } .
										$ RP.cns2◂{ h RP.rcd◂l } ⊢ iy
										stt_jmp_axm { { GV lb_n tav  ec0 } { apv  eg0 eds ew0 } iy f_c } ⊢|
									∐ is ⊢ RP.atm◂ast.btm◂{} . 
										asm.add_st_s8_im◂◂"\tRT_ERR 0xffff_eb47\n" ec0 ⊢ ec0 
										$ { apv eg0 eds ew0 } ⊢ FE
										$ { GV lb_n tav ec0 } ⊢ EE
										∎ {  FE EE ‹› }	
									∐. .
										∎|
								-- dlt_r64 
								∐ 
									$ is ⊢ _ 
									$ RP.unt◂{} ⊢ iy
									stt_jmp_axm {  { GV lb_n tav ec0 } { apv eg0 eds ew0 } iy f_c } ⊢|
								-- cnc_lod
								∐ 
									r64_to_hp { GV is ec0 } ⊢ { GV r0 ec0 } 
									ast.smt_ap_err◂◂44r ya ⊢ t
									inst { %[ 1r ] t } ⊢ { lv t }
									newvar_l lv  ⊢ {  lv v0 } 
									$ v0 ⊢ v0,v0_0  
									T.unify.f { TX.t_imp◂{ TX.r64◂{} TX.cns2◂{ TX.r64◂{} v0_0 } } t } ⊢ {} 
									_dec lv ⊢ lv 
									gen { lv v0 } ⊢ {  lv yk } 
									$ GV ⊢ gn 								
									alc_type_k.f_o { tav %[ 0r ] yk } ⊢ { tav c_n pa0 }
									∐ pa0 ⊢ _some◂pa0 .
										$ gn ⊢ GV 
										GV.lod r0 ⊢ { r0 i0 } 
										$ i0 ⊢ i0,i1 
										asm.add_nd { ec0 asm.mov_op_glx◂{ asm.op.rx◂%[ asm.rx.rax ] i0 } } ⊢ ec0 										
										^ c_n ⊢ _,sc0 
											`	push SRC_REG 
											`	mov SRC_REG,rax
											//
										asm.add_s8 { ec0 sc0 } ⊢ ec0 
										lod_sgm.ptn { { ec0 GV } pa0 } ⊢ { { ec0 GV } pa1 } 
										asm.add_st_s8_im◂◂"\tpop SRC_REG\n" ec0 ⊢ ec0 
										$ RP.cns2◂{ stt_v.r64_reg◂r0 pa1 } ⊢ iy
										stt_jmp_axm { { GV lb_n tav ec0 } { apv eg0 eds ew0 } iy f_c } ⊢|
									∐. .
										∎|
								-- cnc_sto 
								∐ 
									ast.smt_ap_err◂◂45r ya ⊢ t
									inst { %[ 1r ] t } ⊢ { lv t }
									newvar_l lv  ⊢ {  lv v0 } 
									$ v0 ⊢ v0,v0_0
									T.unify.f { TX.t_imp◂{ TX.cns2◂{ TX.r64◂{} v0_0 } TX.r64◂{} } t } ⊢ {} 
									_dec lv ⊢ lv 
									gen { lv v0 } ⊢ {  lv yk } 
									∐ is ⊢ RP.rcd◂_cns◂{ r0  _cns◂{ pk _nil◂{} } } .
										r64_to_hp { GV r0 ec0 } ⊢ { GV r0 ec0 }
										$ yk ⊢ yp0,yp1 
										$ GV ⊢ gn 
										alc_type_k.f_o { tav %[ 0r ] yp0 } ⊢ { tav c_n pa0 }
										$ gn ⊢ GV 
										$ pa0 ⊢
										∐ _some◂pa0 . 
											GV.lod r0 ⊢ { r0 i0 }
											$ i0 ⊢ i0,i1 
											asm.add_nd { ec0 asm.mov_op_glx◂{ asm.op.rx◂%[ asm.rx.rax ] i0 } } ⊢ ec0 										
											^ c_n ⊢ _,sc0 
												`	push DST_REG
												`	mov DST_REG,rax
												// 
											asm.add_s8 { ec0 sc0 } ⊢ ec0 
											mov_ptn2.to_sgm_ptn { ec0 { tav eds } pk pa0 } ⊢ { ec0 { tav eds } } 
											asm.add_st_s8_im◂◂"\tpop DST_REG\n" ec0 ⊢ ec0 
											$ stt_v.r64_reg◂r0 ⊢ iy 
											stt_jmp_axm {  { GV lb_n tav  ec0 } { apv  eg0 eds ew0 } iy f_c } ⊢|
										∐. _none◂{} .
											T.pnt_type_k yp1 ⊢ s 
											_emt s ⊢ _ 
											∎|
									∐. . 
										∎|  
								-- cnc_siz 
								∐ 
									∎|
								-- dlt_arr_lc 
								∐ 
									∎| 
								-- dlt_Clr_lc 
								∐ 
									∎| 
								-- opl 
								∐ 
									∎|
								-- hp_dlt 
								∐ 
									$ is ⊢ _ 
									$ RP.unt◂{} ⊢ iy 
									stt_jmp_axm { { GV lb_n tav ec0 } { apv eg0 eds ew0 } iy f_c } ⊢|									
								-- ct_if 
								∐ 
									∎|
								-- ct_eq 
								∐ 
									∎|
								-- rmv 
								∐ 
									∎|
								∐.  
									^ a ⊢ _,ee1 
										"; ##0x" 0x' ".. ⊢ ..\n"
										"\tcall ETR_" 0d' "\n" //
									_emt.f ee1 ⊢ _ 
									∎|
					@.stt_mtc_rb { is { m nxp } } 
						$ m ⊢ 
						∐ mop◂{ { n x y } brp } .
							$ x ⊢ x,x0 
							$ y ⊢ y,y0 
							_mk_stk◂◂stt_mtc_RV { { n RP.atm◂ast.btm◂{} } { x0 y0 is } } ⊢ { n is } 
							$ brp ⊢ brp,brp0 
							∎ { { brp0 is } { mop◂{ { n x y } brp } nxp } }
						∐ mtj◂_ . 
							∎| 
						∐. mt◂{ t { n x y } brp } . 
							$ brp ⊢ brp,brp0 
							∎ { { brp0 is } { mt◂{ t { n x y } brp } nxp } } 									
					@.stt_mtc { {  S m } ox f_c FE EE is }
						$ m ⊢ 
						∐ nm_n◂{} . 
							$ S ⊢ 
							∐ _cns◂{ rbp S } .
								_ref.f◂◂stt_mtc_rb { is rbp } ⊢ { { brp0 is } _ } 
								stt_mtc { {  S brp0 } ox f_c FE EE is } ⊢| 
							∐. _nil◂{} . 
								$ is ⊢ is,is0 
								ast.is_btm_ptn { %[ 0r ] is0 } ⊢ b 
								$ EE ⊢ { GV lb_n tav ec0 }
								=+ b' 
								-- not btm 
								∐
									ast.pnt.rt { GV rp8.e◂{} is } ⊢ { GV s } 
									rp8.to_s8 s ⊢ s 
									--asm.to_s8 ec0 ⊢ ss 
									--_emt.f ss ⊢ _ 
									_emt.f s ⊢ _ 
									_emt_im.f◂◂"STT_NON_EXH_ERR:" {} ⊢ {} 
									∎|
								-- btm 
								∐. 
									asm.add_st_s8_im◂◂"\tRT_ERR 0xfbbb_dd37\n" ec0 ⊢ ec0 			
									$ { GV lb_n tav ec0 } ⊢ EE
									∎ {  FE EE ‹› }
							
						∐ nm_e◂o .
							stt_ir {  FE EE ox f_c o is } ⊢| 						
						∐. nm_m◂m .		
							_ref.lod m ⊢ { m { mo nxp } }
							$ mo ⊢ 
							∐ mtj◂{ { _ x y } v } . 
								∐ y ⊢ RP.rcd◂_cns◂{ RP.atm◂stt_r◂yx _cns◂{ _ _nil◂{} } } . 
									$ EE ⊢ { GV lb_n tav ec0 }
									idx.lod_ply { yx { x is } } ⊢ { yx is o } 
									smt_err◂◂12r o ⊢ x 
									ast.r64_of_rt x ⊢ x 
									$ x ⊢ 
									∐ ast.im_of◂i . 
										$ { GV lb_n tav ec0 } ⊢ EE
										_arr_len v ⊢ { v vl } 
										∐ vl'=<i' . 
											stt_mtc { {  S nxp } ox f_c FE EE is } ⊢| 											
										∐. . 
											lod_q { v i } ⊢ { _ _ p1 }
											stt_mtc { {  S p1 } ox f_c FE EE is } ⊢| 
									∐. ast.hp_of◂x . 
										_arr_len v ⊢ { v l } 
										inc_x lb_n ⊢ { lb0 lb_n } 
										inc_x lb_n ⊢ { lb1 lb_n } 
										stt_jt { lb0 l %[ 0r ] asm.e◂{} } ⊢ { lb0 l ec1 } 
										GV.lod x ⊢ { _ x } 
										asm.add_nd { ec0 asm.mov_op_glx◂{ asm.op.rx◂%[ asm.rx.rax ] x } } ⊢ ec0 
										^ lb0,lb1,l ⊢ lb0,lb1,l,sc0  
											"\tcmp rax,0x" 2x' "\n" 
											"\tjge LB_" 1d' "\n" 
											"\tjmp QWORD [LB_" 0d' "+8*rax]\n"
											"LB_" 0d' ": dq " // 
										asm.add_s8 { ec0 sc0 } ⊢ ec0
										asm.cct { ec0 ec1 } ⊢ ec0  
										$ { GV lb_n tav ec0 } ⊢ EE
										stt_tj { { is S v nxp lb0 lb1 %[ 0r ] l } ox f_c FE  EE } ⊢| 						
								∐. . 
									∎|
							∐ mop◂{ { nc ps pm } pb } . 
								idx.ini_n nc ⊢ { _ AV } 
								stt_mtc_lp { { is pm ps m S pb nxp } ox f_c AV ⟦⟧ FE  EE } ⊢| 				
							∐. mt◂{ t { n x y } pb } . 
								∐ y ⊢ RP.rcd◂_cns◂{ RP.rcd◂_cns◂{ v0 _cns◂{ v1 _nil◂{} } } _cns◂{ _ _nil◂{} } } .
									$ EE ⊢ { GV lb_n tav ec0 } 
									stt_mtc_mt_0 { v0 v1 x is } ⊢ { v0 v1 is }
									inc_x lb_n ⊢ { lb_f lb_n }			 
									stt_mtc_test { GV t lb_n lb_f v0 v1 ec0 } ⊢ { GV lb_n lb_f ec0 }
									$ ox ⊢  ox,ox0 
									$ f_c ⊢ f_c,f_c0
									GV.rpc_d is ⊢ { is is0 } 
									$ S ⊢ S,S0 
									$ ⟦ m < S0 ⟧ ⊢ S0
									stt_mtc { {  S0 nxp } ox0 f_c0 FE { GV lb_n tav  ec0 } is0 } ⊢ {  FE { GV lb_n tav  ec0 } _ }
									lb_etr { lb_f ec0 } ⊢ { lb_f ec0 } 
									stt_mtc { {  S pb } ox f_c FE { GV lb_n tav  ec0 } is } ⊢| 									
								∐. . 
									∎|
				@.stt_tj { { is S v r lb0 lb1 i l } ox f_c FE  { GV lb_n tav  ec0 } } 				
					∐ i'=l' . 
						lb_etr { lb1 ec0 } ⊢ { lb1 ec0 }
						stt_mtc { { S r } ox f_c FE { GV lb_n tav  ec0 } is } ⊢| 									
					∐. . 
						lb_i_etr { lb0 i ec0 } ⊢ { lb0 i ec0 } 
						exc_q { v i nm_n◂{} } ⊢ { v i mi }
						$ ox ⊢  ox,ox0 
						$ f_c ⊢ f_c,f_c0
						GV.rpc_d is ⊢ { is is0 } 
						$ S ⊢ S,S0 
						stt_mtc { { S0 mi } ox0 f_c0 FE { GV lb_n tav  ec0 } is0 } ⊢ {  FE { GV lb_n tav  ec0 } _ }
						_inc i ⊢ i 
						stt_tj { { is S v r lb0 lb1 i l } ox f_c FE  { GV lb_n tav  ec0 } } ⊢|						
				@.stt_mtc_lp_lst { { k l0 l1 ps m0 S pb p1 } ox f_c AV K FE  EE }
					∐ l0 ⊢ _cns◂{ isp l0 }; l1 ⊢ _cns◂{ mp l1 } .
						$ ⟦ K_l◂{ k l0 l1 } < K ⟧ ⊢ K
						stt_mtc_lp { { isp mp ps m0 S pb p1 } ox f_c AV K FE  EE } ⊢|
					∐ l0 ⊢ _nil◂{}; l1 ⊢ _nil◂{} . 
						lst.rev k ⊢ k 
						stt_mtc_K { { RP.rcd◂k ps m0 S pb p1 } ox f_c AV K FE  EE } ⊢|
					∐. . 
						∎| 
				@.stt_mtc_K { { pi ps m0 S pb p1 } ox f_c AV K FE  EE } 
					$ K ⊢ 
					∐ _cns◂{ k K } .
						$ k ⊢ 
						∐ K_l◂{ k l0 l1 } . 
							$ ⟦ pi < k ⟧ ⊢ k 
							stt_mtc_lp_lst { { k l0 l1 ps m0 S pb p1 } ox f_c AV K FE  EE } ⊢| 
						∐. K_a◂{ ia na } . 
							stt_mtc_K { { RP.atm◂stt_a◂{ ia na pi } ps m0 S pb p1 } ox f_c AV K FE  EE } ⊢|
					∐. _nil◂{} .
						idx.csm_tpl_ptn { AV ps } ⊢ { _ is } 
						$ ⟦ m0 < S ⟧ ⊢ S 
						stt_mtc { {  S p1 } ox f_c FE EE is } ⊢| 
				@.stt_mtc_lp { { isp mp ps m0 S pb p1 } ox f_c AV K FE  EE }
					$ mp ⊢ 
					∐ RP.rcd◂l1 . 
						$ isp ⊢ 
						∐ RP.rcd◂l0 . 
							stt_mtc_lp_lst { { ⟦⟧ l0 l1 ps m0 S pb p1 } ox f_c AV K FE  EE } ⊢|
						∐. RP.atm◂a0 . 		
							∐ a0 ⊢ ast.btm◂{} . 
								$ EE ⊢ { GV lb_n tav  ec0 } 
								asm.add_st_s8_im◂◂"\tRT_ERR 0xffff_2e17\n" ec0 ⊢ ec0
								∎ {  FE { GV lb_n tav ec0 } ‹› }
							∐. . 
								∎| 
					∐. RP.atm◂a1 .
						$ a1 ⊢ 
						∐ IR.stt_r◂r1 . 
							idx.set { AV r1 isp } ⊢ { AV r1 }
							stt_mtc_K { { RP.atm◂ stt_r◂r1 ps m0 S pb p1 } ox f_c AV K FE  EE } ⊢|
						∐ IR.stt_v◂_ . 
							∎| 
						∐. stt_a◂{ ia1 na1 mpa1 } . 
							ast.agl_rt isp ⊢ a 
							$ a ⊢ 
							∐ ast.agl_s◂{ ia0 na0 pa0 } . 
								∐ ia0'=ia1' . 
									$ ⟦ K_a◂{ ia0 na0 } < K ⟧ ⊢ K
									stt_mtc_lp { { pa0 mpa1 ps m0 S pb p1 } ox f_c AV K FE  EE } ⊢|
								∐. . 
									stt_rb_K { RP.atm◂ast.stt_adt◂{ ia0 na0 pa0 } AV K } ⊢ { is _ } 
									stt_mtc { {  S pb } ox f_c FE EE is } ⊢| 
							∐ ast.agl_d◂{ { lx0 lx1 } ri rd } .
								$ RP.atm◂stt_a◂{ ia1 na1 mpa1 } ⊢ mpa1 
								$ EE ⊢ { GV lb_n tav  ec0 } 
								dta_n { tav lx0 } ⊢ { tav lx0 { n vl1 kl1 } } 
								T.iug_axm { vl1 kl1 lx1 } ⊢ lx1 
								$ lx1 ⊢ hl 
								$ n ⊢ n,n0 
								mk_jmp_tbl { lb_n n0 } ⊢ { lb_n sj lbl } 
								inc_x lb_n ⊢ { lb0 lb_n }
								GV.lod ri ⊢ { _ ri } 
								asm.add_nd { ec0 asm.mov_op_glx◂{ asm.op.rx◂%[ asm.rx.rdi ] ri } } ⊢ ec0 
								^ lb0,sj ⊢ lb0,_,sc0  
									"\tjmp QWORD [LB_" 0d' "+8*rdi]\n"
									"LB_" 0d' ": dq " 1' "\n" //
								asm.add_s8 { ec0 sc0 } ⊢ ec0  
								stt_obs_i { { rd mpa1 ps m0 S pb p1 } { GV lb_n tav  } ec0 lbl hl %[ 0r ] n ox f_c AV K FE  } ⊢|
							∐. ast.agl_b◂{} . 
								$ EE ⊢ { GV lb_n tav  ec0 } 
								asm.add_st_s8_im◂◂"\tRT_ERR 0xfffe_2e17\n" ec0 ⊢ ec0
								∎ {  FE { GV lb_n tav  ec0 } ‹› }
				@.stt_rb_K_l { { AV l0 } k } 
					$ k ⊢ 
					∐ _cns◂{ pi k } . 
						rt_of_mp_T◂◂idx.get { AV pi } ⊢ { AV pi } 
						stt_rb_K_l { { AV ⟦ pi < l0 ⟧ } k } ⊢| 
					∐. _nil◂{} . 
						∎ { AV l0 }
				@.stt_rb_K { pi AV K } 
					$ K ⊢ 
					∐ _cns◂{ k K } .
						$ k ⊢ 
						∐ K_l◂{ k l0 _ } . 
							stt_rb_K_l { { AV ⟦ pi < l0 ⟧ } k } ⊢ { AV l0 } 
							stt_rb_K { RP.rcd◂l0 AV K } ⊢|
						∐. K_a◂{ ia na } . 
							stt_rb_K { RP.atm◂ast.stt_adt◂{ ia na pi } AV K } ⊢|
					∐. _nil◂{} .
						∎ { pi AV } 
				
					@.stt_obs_i { { rd mpa1 ps m0 S pb p1 } { GV lb_n tav  } e0 lbl hl i n ox f_c AV K FE  }
						∐ lbl ⊢ p_cns◂{ lbi lbl }; hl ⊢ _cns◂{ h hl } .
							lb_etr { lbi e0 } ⊢ { _ e0 } 
							$ rd ⊢ rd,rd0 
							stt_alc_hp { tav GV e0 rd0 h } ⊢ { tav GV e0 pi } 
							$ pi ⊢ 
        		  ∐ _none◂{} . 
								_inc i ⊢ i 
								asm.add_st_s8_im◂◂"\tRT_ERR 0xbbff_2e17\n" e0 ⊢ e0
								stt_obs_i { { rd mpa1 ps m0 S pb p1 } { GV lb_n tav } e0 lbl hl i n ox f_c AV K FE  } ⊢|
							∐. _some◂pi . 
								$ i ⊢ i,i0 
							  _inc i ⊢ i 
							  $ n ⊢ n,n0 
							  $ K ⊢ K,K0 
							  $ mpa1 ⊢ mpa1,mpa1_0
								$ ox ⊢  ox,ox0 
								$ f_c ⊢ f_c,f_c0
								$ ps ⊢ ps,ps0 
								$ pb ⊢ pb,pb0 
								$ p1 ⊢ p1,p10 
								$ m0 ⊢ m0,m00
								idx.rpc AV ⊢ { AV AV0 } 
								$ S ⊢ S,S0 
								$ { GV lb_n tav e0 } ⊢ EE 
								stt_mtc_lp { { RP.atm◂ast.stt_adt◂{ i0 n0 pi } mpa1_0 ps0 m00 S0 pb0 p10 } ox0 f_c0 AV0 K0 FE  EE } ⊢ {  FE { GV lb_n tav  e0 } _ }
								stt_obs_i { { rd mpa1 ps m0 S pb p1 } { GV lb_n tav  } e0 lbl hl i n ox f_c AV K FE  } ⊢|
						∐ lbl ⊢ p_end◂lbi; hl ⊢ _cns◂{ h _ } .
							lb_etr { lbi e0 } ⊢ { _ e0 } 
							stt_alc_hp { tav GV e0 rd h } ⊢ { tav GV e0 pi } 
							$ pi ⊢ 
        		  ∐ _none◂{} . 
								_inc i ⊢ i 
								asm.add_st_s8_im◂◂"\tRT_ERR 0xbbfe_2e17\n" e0 ⊢ e0
								$ { GV lb_n tav  e0 } ⊢ EE 
								∎ {  FE EE ‹› }
							∐. _some◂pi . 
								$ { GV lb_n tav e0 } ⊢ EE 
							  stt_mtc_lp { { RP.atm◂ast.stt_adt◂{ i n pi } mpa1 ps m0 S pb p1 } ox f_c AV K FE  EE } ⊢|
						∐. . 
							∎|
			∎∎			
			∎∎
		§ @.rcd_sig_lp { n N e } 
			∐ n'=N' . 
				∎ e 
			∐. . 
				^ n ⊢ n,s 
					"\tsig_alc_rcd_" 0d' ":\n" 
					"\tmov rbx,0x" 0x' "\n" 
					"\tjmp sig_alc_rcd\n" // 
				asm.add_s8 { e s } ⊢ e 
				_inc n ⊢ n 
				rcd_sig_lp { n N e } ⊢| 
		
		§ RCD_N = 64r 
		§ emt_rtm { m0 aa0 a0 } 
			slv_file { aa0 a0 } ⊢ { _ _  SCM MV LCV tx_n { _ ns_m ns_e _ } EC }
			$ MV ⊢ { mmv mev mtv apv mv_n } 
			slv_ns_e { m0 { mmv mev } { ns_m ns_e } ⟦⟧ } ⊢ { { mmv mev } _ _ i_e }
			_emt_im.f◂◂"emt_rtm D0" {} ⊢ {} 
			
			$ LCV ⊢ { tav }
			$ EC ⊢ { _ dd ep0 }
			s8_of_s8_lst ep0 ⊢ sep0 
			_emt_s8_to_im◂◂"SGN_SH.txt" sep0 ⊢ _ 

			_st◂◂"section .data\n%include \"DATA.s\"\n" {} ⊢ eds
			$ asm.of_st_s8◂eds ⊢ eds 
			$ %[ 0r ] ⊢ lb_n 
			
			_emt_im.f◂◂"emt_rtm D1" {} ⊢ {} 
			slv.ct_ptn { { ⟦⟧ %[ 1r ] apv } RP.atm◂ast.k_name◂i_e } ⊢ { { al lv apv } m yk }
			_emt_im.f◂◂"emt_rtm D2" {} ⊢ {} 
			$ yk ⊢ yk,yk0 
			T.unify.f { yk0 TX.t_imp◂{ TX.arr◂TX.s8◂{} TX.unt◂{} } } ⊢ {} 
			_dec lv ⊢ lv 
			gen { lv yk } ⊢ {  _ yk }
			gen_dlt_lst { %[ 0r ] al } ⊢ lv
								
			_emt_im.f◂◂"emt_rtm D3" {} ⊢ {} 
			asm.add_st_s8_im◂◂"RTM_0:\n" asm.e◂{} ⊢ ec1 
			$ asm.e◂{} ⊢ ew0 

			$ { %[ 0xffffffffffffffffr ] { %[ 0r ] ⟦⟧ ⟦⟧ } f_seq◂{} } ⊢ f_c
			inl.cst_evl_gl { { apv SCM tav m } } ⊢ { SCM apv tav m } 
			_emt_im.f◂◂"emt_rtm D4" {} ⊢ {} 

			_mk_arr_x { %[ 1r ] rf_k◂{} } ⊢ { _ _ rfv } 
			$ { %[ CST.MAX ] rfv } ⊢ rfv 
			mk_ir.f { { SCM apv rfv tav } m } ⊢ { { SCM apv { _ rfv } tav } o }
			$ { SCM eds } ⊢ eds 
			_emt_im.f◂◂"emt_rtm D5" {} ⊢ {} 
			$ %[ 127r ] ⊢ GV
			GV.new GV ⊢ { GV i } 
			$ stt_v.arr_reg◂i ⊢ ax0 
			asm.ini_buf {} ⊢ eg0 
			$ { { %[ CST.MAX ] rfv } apv eg0 eds ew0 } ⊢ FE
			$ { GV lb_n tav ec1 } ⊢ EE	
			gnr.lc_code.stt_ir { FE EE ‹› f_c o ax0 } ⊢ {  FE EE _ } 
			$ EE ⊢ { glv_n _ _ ec1 }
			$ FE ⊢ { _ eg0 eds ew0 }		
			_emt_im.f◂◂"emt_rtm D6" {} ⊢ {} 			
			asm.of_buf eg0 ⊢ eg0 
			$ eds ⊢ { _ eds } 
			asm.add_st_s8_im◂◂"\tmov QWORD [EXIT],1\n\tC_CALL exit\n" ec1 ⊢ ec1			
			asm.cct { ec1 ew0 } ⊢ ec1  
			$~ _^ ⊢ sc1 
				`section .text
				`global _start
				`_start:
				`%include "START.s"
				`	jmp RTM_0
					//
			asm.add_st_s8 { asm.e◂{} sc1 } ⊢ ec0
			asm.cct { ec0 eg0 } ⊢ ec0 
			asm.cct { ec0 ec1 } ⊢ ec0 
			_emt_im.f◂◂"emt_rtm D4" {} ⊢ {} 
			--_emt glv_n ⊢ glv_n
			^ glv_n ⊢ glv_n,sc0 
				"GLV_N=" 0d' "\n" // 
			_emt sc0 ⊢ _ 
			$ %[ RCD_N ] ⊢ ssN 
			^ ssN,glv_n ⊢ ssN,_,eh 
				`%include "HD.s"  
				`;	v.0
				"%define RCD_N " 0d' "\n"
				"%define GLV_N " 1d' "\n" 
				` 
				`section .bss
				`%include "BSS.s"
				
				`
				//
			$ asm.of_s8◂eh ⊢ eh 
			
			asm.cct { eh eds } ⊢ eds 
			asm.cct { eds ec0 } ⊢ ec0
			rcd_sig_lp { %[ 1r ] ssN ec0 } ⊢ ec0 
			_st◂◂"\n%include \"TEXT.s\"\n" {} ⊢ ec1 
			asm.add_st_s8 { ec0 ec1 } ⊢ ec0 
			∎ ec0
		
		∎∎
∎∎
§ @.cat_to { o l } 
	$ l ⊢ 
	∐ _cns◂{ i l } . 
		^ i,o ⊢ i,o,s 
			"cat " 0' "  >> " 1' "\n" // 
		_cd s ⊢ _ 
		cat_to { o l } ⊢| 
	∐. _nil◂{} . 
		∎ o 

§ @.L0 { a l i } 
	∐ l'=i' . 
		∎ { a l } 
	∐. . 
		lod_q { a i } ⊢ { a i fn } 
		^ fn ⊢ _,xc0 
			"cat " 0' " >> SH.mdls\n" // 
		_cd xc0 ⊢ _ 
		_inc i ⊢ i 
		L0 { a l i } ⊢| 
§ E { fn0 m0 }
	_in_fn fn0 ⊢ { _ sf1 } 
	_emt_im.f◂◂"E D0" {} ⊢ {} 
	_in_fn %[ "_ARCH.mdls" ] ⊢ { _ sf0 }
	_prs◂◂OpADL.syntax.file { sf0 %[ 0r ] } ⊢ { _ _ aa0 }
	$ aa0 ⊢ 
	∐ _some◂aa0 . 
		$ aa0 ⊢ 
		∐ OpADL.syntax.prs_vld◂aa0 .		
			_prs◂◂OpADL.syntax.file { sf1 %[ 0r ] } ⊢ { _ r0 a0 } 
			_emt.f r0 ⊢ _ 
			$ a0 ⊢ 
			∐ _some◂a0 . 
				$ a0 ⊢ 
				∐ OpADL.syntax.prs_vld◂a0 . 
					_emt_im.f◂◂ "opxcc:prs_vld" {} ⊢ {} 
					OpADL.ns.emt_rtm { m0 aa0 a0 } ⊢ ec0		
					--\
					_emt_im.f◂◂"opxcc:asm generated" {} ⊢ {} 
					OpADL.ns.asm.to_s8 ec0 ⊢ sec0
					_cd %[ "rm SH.mdls.s\ntouch SH.mdls.s\n" ] ⊢ _ 
					_emt_s8_to_im◂◂"SH.mdls.s" sec0 ⊢ _ 
					_emt_im.f◂◂"opxcc:wrote to SH.mdls.s" {} ⊢ {} 

					^ _ ⊢ sx0 
						`yasm -g dwarf2 -f elf64 SH.mdls.s -o out.o
    				`gcc -pthread -lpthread -Wall stub.c out.o -nostartfiles -no-pie -pg -g -O2 -o out.exe 
						// 
					_cd sx0 ⊢ _  
					_emt_im.f◂◂"opxcc:compiled to out.exe" {} ⊢ {} 
					∎ {} 
					--/
					--∎|
				∐. OpADL.syntax.prs_err◂e0 .
					OpADL.syntax.pnt_prs_err e0 ⊢ es0 
					_emt.f es0 ⊢ _  
					∎|
			∐. _none◂{} . 
				_emt_im.f◂◂"opxcc:_none" {} ⊢ {} 
				∎| 
		∐. OpADL.syntax.prs_err◂e0 .
			_emt_im.f◂◂"_ARCH.mdls:prs_err" {} ⊢ {} 
			OpADL.syntax.pnt_prs_err e0 ⊢ es0 
			_emt.f es0 ⊢ _  
			∎|
	∐. _none◂{} . 
		_emt_im.f◂◂"opxcc:_ARCH.mdls:_none" {} ⊢ {} 
		∎| 
			
§§ args 
  § f e 
    ∎ e 
  § f a 
	  _arr_len a ⊢ { a l } 
    lod_q { a %[ 1r ] }  ⊢ { a _ f0 }
    ∐ l'=<2r . 
      ∎ { f0 OpADL.ast.fst_n◂%[ "main" ] } 
    ∐. . 
      lod_q { a %[ 2r ] }  ⊢ { a _ e0 }
      f %[ "-e" ] ⊢ ee 
      ∐ e0'=ee' .
        lod_q { a %[ 3r ] }  ⊢ { _ _ m0 }
        _prs◂◂OpADL.syntax.name { m0 %[ 0r ] } ⊢ { _ _ m0 } 
        ∐ m0 ⊢ _some◂m0 . 
          ∎ { f0 m0 }
        ∐. . 
          ∎| 
      ∐. .  
        ∎| 

  ∎∎
§ main args
	_emt.arr args ⊢ args
	_emt_im.f◂◂"E 0" {} ⊢ {} 
  args.f args ⊢ { f0 m0 }
	_emt_im.f◂◂"E 1" {} ⊢ {} 
	E { f0 m0 } ⊢ _  
	∎ {}	
§ c0◂{ a b } = { a b } 

§ Main0 a 
  lod_q { a %[ 0r ] } ⊢ { a _ s0 } 
  _s8_len s0 ⊢ _ 
  $ %[ "foooo!!!jioohohio" ] ⊢ s
  OpADL.ns.asm.main {} ⊢ {}
  ∎ {}  
§ Main1 a 
  $ OpADL.ns.asm.e◂{} ⊢ B 
  OpADL.ns.asm.mlc_buf %[ 4r ] ⊢ s
  OpADL.ns.asm.to_s8_i { B s %[ 0r ] } ⊢ { s l }
  ∎ {}  
§ main10 _ 
	_mk_arr_x { %[ 1r ] { OpADL.RP.unt◂{} OpADL.RP.unt◂{} } } ⊢ { _ _ V } 
  ∎| 
   